{
  "violations": {
    "project_root": ".",
    "files_analyzed": 884,
    "total_violations": 1295,
    "violation_counts": {
      "file_loc": 53,
      "class_loc": 401,
      "function_loc": 316,
      "line_length": 518,
      "print_statement": 0,
      "syntax_error": 7,
      "analysis_error": 0
    },
    "files": [
      {
        "file": "discord_commander.py",
        "lines": 251,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "V3_VALIDATION_TESTING_FRAMEWORK.py",
        "lines": 36,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "add_sample_devlogs.py",
        "lines": 162,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "check_agent5_inbox.py",
        "lines": 69,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "check_v2_compliance.py",
        "lines": 24,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "final_demo.py",
        "lines": 54,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "query_all_devlogs.py",
        "lines": 105,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "setup_discord_commander.py",
        "lines": 41,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "comprehensive_devlog_upload.py",
        "lines": 38,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "demo_captain_knowledge_queries.py",
        "lines": 54,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "create_combined_export.py",
        "lines": 30,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "delete_static_documentation.py",
        "lines": 23,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "demonstrate_database_queries.py",
        "lines": 23,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "demo_current_mission_status.py",
        "lines": 23,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "demo_cycle_based_operations.py",
        "lines": 22,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "demo_onboarding_knowledge.py",
        "lines": 29,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "devlog_inventory.py",
        "lines": 20,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "run_discord_tests.py",
        "lines": 96,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "demonstrate_vector_integration.py",
        "lines": 252,
        "violations": [
          {
            "type": "line_length",
            "file": "demonstrate_vector_integration.py",
            "line": 104,
            "message": "Line 104 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "test_multichat_integration.py",
        "lines": 165,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "discord_bot_config.py",
        "lines": 69,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "github_agent_client_standalone.py",
        "lines": 111,
        "violations": [
          {
            "type": "function_loc",
            "file": "github_agent_client_standalone.py",
            "line": 55,
            "message": "Function 'main' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "discord_commander_fixed.py",
        "lines": 94,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "get_real_tesla_price.py",
        "lines": 201,
        "violations": [
          {
            "type": "line_length",
            "file": "get_real_tesla_price.py",
            "line": 181,
            "message": "Line 181 has 130 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "get_real_tesla_price.py",
            "line": 145,
            "message": "Function 'main' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "ingest_all_onboarding_docs.py",
        "lines": 60,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "discord_commander_modular.py",
        "lines": 149,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "ingest_captain_docs.py",
        "lines": 57,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "ingest_existing_documentation.py",
        "lines": 346,
        "violations": [
          {
            "type": "function_loc",
            "file": "ingest_existing_documentation.py",
            "line": 171,
            "message": "Function 'ingest_security_documentation' has 53 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "ingest_existing_documentation.py",
            "line": 226,
            "message": "Function 'ingest_agent_guidelines' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "integration_test.py",
        "lines": 274,
        "violations": [
          {
            "type": "line_length",
            "file": "integration_test.py",
            "line": 71,
            "message": "Line 71 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "integration_test.py",
            "line": 84,
            "message": "Line 84 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "integration_test.py",
            "line": 87,
            "message": "Line 87 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "quality_gates.py",
        "lines": 57,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "reduce_md_files.py",
        "lines": 258,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "real_agent_coordination.py",
        "lines": 69,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "run_tests.py",
        "lines": 84,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "run_devlog_analytics_system.py",
        "lines": 30,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "run_discord_commander.py",
        "lines": 32,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_orchestrator.py",
        "lines": 34,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "switch_agent_mode.py",
        "lines": 43,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "temp_message_sender.py",
        "lines": 63,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "test_all_data_sources.py",
        "lines": 74,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "test_all_functionality.py",
        "lines": 235,
        "violations": [
          {
            "type": "line_length",
            "file": "test_all_functionality.py",
            "line": 51,
            "message": "Line 51 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "test_all_functionality.py",
            "line": 61,
            "message": "Line 61 has 124 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "test_dashboard.py",
        "lines": 132,
        "violations": [
          {
            "type": "line_length",
            "file": "test_dashboard.py",
            "line": 93,
            "message": "Line 93 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "test_discord_commander.py",
        "lines": 82,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "test_message_formatting.py",
        "lines": 20,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
        "lines": 219,
        "violations": [
          {
            "type": "line_length",
            "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
            "line": 158,
            "message": "Line 158 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
            "line": 13,
            "message": "Class 'V3DirectivesDeploymentSystem' has 177 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "V3_SECURITY_CLEANUP_FIXED.py",
        "lines": 144,
        "violations": [
          {
            "type": "class_loc",
            "file": "V3_SECURITY_CLEANUP_FIXED.py",
            "line": 8,
            "message": "Class 'V3SecurityCleanup' has 114 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "V3_SECURITY_CLEANUP_FIXED.py",
            "line": 19,
            "message": "Function 'create_security_guidelines' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "cleanup_stale_database_records.py",
        "lines": 48,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain_integration_example.py",
        "lines": 245,
        "violations": [
          {
            "type": "line_length",
            "file": "swarm_brain_integration_example.py",
            "line": 47,
            "message": "Line 47 has 128 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain_integration_example.py",
            "line": 159,
            "message": "Function 'example_cli_usage' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_selector_debugger.py",
        "lines": 125,
        "violations": [
          {
            "type": "line_length",
            "file": "thea_selector_debugger.py",
            "line": 90,
            "message": "Line 90 has 147 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "thea_selector_debugger.py",
            "line": 23,
            "message": "Function 'debug_selectors' has 99 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_clean_test.py",
        "lines": 71,
        "violations": [
          {
            "type": "line_length",
            "file": "thea_clean_test.py",
            "line": 35,
            "message": "Line 35 has 119 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "thea_clean_test.py",
            "line": 17,
            "message": "Function 'clean_thea_test' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "simple_thea_debugger.py",
        "lines": 55,
        "violations": [
          {
            "type": "line_length",
            "file": "simple_thea_debugger.py",
            "line": 35,
            "message": "Line 35 has 134 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "thea_auth_test.py",
        "lines": 149,
        "violations": [
          {
            "type": "function_loc",
            "file": "thea_auth_test.py",
            "line": 17,
            "message": "Function 'test_authentication' has 129 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_manual_login.py",
        "lines": 124,
        "violations": [
          {
            "type": "line_length",
            "file": "thea_manual_login.py",
            "line": 85,
            "message": "Line 85 has 136 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "thea_manual_login.py",
            "line": 106,
            "message": "Line 106 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "thea_manual_login.py",
            "line": 18,
            "message": "Function 'manual_login_helper' has 103 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "response_detector.py",
        "lines": 258,
        "violations": [
          {
            "type": "class_loc",
            "file": "response_detector.py",
            "line": 50,
            "message": "Class 'ResponseDetector' has 190 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "response_detector.py",
            "line": 85,
            "message": "Function 'wait_until_complete' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "quality_gates_core.py",
        "lines": 315,
        "violations": [
          {
            "type": "line_length",
            "file": "quality_gates_core.py",
            "line": 74,
            "message": "Line 74 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "quality_gates_core.py",
            "line": 298,
            "message": "Line 298 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "quality_gates_core.py",
            "line": 48,
            "message": "Class 'QualityGateChecker' has 268 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "captain_docs_core.py",
        "lines": 148,
        "violations": [
          {
            "type": "class_loc",
            "file": "captain_docs_core.py",
            "line": 24,
            "message": "Class 'CaptainDocumentationCore' has 125 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "captain_cycle_core.py",
        "lines": 332,
        "violations": [
          {
            "type": "line_length",
            "file": "captain_cycle_core.py",
            "line": 38,
            "message": "Line 38 has 140 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "captain_cycle_core.py",
            "line": 42,
            "message": "Line 42 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "captain_cycle_core.py",
            "line": 192,
            "message": "Line 192 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "captain_cycle_core.py",
            "line": 327,
            "message": "Line 327 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "captain_cycle_core.py",
            "line": 22,
            "message": "Class 'CaptainCycleBasedCore' has 311 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "captain_cycle_core.py",
            "line": 31,
            "message": "Function 'create_cycle_based_handbook' has 144 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "captain_cycle_core.py",
            "line": 176,
            "message": "Function 'create_cycle_based_cheatsheet' has 121 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "complete_onboarding_core.py",
        "lines": 197,
        "violations": [
          {
            "type": "class_loc",
            "file": "complete_onboarding_core.py",
            "line": 23,
            "message": "Class 'CompleteOnboardingCore' has 175 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "discord_commander_fixed_backup.py",
        "lines": 382,
        "violations": [
          {
            "type": "class_loc",
            "file": "discord_commander_fixed_backup.py",
            "line": 62,
            "message": "Class 'DiscordCommanderBot' has 256 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "discord_commander_fixed_backup.py",
            "line": 88,
            "message": "Function 'setup_events' has 56 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "discord_commander_fixed_backup.py",
            "line": 145,
            "message": "Function 'setup_commands' has 159 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "discord_commander_core.py",
        "lines": 190,
        "violations": [
          {
            "type": "class_loc",
            "file": "discord_commander_core.py",
            "line": 26,
            "message": "Class 'DiscordCommanderCore' has 165 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "discord_commander_core.py",
            "line": 34,
            "message": "Function 'create_discord_bot' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "discord_commander_setup_core.py",
        "lines": 161,
        "violations": [
          {
            "type": "class_loc",
            "file": "discord_commander_setup_core.py",
            "line": 26,
            "message": "Class 'DiscordCommanderSetupCore' has 136 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "comprehensive_devlog_core.py",
        "lines": 181,
        "violations": [
          {
            "type": "class_loc",
            "file": "comprehensive_devlog_core.py",
            "line": 20,
            "message": "Class 'ComprehensiveDevlogCore' has 162 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "analyze_large_files.py",
        "lines": 13,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "cleanup_stale_database_core.py",
        "lines": 205,
        "violations": [
          {
            "type": "line_length",
            "file": "cleanup_stale_database_core.py",
            "line": 152,
            "message": "Line 152 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "cleanup_stale_database_core.py",
            "line": 24,
            "message": "Class 'StaleDatabaseCleanupCore' has 182 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "discord_commander_config.py",
        "lines": 66,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent5_inbox_checker_core.py",
        "lines": 116,
        "violations": [
          {
            "type": "function_loc",
            "file": "agent5_inbox_checker_core.py",
            "line": 30,
            "message": "Function 'check_inbox' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "captain_knowledge_demo_core.py",
        "lines": 213,
        "violations": [
          {
            "type": "line_length",
            "file": "captain_knowledge_demo_core.py",
            "line": 127,
            "message": "Line 127 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "captain_knowledge_demo_core.py",
            "line": 16,
            "message": "Class 'CaptainKnowledgeCore' has 198 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "v2_compliance_checker_core.py",
        "lines": 67,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "combined_export_core.py",
        "lines": 154,
        "violations": [
          {
            "type": "class_loc",
            "file": "combined_export_core.py",
            "line": 20,
            "message": "Class 'CombinedExportCore' has 135 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "static_documentation_deleter_core.py",
        "lines": 353,
        "violations": [
          {
            "type": "line_length",
            "file": "static_documentation_deleter_core.py",
            "line": 301,
            "message": "Line 301 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "static_documentation_deleter_core.py",
            "line": 22,
            "message": "Class 'StaticDocumentationDeleter' has 332 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "static_documentation_deleter_core.py",
            "line": 205,
            "message": "Function 'create_query_replacement_guide' has 104 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "database_query_demonstrator_core.py",
        "lines": 216,
        "violations": [
          {
            "type": "line_length",
            "file": "database_query_demonstrator_core.py",
            "line": 83,
            "message": "Line 83 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "database_query_demonstrator_core.py",
            "line": 22,
            "message": "Class 'DatabaseQueryDemonstrator' has 195 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "mission_status_demonstrator_core.py",
        "lines": 125,
        "violations": [
          {
            "type": "class_loc",
            "file": "mission_status_demonstrator_core.py",
            "line": 23,
            "message": "Class 'MissionStatusDemonstrator' has 103 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "mission_status_demonstrator_core.py",
            "line": 30,
            "message": "Function 'demonstrate_current_mission_status' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "cycle_based_operations_demonstrator_core.py",
        "lines": 97,
        "violations": [
          {
            "type": "line_length",
            "file": "cycle_based_operations_demonstrator_core.py",
            "line": 90,
            "message": "Line 90 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "onboarding_knowledge_demo_core.py",
        "lines": 82,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "devlog_inventory_core.py",
        "lines": 91,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "test_runner_core.py",
        "lines": 99,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "devlog_analytics_system_core.py",
        "lines": 179,
        "violations": [
          {
            "type": "line_length",
            "file": "devlog_analytics_system_core.py",
            "line": 125,
            "message": "Line 125 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "devlog_analytics_system_core.py",
            "line": 151,
            "message": "Line 151 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "devlog_analytics_system_core.py",
            "line": 24,
            "message": "Class 'DevlogAnalyticsSystem' has 155 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "discord_commander_launcher_core.py",
        "lines": 269,
        "violations": [
          {
            "type": "line_length",
            "file": "discord_commander_launcher_core.py",
            "line": 161,
            "message": "Line 161 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "discord_commander_launcher_core.py",
            "line": 180,
            "message": "Line 180 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "discord_commander_launcher_core.py",
            "line": 35,
            "message": "Class 'DiscordCommanderLauncher' has 235 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "discord_commander_launcher_core.py",
            "line": 44,
            "message": "Function 'validate_environment' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_orchestrator_core.py",
        "lines": 114,
        "violations": [
          {
            "type": "class_loc",
            "file": "swarm_orchestrator_core.py",
            "line": 10,
            "message": "Class 'SwarmOrchestrator' has 105 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_mode_switcher_core.py",
        "lines": 123,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_mode_switcher_core.py",
            "line": 103,
            "message": "Line 103 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "agent_mode_switcher_core.py",
            "line": 10,
            "message": "Class 'AgentModeSwitcher' has 114 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "discord_bot_config_core.py",
        "lines": 114,
        "violations": [
          {
            "type": "line_length",
            "file": "discord_bot_config_core.py",
            "line": 96,
            "message": "Line 96 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "discord_bot_config_core.py",
            "line": 13,
            "message": "Class 'DiscordBotConfigCore' has 102 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "github_agent_client_core.py",
        "lines": 275,
        "violations": [
          {
            "type": "class_loc",
            "file": "github_agent_client_core.py",
            "line": 43,
            "message": "Class 'GitHubAgentClientCore' has 233 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "real_agent_coordination_core.py",
        "lines": 283,
        "violations": [
          {
            "type": "line_length",
            "file": "real_agent_coordination_core.py",
            "line": 187,
            "message": "Line 187 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "real_agent_coordination_core.py",
            "line": 25,
            "message": "Class 'RealAgentCoordinatorCore' has 259 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "real_agent_coordination_core.py",
            "line": 75,
            "message": "Function 'coordinate_with_real_agents' has 209 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "temp_message_sender_core.py",
        "lines": 101,
        "violations": [
          {
            "type": "function_loc",
            "file": "temp_message_sender_core.py",
            "line": 21,
            "message": "Function 'send_message_to_agent_core' has 81 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "test_all_data_sources_core.py",
        "lines": 287,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "test_message_formatting_core.py",
        "lines": 103,
        "violations": [
          {
            "type": "function_loc",
            "file": "test_message_formatting_core.py",
            "line": 10,
            "message": "Function 'test_message_formatting' has 94 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "update_captain_cycle_core.py",
        "lines": 94,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\migration_executor.py",
        "lines": 183,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_executor.py",
            "line": 116,
            "message": "Line 116 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_executor.py",
            "line": 158,
            "message": "Line 158 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\migration_executor.py",
            "line": 25,
            "message": "Class 'MigrationExecutor' has 159 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\migration_executor.py",
            "line": 39,
            "message": "Function 'execute_all_migrations' has 74 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\migration_executor.py",
            "line": 129,
            "message": "Function 'validate_migration_results' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
        "lines": 207,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
            "line": 30,
            "message": "Line 30 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
            "line": 148,
            "message": "Line 148 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
            "line": 167,
            "message": "Line 167 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
            "line": 22,
            "message": "Class 'ScalabilityStrategies' has 186 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
            "line": 30,
            "message": "Function 'design_scaling_strategies' has 103 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
            "line": 134,
            "message": "Function 'implement_partitioning_strategies' has 74 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\automated_migration_scripts.py",
        "lines": 108,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\automated_migration_scripts.py",
            "line": 31,
            "message": "Line 31 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\automated_migration_scripts.py",
            "line": 40,
            "message": "Line 40 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\automated_migration_scripts.py",
            "line": 35,
            "message": "Function 'main' has 68 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching_strategy_system.py",
        "lines": 94,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\caching_strategy_system.py",
            "line": 25,
            "message": "Line 25 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\caching_strategy_system.py",
            "line": 67,
            "message": "Line 67 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\caching_strategy_system.py",
            "line": 72,
            "message": "Line 72 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "agent_workspaces\\database_specialist\\migration_core.py",
        "lines": 149,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_core.py",
            "line": 145,
            "message": "Line 145 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "syntax_error",
            "file": "agent_workspaces\\database_specialist\\migration_core.py",
            "line": 41,
            "message": "Syntax error: invalid syntax",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
        "lines": 237,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 146,
            "message": "Line 146 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 152,
            "message": "Line 152 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 156,
            "message": "Line 156 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 157,
            "message": "Line 157 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 160,
            "message": "Line 160 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 161,
            "message": "Line 161 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 162,
            "message": "Line 162 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 165,
            "message": "Line 165 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 166,
            "message": "Line 166 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 167,
            "message": "Line 167 has 127 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 170,
            "message": "Line 170 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 172,
            "message": "Line 172 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 21,
            "message": "Class 'MigrationScripts' has 215 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 28,
            "message": "Function '_define_migration_scripts' has 103 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
            "line": 175,
            "message": "Function 'create_useful_views_script' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
        "lines": 399,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 59,
            "message": "Line 59 has 119 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 213,
            "message": "Line 213 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 221,
            "message": "Line 221 has 135 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 247,
            "message": "Line 247 has 133 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 252,
            "message": "Line 252 has 123 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 323,
            "message": "Line 323 has 136 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 327,
            "message": "Line 327 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 328,
            "message": "Line 328 has 124 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 373,
            "message": "Line 373 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "syntax_error",
            "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
            "line": 46,
            "message": "Syntax error: invalid syntax",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\scalability_core.py",
        "lines": 178,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\database_specialist\\scalability_core.py",
            "line": 149,
            "message": "Line 149 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_core.py",
            "line": 46,
            "message": "Class 'ScalabilityCore' has 131 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_core.py",
            "line": 94,
            "message": "Function 'identify_scalability_bottlenecks' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\scalability_validation.py",
        "lines": 254,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_validation.py",
            "line": 21,
            "message": "Class 'ScalabilityValidation' has 232 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_validation.py",
            "line": 29,
            "message": "Function 'design_load_balancing_mechanisms' has 91 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_validation.py",
            "line": 121,
            "message": "Function 'create_performance_distribution_plan' has 71 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\database_specialist\\scalability_validation.py",
            "line": 193,
            "message": "Function 'validate_scalability_improvements' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\v2_compliance_improvement_plan.py",
        "lines": 148,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\v2_compliance_improvement_plan.py",
            "line": 22,
            "message": "Class 'V2ComplianceImprovementPlan' has 108 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\__init__.py",
        "lines": 23,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\core\\__init__.py",
        "lines": 8,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
        "lines": 211,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
            "line": 24,
            "message": "Class 'CachingStrategySystem' has 186 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\models\\__init__.py",
        "lines": 8,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\models\\cache_models.py",
        "lines": 35,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\monitoring\\__init__.py",
        "lines": 8,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\monitoring\\cache_monitor.py",
        "lines": 159,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\caching\\monitoring\\cache_monitor.py",
            "line": 17,
            "message": "Class 'CacheMonitor' has 141 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\strategies\\__init__.py",
        "lines": 8,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\strategies\\cache_strategies.py",
        "lines": 139,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\caching\\strategies\\cache_strategies.py",
            "line": 21,
            "message": "Class 'CacheStrategyManager' has 117 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\tools\\__init__.py",
        "lines": 8,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\database_specialist\\caching\\tools\\cache_tools.py",
        "lines": 184,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\database_specialist\\caching\\tools\\cache_tools.py",
            "line": 18,
            "message": "Class 'CacheTools' has 165 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching_strategy_system.py",
        "lines": 98,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\caching_strategy_system.py",
            "line": 70,
            "message": "Line 70 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "agent_workspaces\\Agent-3\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\migration_core.py",
        "lines": 152,
        "violations": [
          {
            "type": "syntax_error",
            "file": "agent_workspaces\\Agent-3\\migration_core.py",
            "line": 41,
            "message": "Syntax error: invalid syntax",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\migration_executor.py",
        "lines": 190,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_executor.py",
            "line": 164,
            "message": "Line 164 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\migration_executor.py",
            "line": 24,
            "message": "Class 'MigrationExecutor' has 167 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\migration_executor.py",
            "line": 38,
            "message": "Function 'execute_all_migrations' has 74 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\migration_executor.py",
            "line": 130,
            "message": "Function 'validate_migration_results' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
        "lines": 233,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 144,
            "message": "Line 144 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 150,
            "message": "Line 150 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 154,
            "message": "Line 154 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 155,
            "message": "Line 155 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 158,
            "message": "Line 158 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 159,
            "message": "Line 159 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 160,
            "message": "Line 160 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 163,
            "message": "Line 163 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 164,
            "message": "Line 164 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 165,
            "message": "Line 165 has 127 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 168,
            "message": "Line 168 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 170,
            "message": "Line 170 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 19,
            "message": "Class 'MigrationScripts' has 215 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 26,
            "message": "Function '_define_migration_scripts' has 103 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
            "line": 173,
            "message": "Function 'create_useful_views_script' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\query_optimization_system.py",
        "lines": 50,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\scalability_core.py",
        "lines": 183,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_core.py",
            "line": 51,
            "message": "Class 'ScalabilityCore' has 133 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_core.py",
            "line": 99,
            "message": "Function 'identify_scalability_bottlenecks' has 59 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\scalability_strategies.py",
        "lines": 217,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_strategies.py",
            "line": 22,
            "message": "Class 'ScalabilityStrategies' has 196 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_strategies.py",
            "line": 30,
            "message": "Function 'design_scaling_strategies' has 105 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_strategies.py",
            "line": 136,
            "message": "Function 'implement_partitioning_strategies' has 82 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\scalability_validation.py",
        "lines": 226,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_validation.py",
            "line": 20,
            "message": "Class 'ScalabilityValidation' has 207 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_validation.py",
            "line": 28,
            "message": "Function 'design_load_balancing_mechanisms' has 91 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\scalability_validation.py",
            "line": 120,
            "message": "Function 'create_performance_distribution_plan' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\v2_compliance_improvement_plan.py",
        "lines": 146,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\v2_compliance_improvement_plan.py",
            "line": 20,
            "message": "Class 'V2ComplianceImprovementPlan' has 108 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\automated_migration_scripts.py",
        "lines": 100,
        "violations": [
          {
            "type": "function_loc",
            "file": "agent_workspaces\\Agent-3\\automated_migration_scripts.py",
            "line": 30,
            "message": "Function 'main' has 67 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
        "lines": 195,
        "violations": [
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
            "line": 144,
            "message": "Line 144 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
            "line": 192,
            "message": "Line 192 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "syntax_error",
            "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
            "line": 42,
            "message": "Syntax error: invalid syntax",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\__init__.py",
        "lines": 21,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\core\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
        "lines": 205,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
            "line": 21,
            "message": "Class 'CachingStrategySystem' has 185 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\models\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\models\\cache_models.py",
        "lines": 35,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\monitoring\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\monitoring\\cache_monitor.py",
        "lines": 156,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\caching\\monitoring\\cache_monitor.py",
            "line": 16,
            "message": "Class 'CacheMonitor' has 141 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\strategies\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\strategies\\cache_strategies.py",
        "lines": 131,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\caching\\strategies\\cache_strategies.py",
            "line": 15,
            "message": "Class 'CacheStrategyManager' has 117 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\tools\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "agent_workspaces\\Agent-3\\caching\\tools\\cache_tools.py",
        "lines": 166,
        "violations": [
          {
            "type": "class_loc",
            "file": "agent_workspaces\\Agent-3\\caching\\tools\\cache_tools.py",
            "line": 17,
            "message": "Class 'CacheTools' has 150 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\__init__.py",
        "lines": 38,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\conftest.py",
        "lines": 204,
        "violations": [
          {
            "type": "function_loc",
            "file": "tests\\conftest.py",
            "line": 25,
            "message": "Function 'test_coordinates' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\conftest_discord.py",
        "lines": 243,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\run_modular_tests.py",
        "lines": 328,
        "violations": [
          {
            "type": "class_loc",
            "file": "tests\\run_modular_tests.py",
            "line": 22,
            "message": "Class 'ModularTestRunner' has 239 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tests\\run_modular_tests.py",
            "line": 59,
            "message": "Function 'run_tests' has 68 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tests\\run_modular_tests.py",
            "line": 200,
            "message": "Function 'generate_test_report' has 61 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tests\\run_modular_tests.py",
            "line": 263,
            "message": "Function 'main' has 62 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\test_canon.py",
        "lines": 128,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\test_roundtrip.py",
        "lines": 236,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\unit\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\integration\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\integration\\test_comprehensive_integration.py",
        "lines": 360,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\integration\\test_discord_commander_integration.py",
        "lines": 452,
        "violations": [
          {
            "type": "file_loc",
            "file": "tests\\integration\\test_discord_commander_integration.py",
            "line": 1,
            "message": "File has 452 lines, exceeds 400 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\integration\\test_messaging_integration.py",
        "lines": 305,
        "violations": [
          {
            "type": "class_loc",
            "file": "tests\\integration\\test_messaging_integration.py",
            "line": 14,
            "message": "Class 'TestMessagingSystemIntegration' has 292 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\integration\\test_vector_database_integration.py",
        "lines": 355,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\integration\\test_workflow_integration.py",
        "lines": 398,
        "violations": [
          {
            "type": "class_loc",
            "file": "tests\\integration\\test_workflow_integration.py",
            "line": 31,
            "message": "Class 'TestWorkflowCoreIntegration' has 101 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tests\\integration\\test_workflow_integration.py",
            "line": 207,
            "message": "Class 'TestWorkflowManagerIntegration' has 103 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tests\\integration\\test_workflow_integration.py",
            "line": 335,
            "message": "Function 'test_complete_workflow_lifecycle' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\performance\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\utils\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\utils\\cross_platform_test_utils.py",
        "lines": 257,
        "violations": [
          {
            "type": "class_loc",
            "file": "tests\\utils\\cross_platform_test_utils.py",
            "line": 28,
            "message": "Class 'CrossPlatformTestManager' has 135 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\utils\\test_base_classes.py",
        "lines": 371,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\utils\\test_fixtures.py",
        "lines": 423,
        "violations": [
          {
            "type": "file_loc",
            "file": "tests\\utils\\test_fixtures.py",
            "line": 1,
            "message": "File has 423 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tests\\utils\\test_fixtures.py",
            "line": 27,
            "message": "Class 'TestDataFactory' has 130 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tests\\utils\\test_fixtures.py",
            "line": 31,
            "message": "Function 'create_coordinates_data' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\messaging\\__init__.py",
        "lines": 30,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\messaging\\test_messaging_service_core.py",
        "lines": 230,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\messaging\\test_messaging_service_operations.py",
        "lines": 270,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\discord\\__init__.py",
        "lines": 30,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\discord\\test_discord_bot_core.py",
        "lines": 312,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\discord\\test_discord_bot_integration.py",
        "lines": 338,
        "violations": [
          {
            "type": "line_length",
            "file": "tests\\discord\\test_discord_bot_integration.py",
            "line": 148,
            "message": "Line 148 has 173 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tests\\discord\\test_discord_bot_integration.py",
            "line": 151,
            "message": "Line 151 has 189 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tests\\discord\\test_discord_bot_integration.py",
            "line": 253,
            "message": "Line 253 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tests\\discord\\test_discord_bot_integration.py",
            "line": 214,
            "message": "Class 'TestDiscordCommandHandling' has 125 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\database\\__init__.py",
        "lines": 30,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\database\\test_migration_scripts.py",
        "lines": 475,
        "violations": [
          {
            "type": "file_loc",
            "file": "tests\\database\\test_migration_scripts.py",
            "line": 1,
            "message": "File has 475 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tests\\database\\test_migration_scripts.py",
            "line": 148,
            "message": "Class 'TestMigrationScriptsDataMigration' has 102 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\database\\test_schema_implementation.py",
        "lines": 229,
        "violations": [
          {
            "type": "line_length",
            "file": "tests\\database\\test_schema_implementation.py",
            "line": 146,
            "message": "Line 146 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tests\\database\\test_schema_implementation.py",
            "line": 157,
            "message": "Line 157 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tests\\database\\test_schema_implementation.py",
            "line": 165,
            "message": "Line 165 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tests\\database\\test_schema_implementation.py",
            "line": 34,
            "message": "Class 'TestSchemaImplementationCore' has 196 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tests\\database\\test_schema_models.py",
        "lines": 68,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tests\\database\\test_schema_core.py",
        "lines": 293,
        "violations": [
          {
            "type": "line_length",
            "file": "tests\\database\\test_schema_core.py",
            "line": 106,
            "message": "Line 106 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tests\\database\\test_schema_core.py",
            "line": 194,
            "message": "Line 194 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tests\\database\\test_schema_core.py",
            "line": 31,
            "message": "Class 'SchemaTestCore' has 263 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\agent_get_started.py",
        "lines": 73,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\agent_task_manager.py",
        "lines": 323,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\agent_task_manager.py",
            "line": 16,
            "message": "Line 16 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_task_manager.py",
            "line": 17,
            "message": "Line 17 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_task_manager.py",
            "line": 201,
            "message": "Line 201 has 126 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_task_manager.py",
            "line": 208,
            "message": "Line 208 has 135 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_task_manager.py",
            "line": 223,
            "message": "Line 223 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_task_manager.py",
            "line": 224,
            "message": "Line 224 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\agent_task_manager.py",
            "line": 31,
            "message": "Class 'AgentTaskManager' has 182 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\agent_task_manager.py",
            "line": 215,
            "message": "Function 'main' has 105 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\analysis_cli.py",
        "lines": 23,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\post_major_update.py",
        "lines": 227,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\post_major_update.py",
            "line": 81,
            "message": "Line 81 has 156 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\post_major_update.py",
            "line": 104,
            "message": "Line 104 has 181 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\post_major_update.py",
            "line": 43,
            "message": "Class 'MajorUpdatePoster' has 109 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner.py",
        "lines": 34,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\agent_autonomous_cycle.py",
        "lines": 160,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\agent_workflow_cli.py",
        "lines": 284,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\agent_workflow_cli.py",
            "line": 218,
            "message": "Line 218 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\agent_workflow_cli.py",
            "line": 73,
            "message": "Function 'quick_create_component' has 119 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\captain_autonomous_interface.py",
        "lines": 183,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\captain_autonomous_interface.py",
            "line": 25,
            "message": "Class 'CaptainAutonomousInterface' has 141 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\directive_handlers.py",
        "lines": 183,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\directive_handlers.py",
            "line": 72,
            "message": "Function 'setup_argument_parser' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\directive_models.py",
        "lines": 89,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\run_project_scan.py",
        "lines": 61,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\simple_workflow_automation.py",
        "lines": 468,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\simple_workflow_automation.py",
            "line": 1,
            "message": "File has 468 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tools\\simple_workflow_automation.py",
            "line": 28,
            "message": "Class 'SimpleWorkflowAutomation' has 347 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_workflow_automation.py",
            "line": 35,
            "message": "Function 'assign_task' has 55 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_workflow_automation.py",
            "line": 91,
            "message": "Function 'forward_message' has 56 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_workflow_automation.py",
            "line": 148,
            "message": "Function 'request_status_check' has 57 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_workflow_automation.py",
            "line": 206,
            "message": "Function 'coordinate_project' has 55 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_workflow_automation.py",
            "line": 377,
            "message": "Function 'main' has 87 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\workflow_cli.py",
        "lines": 19,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\performance_detective_cli.py",
        "lines": 144,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\performance_detective_cli.py",
            "line": 66,
            "message": "Line 66 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\security_inspector_cli.py",
        "lines": 145,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\security_inspector_cli.py",
            "line": 67,
            "message": "Line 67 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\documentation_architect_cli.py",
        "lines": 149,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\documentation_architect_cli.py",
            "line": 73,
            "message": "Line 73 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\documentation_architect_cli.py",
            "line": 40,
            "message": "Function 'generate_documentation' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\integration_explorer_cli.py",
        "lines": 159,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\integration_explorer_cli.py",
            "line": 70,
            "message": "Line 70 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\integration_explorer_cli.py",
            "line": 73,
            "message": "Line 73 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\integration_explorer_cli.py",
            "line": 83,
            "message": "Line 83 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\integration_explorer_cli.py",
            "line": 27,
            "message": "Class 'IntegrationExplorerCLI' has 104 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\integration_explorer_cli.py",
            "line": 40,
            "message": "Function 'explore_integrations' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\financial_analyst_cli.py",
        "lines": 163,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\financial_analyst_cli.py",
            "line": 27,
            "message": "Class 'FinancialAnalystCLI' has 102 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\financial_analyst_cli.py",
            "line": 40,
            "message": "Function 'analyze_market' has 59 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_strategist_cli.py",
        "lines": 161,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\trading_strategist_cli.py",
            "line": 40,
            "message": "Function 'develop_strategy' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\risk_manager_cli.py",
        "lines": 157,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\risk_manager_cli.py",
            "line": 27,
            "message": "Class 'RiskManagerCLI' has 102 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\risk_manager_cli.py",
            "line": 40,
            "message": "Function 'assess_portfolio_risk' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\market_researcher_cli.py",
        "lines": 171,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\market_researcher_cli.py",
            "line": 89,
            "message": "Line 89 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\market_researcher_cli.py",
            "line": 27,
            "message": "Class 'MarketResearcherCLI' has 110 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\market_researcher_cli.py",
            "line": 40,
            "message": "Function 'research_market' has 65 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\portfolio_optimizer_cli.py",
        "lines": 179,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\portfolio_optimizer_cli.py",
            "line": 82,
            "message": "Line 82 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\portfolio_optimizer_cli.py",
            "line": 91,
            "message": "Line 91 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\portfolio_optimizer_cli.py",
            "line": 27,
            "message": "Class 'PortfolioOptimizerCLI' has 116 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\portfolio_optimizer_cli.py",
            "line": 40,
            "message": "Function 'optimize_portfolio' has 71 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\compliance_auditor_cli.py",
        "lines": 177,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\compliance_auditor_cli.py",
            "line": 75,
            "message": "Line 75 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\compliance_auditor_cli.py",
            "line": 78,
            "message": "Line 78 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\compliance_auditor_cli.py",
            "line": 81,
            "message": "Line 81 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\compliance_auditor_cli.py",
            "line": 87,
            "message": "Line 87 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\compliance_auditor_cli.py",
            "line": 27,
            "message": "Class 'ComplianceAuditorCLI' has 114 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\compliance_auditor_cli.py",
            "line": 40,
            "message": "Function 'audit_compliance' has 69 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\__init__.py",
        "lines": 9,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\agent_swarm_scaffolder.py",
        "lines": 418,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\agent_swarm_scaffolder.py",
            "line": 1,
            "message": "File has 418 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_swarm_scaffolder.py",
            "line": 34,
            "message": "Line 34 has 941 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_swarm_scaffolder.py",
            "line": 35,
            "message": "Line 35 has 2669 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\agent_swarm_scaffolder.py",
            "line": 328,
            "message": "Function 'main' has 87 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\agent_vector_search.py",
        "lines": 213,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\agent_vector_search.py",
            "line": 145,
            "message": "Function 'main' has 65 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\agent_workflow_automation.py",
        "lines": 435,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\agent_workflow_automation.py",
            "line": 1,
            "message": "File has 435 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_workflow_automation.py",
            "line": 143,
            "message": "Line 143 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\agent_workflow_automation.py",
            "line": 29,
            "message": "Class 'AgentWorkflowAutomation' has 324 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\agent_workflow_automation.py",
            "line": 355,
            "message": "Function 'main' has 77 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\agent_workflow_manager.py",
        "lines": 443,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\agent_workflow_manager.py",
            "line": 1,
            "message": "File has 443 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_workflow_manager.py",
            "line": 149,
            "message": "Line 149 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_workflow_manager.py",
            "line": 348,
            "message": "Line 348 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_workflow_manager.py",
            "line": 413,
            "message": "Line 413 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\agent_workflow_manager.py",
            "line": 82,
            "message": "Class 'AgentWorkflowManager' has 224 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\agent_workflow_manager.py",
            "line": 248,
            "message": "Function 'create_sample_workflow' has 58 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\agent_workflow_manager.py",
            "line": 308,
            "message": "Function 'main' has 131 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\api_gateway_cli.py",
        "lines": 325,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\api_gateway_cli.py",
            "line": 161,
            "message": "Line 161 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\api_gateway_cli.py",
            "line": 30,
            "message": "Class 'APIGatewayCLI' has 222 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\api_gateway_cli.py",
            "line": 254,
            "message": "Function 'main' has 68 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\captain_autonomous_core.py",
        "lines": 350,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\captain_autonomous_core.py",
            "line": 25,
            "message": "Class 'CaptainAutonomousCore' has 318 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\captain_autonomous_core.py",
            "line": 35,
            "message": "Function 'detect_bottlenecks' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\captain_autonomous_manager.py",
        "lines": 84,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\captain_autonomous_models.py",
        "lines": 88,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\captain_autonomous_storage.py",
        "lines": 149,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\captain_autonomous_storage.py",
            "line": 19,
            "message": "Class 'CaptainAutonomousStorage' has 123 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\captain_autonomous_utility.py",
        "lines": 306,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\captain_autonomous_utility.py",
            "line": 22,
            "message": "Class 'CaptainAutonomousUtility' has 272 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\captain_cli.py",
        "lines": 189,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\captain_cli.py",
            "line": 71,
            "message": "Line 71 has 261 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\captain_cli.py",
            "line": 101,
            "message": "Line 101 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\captain_cli.py",
            "line": 104,
            "message": "Line 104 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\captain_directive_manager.py",
        "lines": 462,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\captain_directive_manager.py",
            "line": 1,
            "message": "File has 462 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tools\\captain_directive_manager.py",
            "line": 103,
            "message": "Class 'CaptainDirectiveManager' has 253 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\captain_directive_manager.py",
            "line": 358,
            "message": "Function 'main' has 100 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\code_archaeologist_cli.py",
        "lines": 268,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\code_archaeologist_cli.py",
            "line": 100,
            "message": "Line 100 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\code_archaeologist_cli.py",
            "line": 169,
            "message": "Line 169 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\code_archaeologist_cli.py",
            "line": 30,
            "message": "Class 'CodeArchaeologistCLI' has 192 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\content_hash_system.py",
        "lines": 235,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\content_hash_system.py",
            "line": 26,
            "message": "Class 'ContentHashSystem' has 179 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\content_hash_system.py",
            "line": 95,
            "message": "Function 'hash_all_existing_content' has 75 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\coordinate_mapper.py",
        "lines": 325,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\coordinate_mapper.py",
            "line": 21,
            "message": "Class 'CoordinateMapper' has 265 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\database_cleanup.py",
        "lines": 358,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\database_cleanup.py",
            "line": 144,
            "message": "Line 144 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\database_cleanup.py",
            "line": 238,
            "message": "Line 238 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\database_cleanup.py",
            "line": 34,
            "message": "Class 'DatabaseCleanupTool' has 293 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\database_cleanup.py",
            "line": 49,
            "message": "Function 'analyze_duplicates' has 78 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\database_cleanup.py",
            "line": 159,
            "message": "Function 'vectorize_all_documents' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\db_diagnostic.py",
        "lines": 47,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\devlog_consolidator.py",
        "lines": 285,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\devlog_consolidator.py",
            "line": 191,
            "message": "Line 191 has 146 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\devlog_consolidator.py",
            "line": 249,
            "message": "Line 249 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\devlog_consolidator.py",
            "line": 16,
            "message": "Class 'DevlogConsolidator' has 236 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\devlog_consolidator.py",
            "line": 92,
            "message": "Function 'consolidate_logs' has 109 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\devlog_storyteller_cli.py",
        "lines": 300,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\devlog_storyteller_cli.py",
            "line": 205,
            "message": "Line 205 has 119 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\devlog_storyteller_cli.py",
            "line": 30,
            "message": "Class 'DevlogStorytellerCLI' has 222 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\devlog_storyteller_cli.py",
            "line": 102,
            "message": "Function 'validate_chapters' has 69 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\directive_services.py",
        "lines": 271,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\directive_services.py",
            "line": 19,
            "message": "Class 'DirectiveService' has 123 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tools\\directive_services.py",
            "line": 144,
            "message": "Class 'InitiativeService' has 128 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\duplication_audit.py",
        "lines": 347,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\duplication_audit.py",
            "line": 26,
            "message": "Class 'CodeDuplicationAnalyzer' has 138 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\duplication_audit.py",
            "line": 268,
            "message": "Function 'main' has 76 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\emit_event.py",
        "lines": 77,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\feature_registry_check.py",
        "lines": 247,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\feature_registry_check.py",
            "line": 26,
            "message": "Class 'FeatureRegistry' has 162 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\feature_registry_check.py",
            "line": 41,
            "message": "Function '_create_default_registry' has 71 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\feature_registry_check.py",
            "line": 190,
            "message": "Function 'main' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\github_agent_cli.py",
        "lines": 284,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\github_agent_cli.py",
            "line": 131,
            "message": "Line 131 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\github_agent_cli.py",
            "line": 27,
            "message": "Class 'GitHubAgentCLI' has 248 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\github_agent_cli.py",
            "line": 173,
            "message": "Function 'run' has 102 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\github_agent_client.py",
        "lines": 335,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\github_agent_client.py",
            "line": 44,
            "message": "Class 'GitHubAgentClient' has 233 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\github_agent_client.py",
            "line": 279,
            "message": "Function 'main' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\github_agent_controller.py",
        "lines": 375,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\github_agent_controller.py",
            "line": 78,
            "message": "Class 'GitHubAgentController' has 272 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\intelligent_alerting_cli.py",
        "lines": 214,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\intelligent_alerting_cli.py",
            "line": 82,
            "message": "Line 82 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\intelligent_alerting_cli.py",
            "line": 91,
            "message": "Line 91 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\intelligent_alerting_cli.py",
            "line": 74,
            "message": "Function 'main' has 137 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\knowledge_base_search.py",
        "lines": 303,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\knowledge_base_search.py",
            "line": 78,
            "message": "Line 78 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\knowledge_base_search.py",
            "line": 204,
            "message": "Line 204 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\knowledge_base_search.py",
            "line": 24,
            "message": "Class 'KnowledgeBaseSearch' has 158 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\knowledge_base_search.py",
            "line": 64,
            "message": "Function 'search' has 54 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\knowledge_base_search.py",
            "line": 225,
            "message": "Function 'main' has 75 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\overengineering_detector.py",
        "lines": 372,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\overengineering_detector.py",
            "line": 300,
            "message": "Line 300 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\overengineering_detector.py",
            "line": 66,
            "message": "Class 'OverengineeringDetector' has 252 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\overengineering_detector.py",
            "line": 140,
            "message": "Function '_analyze_ast' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\predictive_analytics_cli.py",
        "lines": 286,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\predictive_analytics_cli.py",
            "line": 83,
            "message": "Line 83 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\predictive_analytics_cli.py",
            "line": 45,
            "message": "Function 'display_analysis' has 78 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\predictive_analytics_cli.py",
            "line": 168,
            "message": "Function 'main' has 115 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\protocol_reference_enforcer.py",
        "lines": 271,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\protocol_reference_enforcer.py",
            "line": 265,
            "message": "Line 265 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\protocol_reference_enforcer.py",
            "line": 54,
            "message": "Class 'ProtocolReferenceEnforcer' has 171 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\protocol_reference_enforcer.py",
            "line": 67,
            "message": "Function 'check_protocol_reference' has 66 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\quick_fix.py",
        "lines": 160,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\quick_fix.py",
            "line": 99,
            "message": "Function 'main' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\simple_project_scanner.py",
        "lines": 203,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\simple_project_scanner.py",
            "line": 19,
            "message": "Class 'SimpleProjectScanner' has 156 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\simple_vector_cleanup.py",
        "lines": 204,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\simple_vector_cleanup.py",
            "line": 25,
            "message": "Class 'SimpleVectorCleanup' has 170 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_vector_cleanup.py",
            "line": 51,
            "message": "Function 'vectorize_swarm_brain_docs' has 95 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\simple_vector_search.py",
        "lines": 285,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\simple_vector_search.py",
            "line": 279,
            "message": "Line 279 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_vector_search.py",
            "line": 26,
            "message": "Function 'search_message_history' has 65 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\simple_vector_search.py",
            "line": 93,
            "message": "Function 'search_devlogs' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\swarm_coordination_tool.py",
        "lines": 209,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\swarm_coordination_tool.py",
            "line": 144,
            "message": "Line 144 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\swarm_coordination_tool.py",
            "line": 151,
            "message": "Line 151 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\swarm_dashboard_cli.py",
        "lines": 301,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\swarm_dashboard_cli.py",
            "line": 203,
            "message": "Line 203 has 128 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\swarm_dashboard_cli.py",
            "line": 257,
            "message": "Line 257 has 119 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\swarm_dashboard_cli.py",
            "line": 25,
            "message": "Function 'main' has 86 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\swarm_dashboard_cli.py",
            "line": 207,
            "message": "Function 'show_tasks' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\team_collaboration_tool.py",
        "lines": 209,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\team_collaboration_tool.py",
            "line": 19,
            "message": "Class 'TeamCollaborationTool' has 139 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\team_dashboard.py",
        "lines": 373,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\team_dashboard.py",
            "line": 244,
            "message": "Line 244 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\team_dashboard.py",
            "line": 259,
            "message": "Line 259 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\team_dashboard.py",
            "line": 27,
            "message": "Class 'TeamDashboard' has 283 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\team_dashboard.py",
            "line": 224,
            "message": "Function 'display_dashboard' has 72 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\team_dashboard.py",
            "line": 312,
            "message": "Function 'main' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\test_role_assignment.py",
        "lines": 163,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\unified_database_search.py",
        "lines": 286,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\unified_database_search.py",
            "line": 202,
            "message": "Line 202 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\unified_database_search.py",
            "line": 208,
            "message": "Line 208 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\unified_database_search.py",
            "line": 213,
            "message": "Line 213 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\unified_database_search.py",
            "line": 218,
            "message": "Line 218 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\unified_database_search.py",
            "line": 24,
            "message": "Class 'UnifiedDatabaseSearch' has 232 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\unified_database_search.py",
            "line": 124,
            "message": "Function 'get_database_stats' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\v2_refactoring_assistant.py",
        "lines": 438,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\v2_refactoring_assistant.py",
            "line": 1,
            "message": "File has 438 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tools\\v2_refactoring_assistant.py",
            "line": 29,
            "message": "Class 'V2RefactoringAssistant' has 377 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\v2_refactoring_assistant.py",
            "line": 38,
            "message": "Function 'analyze_violations' has 57 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\v2_refactoring_assistant.py",
            "line": 96,
            "message": "Function '_analyze_ast_metrics' has 56 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\v2_refactoring_assistant.py",
            "line": 256,
            "message": "Function '_create_refactoring_phases' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\v3_autonomous_cycle.py",
        "lines": 133,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\webhook_provisioner_cli.py",
        "lines": 263,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\webhook_provisioner_cli.py",
            "line": 22,
            "message": "Class 'WebhookProvisionerCLI' has 163 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\agent_cycle_devlog.py",
        "lines": 226,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\agent_cycle_devlog.py",
            "line": 16,
            "message": "Line 16 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_cycle_devlog.py",
            "line": 18,
            "message": "Line 18 has 130 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_cycle_devlog.py",
            "line": 57,
            "message": "Line 57 has 128 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_cycle_devlog.py",
            "line": 60,
            "message": "Line 60 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\agent_cycle_devlog.py",
            "line": 63,
            "message": "Line 63 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\enhanced_onboarding_cli.py",
        "lines": 136,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\enhanced_onboarding_cli.py",
            "line": 29,
            "message": "Function 'main' has 104 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\soft_onboarding_cli.py",
        "lines": 142,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\soft_onboarding_cli.py",
            "line": 29,
            "message": "Function 'main' has 110 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\unified_onboarding_cli.py",
        "lines": 200,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\unified_onboarding_cli.py",
            "line": 30,
            "message": "Function 'main' has 167 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\find_coordinates.py",
        "lines": 109,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\find_coordinates.py",
            "line": 88,
            "message": "Line 88 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\ml_training_infrastructure_tool.py",
        "lines": 58,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\ml_training_infrastructure_tool_core.py",
        "lines": 244,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\ml_training_infrastructure_tool_core.py",
            "line": 140,
            "message": "Class 'TrainingInfrastructureCore' has 105 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\ml_training_infrastructure_tool_main.py",
        "lines": 365,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\ml_training_infrastructure_tool_main.py",
            "line": 45,
            "message": "Class 'MLTrainingInfrastructureTool' has 211 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\ml_training_infrastructure_tool_main.py",
            "line": 258,
            "message": "Function 'main' has 104 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\ml_training_infrastructure_tool_utils.py",
        "lines": 421,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\ml_training_infrastructure_tool_utils.py",
            "line": 1,
            "message": "File has 421 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\ml_training_infrastructure_tool_utils.py",
            "line": 67,
            "message": "Line 67 has 140 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\ml_training_infrastructure_tool_utils.py",
            "line": 156,
            "message": "Class 'FileManager' has 266 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\ml_training_infrastructure_tool_utils.py",
            "line": 241,
            "message": "Function 'save_job' has 51 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\ml_training_infrastructure_tool_utils.py",
            "line": 293,
            "message": "Function 'load_job' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\protocol_compliance_checker_core.py",
        "lines": 60,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\protocol_compliance_checker_utils.py",
        "lines": 275,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_utils.py",
            "line": 133,
            "message": "Line 133 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_utils.py",
            "line": 244,
            "message": "Line 244 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_utils.py",
            "line": 245,
            "message": "Line 245 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_utils.py",
            "line": 246,
            "message": "Line 246 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_utils.py",
            "line": 261,
            "message": "Line 261 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\protocol_compliance_checker_main.py",
        "lines": 248,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_main.py",
            "line": 85,
            "message": "Line 85 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_main.py",
            "line": 132,
            "message": "Line 132 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_main.py",
            "line": 204,
            "message": "Line 204 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\protocol_compliance_checker_main.py",
            "line": 206,
            "message": "Line 206 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\protocol_compliance_checker_main.py",
            "line": 40,
            "message": "Class 'ProtocolComplianceChecker' has 204 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\protocol_compliance_checker.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\operational_dashboard_tool_core.py",
        "lines": 84,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\operational_dashboard_tool_utils.py",
        "lines": 303,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_utils.py",
            "line": 276,
            "message": "Line 276 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\operational_dashboard_tool_main.py",
        "lines": 370,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 109,
            "message": "Line 109 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 110,
            "message": "Line 110 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 166,
            "message": "Line 166 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 167,
            "message": "Line 167 has 142 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 168,
            "message": "Line 168 has 140 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 176,
            "message": "Line 176 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 179,
            "message": "Line 179 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 201,
            "message": "Line 201 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 238,
            "message": "Line 238 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 240,
            "message": "Line 240 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 241,
            "message": "Line 241 has 119 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 243,
            "message": "Line 243 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 257,
            "message": "Line 257 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 259,
            "message": "Line 259 has 138 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 280,
            "message": "Line 280 has 141 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 311,
            "message": "Line 311 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "syntax_error",
            "file": "tools\\operational_dashboard_tool_main.py",
            "line": 241,
            "message": "Syntax error: invalid decimal literal",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\operational_dashboard_tool.py",
        "lines": 63,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\memory_leak_detector.py",
        "lines": 363,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\memory_leak_detector.py",
            "line": 276,
            "message": "Line 276 has 123 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_leak_detector.py",
            "line": 279,
            "message": "Line 279 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_leak_detector.py",
            "line": 284,
            "message": "Line 284 has 128 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_leak_detector.py",
            "line": 286,
            "message": "Line 286 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_leak_detector.py",
            "line": 288,
            "message": "Line 288 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_leak_detector.py",
            "line": 292,
            "message": "Line 292 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\memory_leak_detector.py",
            "line": 39,
            "message": "Class 'MemoryLeakDetector' has 286 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\memory_leak_detector.py",
            "line": 42,
            "message": "Function '__init__' has 68 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\memory_leak_detector.py",
            "line": 148,
            "message": "Function '_analyze_ast' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\memory_optimizer.py",
        "lines": 404,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\memory_optimizer.py",
            "line": 1,
            "message": "File has 404 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_optimizer.py",
            "line": 173,
            "message": "Line 173 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_optimizer.py",
            "line": 305,
            "message": "Line 305 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_optimizer.py",
            "line": 306,
            "message": "Line 306 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\memory_optimizer.py",
            "line": 37,
            "message": "Class 'MemoryOptimizer' has 324 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\memory_optimizer.py",
            "line": 123,
            "message": "Function 'fix_high_priority_files' has 52 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\memory_optimizer.py",
            "line": 183,
            "message": "Function 'create_memory_monitoring_tool' has 151 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\memory_monitor.py",
        "lines": 141,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\memory_monitor.py",
            "line": 121,
            "message": "Line 121 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\memory_monitor.py",
            "line": 122,
            "message": "Line 122 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\memory_manager.py",
        "lines": 322,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\memory_manager.py",
            "line": 39,
            "message": "Class 'MemoryManager' has 234 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\critical_memory_fixer.py",
        "lines": 391,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\critical_memory_fixer.py",
            "line": 97,
            "message": "Line 97 has 125 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\critical_memory_fixer.py",
            "line": 140,
            "message": "Line 140 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\critical_memory_fixer.py",
            "line": 186,
            "message": "Line 186 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\critical_memory_fixer.py",
            "line": 196,
            "message": "Line 196 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\critical_memory_fixer.py",
            "line": 231,
            "message": "Line 231 has 123 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\critical_memory_fixer.py",
            "line": 287,
            "message": "Line 287 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\critical_memory_fixer.py",
            "line": 325,
            "message": "Line 325 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\critical_memory_fixer.py",
            "line": 24,
            "message": "Class 'CriticalMemoryFixer' has 323 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\critical_memory_fixer.py",
            "line": 45,
            "message": "Function 'fix_performance_monitor' has 59 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\critical_memory_fixer.py",
            "line": 239,
            "message": "Function 'fix_thea_conversation_manager' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\analyzers.py",
        "lines": 199,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\analyzers.py",
            "line": 26,
            "message": "Class 'LanguageAnalyzer' has 174 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\reporters.py",
        "lines": 247,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\reporters.py",
            "line": 100,
            "message": "Class 'ModularReportGenerator' has 148 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\workers.py",
        "lines": 205,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\projectscanner\\core.py",
        "lines": 278,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\core.py",
            "line": 17,
            "message": "Class 'ProjectScanner' has 215 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\__init__.py",
        "lines": 39,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\projectscanner\\cli.py",
        "lines": 114,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\projectscanner\\cli.py",
            "line": 96,
            "message": "Line 96 has 128 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "tools\\projectscanner\\cli.py",
            "line": 47,
            "message": "Function 'main' has 64 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_analyzer_v2.py",
        "lines": 249,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\projectscanner\\enhanced_analyzer_v2.py",
            "line": 111,
            "message": "Line 111 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_analyzer_v2.py",
            "line": 20,
            "message": "Class 'EnhancedProjectScannerV2' has 183 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\projectscanner\\enhanced_analyzer_v2.py",
            "line": 35,
            "message": "Function 'run_full_analysis' has 91 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\file_discovery.py",
        "lines": 166,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\file_discovery.py",
            "line": 16,
            "message": "Class 'FileDiscoveryHandler' has 151 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\file_discovery.py",
            "line": 46,
            "message": "Function 'discover_files' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\core_analyzer.py",
        "lines": 216,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\core_analyzer.py",
            "line": 17,
            "message": "Class 'EnhancedCoreAnalyzer' has 200 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\caching_system.py",
        "lines": 157,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\caching_system.py",
            "line": 19,
            "message": "Class 'EnhancedCachingSystem' has 139 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
        "lines": 290,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
            "line": 17,
            "message": "Class 'EnhancedReportGenerator' has 274 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
            "line": 117,
            "message": "Function 'save_architecture_overview' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\language_analyzer.py",
        "lines": 136,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\projectscanner\\enhanced_scanner\\language_analyzer.py",
            "line": 31,
            "message": "Line 31 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\language_analyzer.py",
            "line": 18,
            "message": "Class 'EnhancedLanguageAnalyzer' has 119 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\python_analyzer.py",
        "lines": 274,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\python_analyzer.py",
            "line": 16,
            "message": "Class 'PythonAnalyzer' has 259 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\python_analyzer.py",
            "line": 19,
            "message": "Function 'analyze_python_file' has 86 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\__init__.py",
        "lines": 20,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\agent_categorization.py",
        "lines": 130,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\agent_categorization.py",
            "line": 16,
            "message": "Class 'AgentCategorizationHandler' has 115 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\file_analysis.py",
        "lines": 96,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\report_generation.py",
        "lines": 93,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
        "lines": 173,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
            "line": 27,
            "message": "Class 'EnhancedProjectScannerCore' has 147 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
            "line": 51,
            "message": "Function 'scan_project' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\projectscanner\\enhanced_analyzer\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\projectscanner\\enhanced_analyzer\\core.py",
        "lines": 119,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\analysis\\core.py",
        "lines": 199,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\analysis\\core.py",
            "line": 90,
            "message": "Line 90 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\analysis\\core.py",
            "line": 103,
            "message": "Line 103 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\analysis\\core.py",
            "line": 177,
            "message": "Line 177 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\analysis\\core.py",
            "line": 190,
            "message": "Line 190 has 123 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\analysis\\core.py",
            "line": 66,
            "message": "Class 'AnalysisCore' has 134 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\analysis\\core.py",
            "line": 75,
            "message": "Function 'analyze_python_file' has 89 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\analysis\\refactor.py",
        "lines": 206,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\analysis\\refactor.py",
            "line": 100,
            "message": "Line 100 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\analysis\\refactor.py",
            "line": 123,
            "message": "Line 123 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\analysis\\refactor.py",
            "line": 16,
            "message": "Class 'RefactorPlanner' has 146 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\analysis\\refactor.py",
            "line": 66,
            "message": "Function '_generate_violation_suggestion' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\analysis\\violations.py",
        "lines": 147,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\analysis\\violations.py",
            "line": 102,
            "message": "Line 102 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\analysis\\__init__.py",
        "lines": 36,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\analysis\\cli.py",
        "lines": 130,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\analysis\\cli.py",
            "line": 28,
            "message": "Function 'main' has 99 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\fsm\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\fsm\\fsm_scan.py",
        "lines": 162,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\fsm\\fsm_scan.py",
            "line": 137,
            "message": "Line 137 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "tools\\coverage\\changed_file_report.py",
        "lines": 109,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\coverage\\gap_analyzer.py",
        "lines": 238,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\coverage\\gap_analyzer.py",
            "line": 172,
            "message": "Line 172 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\coverage\\gap_analyzer.py",
            "line": 173,
            "message": "Line 173 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\coverage\\gap_analyzer.py",
            "line": 188,
            "message": "Line 188 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\coverage\\gap_analyzer.py",
            "line": 189,
            "message": "Line 189 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\coverage\\gap_analyzer.py",
            "line": 206,
            "message": "Line 206 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\coverage\\gap_analyzer.py",
            "line": 28,
            "message": "Class 'CoverageGapAnalyzer' has 174 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\coverage\\mutation_gate.py",
        "lines": 172,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\coverage\\mutation_gate.py",
            "line": 15,
            "message": "Class 'MutationGate' has 121 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\coverage\\run_coverage_analysis.py",
        "lines": 225,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\coverage\\run_coverage_analysis.py",
            "line": 14,
            "message": "Class 'CoveragePipeline' has 161 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\coverage\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\workflow\\__init__.py",
        "lines": 41,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\workflow\\automation.py",
        "lines": 254,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\workflow\\core.py",
        "lines": 248,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\workflow\\manager.py",
        "lines": 280,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\workflow\\manager.py",
            "line": 34,
            "message": "Class 'WorkflowManager' has 181 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\workflow\\manager.py",
            "line": 217,
            "message": "Function 'main' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\workflow\\optimization.py",
        "lines": 428,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\workflow\\optimization.py",
            "line": 1,
            "message": "File has 428 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tools\\workflow\\optimization.py",
            "line": 261,
            "message": "Class 'WorkflowOptimizer' has 168 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\workflow\\simple_manager.py",
        "lines": 329,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\workflow\\simple_manager.py",
            "line": 102,
            "message": "Class 'SimpleWorkflowManager' has 154 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\workflow\\simple_manager.py",
            "line": 258,
            "message": "Function 'main' has 68 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\trading_cli\\market_analyzer.py",
        "lines": 321,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\market_analyzer.py",
            "line": 112,
            "message": "Line 112 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\market_analyzer.py",
            "line": 144,
            "message": "Line 144 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\market_analyzer.py",
            "line": 279,
            "message": "Line 279 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\trading_cli\\market_analyzer.py",
            "line": 25,
            "message": "Class 'MarketAnalyzer' has 264 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\master_cli.py",
        "lines": 226,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\trading_cli\\master_cli.py",
            "line": 20,
            "message": "Class 'MasterCLI' has 167 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\trading_cli\\master_cli.py",
            "line": 53,
            "message": "Function 'run_comprehensive_analysis' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\news_analyzer.py",
        "lines": 413,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\trading_cli\\news_analyzer.py",
            "line": 1,
            "message": "File has 413 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\news_analyzer.py",
            "line": 369,
            "message": "Line 369 has 119 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\trading_cli\\news_analyzer.py",
            "line": 23,
            "message": "Class 'NewsSentimentAnalyzer' has 348 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\trading_cli\\news_analyzer.py",
            "line": 38,
            "message": "Function '_load_sentiment_keywords' has 63 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\trading_cli\\news_analyzer.py",
            "line": 244,
            "message": "Function 'analyze_news_sentiment' has 66 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\prediction_tracker.py",
        "lines": 468,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\trading_cli\\prediction_tracker.py",
            "line": 1,
            "message": "File has 468 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\prediction_tracker.py",
            "line": 88,
            "message": "Line 88 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\prediction_tracker.py",
            "line": 146,
            "message": "Line 146 has 123 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\prediction_tracker.py",
            "line": 220,
            "message": "Line 220 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\prediction_tracker.py",
            "line": 377,
            "message": "Line 377 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\prediction_tracker.py",
            "line": 381,
            "message": "Line 381 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "syntax_error",
            "file": "tools\\trading_cli\\prediction_tracker.py",
            "line": 33,
            "message": "Syntax error: expected an indented block after 'with' statement on line 32",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\agent_coordinator.py",
        "lines": 356,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\agent_coordinator.py",
            "line": 214,
            "message": "Line 214 has 148 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\agent_coordinator.py",
            "line": 314,
            "message": "Line 314 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\trading_cli\\agent_coordinator.py",
            "line": 24,
            "message": "Class 'AgentCoordinator' has 300 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\trading_cli\\agent_coordinator.py",
            "line": 164,
            "message": "Function 'calculate_weighted_consensus' has 57 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\trading_cli\\agent_coordinator.py",
            "line": 272,
            "message": "Function 'display_comprehensive_results' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\technical_analyzer_core.py",
        "lines": 224,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\technical_analyzer_core.py",
            "line": 216,
            "message": "Line 216 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\trading_cli\\technical_analyzer_core.py",
            "line": 218,
            "message": "Line 218 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\trading_cli\\technical_analyzer_core.py",
            "line": 18,
            "message": "Class 'TechnicalAnalyzer' has 207 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\technical_analyzer_utils.py",
        "lines": 258,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\trading_cli\\technical_analyzer_utils.py",
            "line": 170,
            "message": "Function 'generate_technical_signals' has 89 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\technical_analyzer_main.py",
        "lines": 159,
        "violations": [
          {
            "type": "function_loc",
            "file": "tools\\trading_cli\\technical_analyzer_main.py",
            "line": 19,
            "message": "Function 'main' has 136 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\trading_cli\\technical_analyzer.py",
        "lines": 47,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\refactoring_templates\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
        "lines": 375,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
            "line": 13,
            "message": "Class 'RefactoringTemplates' has 171 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\static_analysis\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tools\\static_analysis\\analysis_dashboard.py",
        "lines": 436,
        "violations": [
          {
            "type": "file_loc",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 1,
            "message": "File has 436 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 272,
            "message": "Line 272 has 153 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 273,
            "message": "Line 273 has 136 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 274,
            "message": "Line 274 has 150 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 280,
            "message": "Line 280 has 129 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 305,
            "message": "Line 305 has 158 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 346,
            "message": "Line 346 has 164 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 375,
            "message": "Line 375 has 167 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 40,
            "message": "Class 'AnalysisDashboard' has 369 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\static_analysis\\analysis_dashboard.py",
            "line": 255,
            "message": "Function 'generate_html_report' has 154 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\static_analysis\\code_quality_analyzer.py",
        "lines": 377,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\static_analysis\\code_quality_analyzer.py",
            "line": 29,
            "message": "Class 'CodeQualityAnalyzer' has 309 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\static_analysis\\code_quality_analyzer.py",
            "line": 204,
            "message": "Function '_calculate_quality_metrics' has 75 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\static_analysis\\demo_analysis.py",
        "lines": 241,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\static_analysis\\demo_analysis.py",
            "line": 32,
            "message": "Class 'DemoAnalysis' has 173 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\static_analysis\\dependency_scanner.py",
        "lines": 364,
        "violations": [
          {
            "type": "line_length",
            "file": "tools\\static_analysis\\dependency_scanner.py",
            "line": 195,
            "message": "Line 195 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tools\\static_analysis\\dependency_scanner.py",
            "line": 29,
            "message": "Class 'DependencyScanner' has 289 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\static_analysis\\dependency_scanner.py",
            "line": 204,
            "message": "Function '_generate_dependency_summary' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tools\\static_analysis\\security_scanner.py",
        "lines": 303,
        "violations": [
          {
            "type": "class_loc",
            "file": "tools\\static_analysis\\security_scanner.py",
            "line": 29,
            "message": "Class 'SecurityScanner' has 236 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tools\\static_analysis\\security_scanner.py",
            "line": 200,
            "message": "Function '_generate_security_summary' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "browser_service\\__init__.py",
        "lines": 25,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\adapters\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\adapters\\chrome_adapter.py",
        "lines": 199,
        "violations": [
          {
            "type": "class_loc",
            "file": "browser_service\\adapters\\chrome_adapter.py",
            "line": 72,
            "message": "Class 'ChromeBrowserAdapter' has 128 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "browser_service\\config\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\config\\browser_config.py",
        "lines": 59,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\core\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\core\\unified_browser_service.py",
        "lines": 123,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\managers\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\managers\\session_manager.py",
        "lines": 153,
        "violations": [
          {
            "type": "line_length",
            "file": "browser_service\\managers\\session_manager.py",
            "line": 64,
            "message": "Line 64 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "browser_service\\managers\\session_manager.py",
            "line": 19,
            "message": "Class 'SessionManager' has 135 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "browser_service\\operations\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "browser_service\\operations\\browser_operations.py",
        "lines": 147,
        "violations": [
          {
            "type": "class_loc",
            "file": "browser_service\\operations\\browser_operations.py",
            "line": 19,
            "message": "Class 'BrowserOperations' has 129 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "infrastructure\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "infrastructure\\validate_deployment.py",
        "lines": 302,
        "violations": [
          {
            "type": "line_length",
            "file": "infrastructure\\validate_deployment.py",
            "line": 291,
            "message": "Line 291 has 124 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "infrastructure\\validate_deployment.py",
            "line": 23,
            "message": "Class 'DeploymentValidator' has 270 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "infrastructure\\validate_ml_pipeline.py",
        "lines": 263,
        "violations": [
          {
            "type": "function_loc",
            "file": "infrastructure\\validate_ml_pipeline.py",
            "line": 74,
            "message": "Function 'validate_ml_integration' has 56 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "infrastructure\\validate_ml_pipeline.py",
            "line": 132,
            "message": "Function 'validate_ml_functionality' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "infrastructure\\validate_tracing.py",
        "lines": 441,
        "violations": [
          {
            "type": "file_loc",
            "file": "infrastructure\\validate_tracing.py",
            "line": 1,
            "message": "File has 441 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "infrastructure\\validate_tracing.py",
            "line": 430,
            "message": "Line 430 has 132 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "infrastructure\\validate_tracing.py",
            "line": 25,
            "message": "Class 'TracingValidator' has 407 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "scripts\\continuous_optimization_monitor.py",
        "lines": 414,
        "violations": [
          {
            "type": "file_loc",
            "file": "scripts\\continuous_optimization_monitor.py",
            "line": 1,
            "message": "File has 414 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "scripts\\continuous_optimization_monitor.py",
            "line": 243,
            "message": "Line 243 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "scripts\\continuous_optimization_monitor.py",
            "line": 397,
            "message": "Line 397 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "scripts\\continuous_optimization_monitor.py",
            "line": 22,
            "message": "Class 'ContinuousOptimizationMonitor' has 330 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\deploy_modular_components.py",
        "lines": 335,
        "violations": [
          {
            "type": "class_loc",
            "file": "scripts\\deploy_modular_components.py",
            "line": 19,
            "message": "Class 'ModularDeployment' has 259 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\deploy_modular_components.py",
            "line": 280,
            "message": "Function 'main' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\deployment_dashboard.py",
        "lines": 297,
        "violations": [
          {
            "type": "line_length",
            "file": "scripts\\deployment_dashboard.py",
            "line": 157,
            "message": "Line 157 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "scripts\\deployment_dashboard.py",
            "line": 179,
            "message": "Line 179 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "scripts\\deployment_dashboard.py",
            "line": 182,
            "message": "Line 182 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "scripts\\deployment_dashboard.py",
            "line": 27,
            "message": "Class 'DeploymentDashboard' has 225 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\deployment_dashboard.py",
            "line": 56,
            "message": "Function 'test_component_functionality' has 60 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\deployment_dashboard.py",
            "line": 143,
            "message": "Function 'display_dashboard' has 68 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\lightweight_deployment_dashboard.py",
        "lines": 243,
        "violations": [
          {
            "type": "line_length",
            "file": "scripts\\lightweight_deployment_dashboard.py",
            "line": 117,
            "message": "Line 117 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "scripts\\lightweight_deployment_dashboard.py",
            "line": 25,
            "message": "Class 'LightweightDashboard' has 173 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\lightweight_deployment_dashboard.py",
            "line": 103,
            "message": "Function 'display_dashboard' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\remove_duplicate_discord_files.py",
        "lines": 256,
        "violations": [
          {
            "type": "class_loc",
            "file": "scripts\\remove_duplicate_discord_files.py",
            "line": 23,
            "message": "Class 'DuplicateFileRemover' has 208 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\remove_duplicate_discord_files.py",
            "line": 115,
            "message": "Function 'remove_files' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\run_comprehensive_tests.py",
        "lines": 369,
        "violations": [
          {
            "type": "class_loc",
            "file": "scripts\\run_comprehensive_tests.py",
            "line": 20,
            "message": "Class 'ComprehensiveTestRunner' has 304 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\run_comprehensive_tests.py",
            "line": 28,
            "message": "Function 'run_workflow_tests' has 51 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\run_comprehensive_tests.py",
            "line": 80,
            "message": "Function 'run_discord_commander_tests' has 51 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\run_comprehensive_tests.py",
            "line": 132,
            "message": "Function 'run_performance_tests' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\security_integration.py",
        "lines": 383,
        "violations": [
          {
            "type": "line_length",
            "file": "scripts\\security_integration.py",
            "line": 70,
            "message": "Line 70 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "scripts\\security_integration.py",
            "line": 28,
            "message": "Class 'SecurityIntegration' has 320 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\security_integration.py",
            "line": 120,
            "message": "Function 'run_input_validation_tests' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "scripts\\windows_compatible_test_runner.py",
        "lines": 450,
        "violations": [
          {
            "type": "file_loc",
            "file": "scripts\\windows_compatible_test_runner.py",
            "line": 1,
            "message": "File has 450 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "scripts\\windows_compatible_test_runner.py",
            "line": 21,
            "message": "Class 'WindowsCompatibleTestRunner' has 384 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\windows_compatible_test_runner.py",
            "line": 34,
            "message": "Function 'run_workflow_tests' has 57 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\windows_compatible_test_runner.py",
            "line": 92,
            "message": "Function 'run_discord_commander_tests' has 57 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\windows_compatible_test_runner.py",
            "line": 150,
            "message": "Function 'run_performance_tests' has 57 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "scripts\\windows_compatible_test_runner.py",
            "line": 208,
            "message": "Function 'run_v2_compliance_tests' has 100 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "analytics\\__init__.py",
        "lines": 27,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "analytics\\agent_metrics.py",
        "lines": 172,
        "violations": [
          {
            "type": "function_loc",
            "file": "analytics\\agent_metrics.py",
            "line": 111,
            "message": "Function 'efficiency_score' has 62 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "analytics\\predictive_engine.py",
        "lines": 232,
        "violations": [
          {
            "type": "class_loc",
            "file": "analytics\\predictive_engine.py",
            "line": 30,
            "message": "Class 'PredictiveEngine' has 203 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "analytics\\score_window.py",
        "lines": 50,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "analytics\\window_loader.py",
        "lines": 59,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "analytics\\predictive_models.py",
        "lines": 104,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "analytics\\predictive_core.py",
        "lines": 574,
        "violations": [
          {
            "type": "file_loc",
            "file": "analytics\\predictive_core.py",
            "line": 1,
            "message": "File has 574 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "analytics\\predictive_core.py",
            "line": 186,
            "message": "Line 186 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "analytics\\predictive_core.py",
            "line": 399,
            "message": "Line 399 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "analytics\\predictive_core.py",
            "line": 30,
            "message": "Class 'PredictiveEngineCore' has 545 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "analytics\\signals\\__init__.py",
        "lines": 10,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "analytics\\signals\\collect_ci_signals.py",
        "lines": 78,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\__init__.py",
        "lines": 55,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\canon.py",
        "lines": 152,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\cli.py",
        "lines": 181,
        "violations": [
          {
            "type": "function_loc",
            "file": "swarm_brain\\cli.py",
            "line": 122,
            "message": "Function 'main' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\config.py",
        "lines": 60,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\db.py",
        "lines": 279,
        "violations": [
          {
            "type": "line_length",
            "file": "swarm_brain\\db.py",
            "line": 190,
            "message": "Line 190 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "syntax_error",
            "file": "swarm_brain\\db.py",
            "line": 34,
            "message": "Syntax error: invalid syntax",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\decorators.py",
        "lines": 309,
        "violations": [
          {
            "type": "function_loc",
            "file": "swarm_brain\\decorators.py",
            "line": 26,
            "message": "Function 'vectorized_action' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\ingest.py",
        "lines": 394,
        "violations": [
          {
            "type": "class_loc",
            "file": "swarm_brain\\ingest.py",
            "line": 38,
            "message": "Class 'Ingestor' has 353 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\paths.py",
        "lines": 73,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\retriever.py",
        "lines": 298,
        "violations": [
          {
            "type": "line_length",
            "file": "swarm_brain\\retriever.py",
            "line": 211,
            "message": "Line 211 has 134 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "swarm_brain\\retriever.py",
            "line": 216,
            "message": "Line 216 has 160 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "swarm_brain\\retriever.py",
            "line": 22,
            "message": "Class 'Retriever' has 277 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\retriever.py",
            "line": 31,
            "message": "Function 'search' has 98 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\retriever.py",
            "line": 167,
            "message": "Function 'get_agent_expertise' has 68 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\embeddings\\__init__.py",
        "lines": 28,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\embeddings\\base.py",
        "lines": 64,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\embeddings\\numpy_backend.py",
        "lines": 147,
        "violations": [
          {
            "type": "class_loc",
            "file": "swarm_brain\\embeddings\\numpy_backend.py",
            "line": 22,
            "message": "Class 'NumpyBackend' has 126 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\connectors\\__init__.py",
        "lines": 13,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "swarm_brain\\connectors\\devlogs.py",
        "lines": 120,
        "violations": [
          {
            "type": "function_loc",
            "file": "swarm_brain\\connectors\\devlogs.py",
            "line": 17,
            "message": "Function 'ingest_devlog' has 77 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\connectors\\discord.py",
        "lines": 195,
        "violations": [
          {
            "type": "line_length",
            "file": "swarm_brain\\connectors\\discord.py",
            "line": 188,
            "message": "Line 188 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\connectors\\discord.py",
            "line": 18,
            "message": "Function 'ingest_discord' has 99 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\connectors\\performance.py",
        "lines": 226,
        "violations": [
          {
            "type": "line_length",
            "file": "swarm_brain\\connectors\\performance.py",
            "line": 149,
            "message": "Line 149 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\connectors\\performance.py",
            "line": 18,
            "message": "Function 'ingest_performance' has 90 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\connectors\\performance.py",
            "line": 110,
            "message": "Function 'ingest_optimization' has 60 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\connectors\\performance.py",
            "line": 172,
            "message": "Function 'ingest_system_health' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "swarm_brain\\connectors\\project_scanner.py",
        "lines": 173,
        "violations": [
          {
            "type": "line_length",
            "file": "swarm_brain\\connectors\\project_scanner.py",
            "line": 166,
            "message": "Line 166 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\connectors\\project_scanner.py",
            "line": 18,
            "message": "Function 'ingest_scan' has 103 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "swarm_brain\\connectors\\project_scanner.py",
            "line": 123,
            "message": "Function 'ingest_compliance_fix' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\V2_STANDALONE_DEMO.py",
        "lines": 342,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\V2_STANDALONE_DEMO.py",
            "line": 70,
            "message": "Class 'TradingDashboard' has 177 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\V2_STANDALONE_DEMO.py",
            "line": 152,
            "message": "Function 'create_quick_actions_section' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\V2_TRADING_ROBOT_DEMO.py",
        "lines": 168,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\run_app.py",
        "lines": 87,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\run_trading_robot.py",
        "lines": 109,
        "violations": [
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\run_trading_robot.py",
            "line": 44,
            "message": "Function 'main' has 62 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\tesla_stock_app.py",
        "lines": 31,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\trading_robot_core.py",
        "lines": 118,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\trading_robot_core.py",
            "line": 14,
            "message": "Class 'TradingRobot' has 105 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\trading_robot_interface.py",
        "lines": 344,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\trading_robot_interface.py",
            "line": 27,
            "message": "Class 'TradingRobotCLI' has 175 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\trading_robot_interface.py",
            "line": 276,
            "message": "Function 'create_cli_parser' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\trading_robot_strategies.py",
        "lines": 397,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\trading_models.py",
        "lines": 80,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\trading_strategies.py",
        "lines": 98,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\trading_robot.py",
        "lines": 39,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\modules\\__init__.py",
        "lines": 56,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\modules\\data_worker.py",
        "lines": 230,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\data_worker.py",
            "line": 18,
            "message": "Class 'StockDataWorker' has 213 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\flag_display.py",
        "lines": 334,
        "violations": [
          {
            "type": "line_length",
            "file": "tsla_forecast_app\\modules\\flag_display.py",
            "line": 263,
            "message": "Line 263 has 146 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\flag_display.py",
            "line": 31,
            "message": "Class 'TradingFlagsDisplay' has 304 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\flag_display.py",
            "line": 40,
            "message": "Function 'init_ui' has 98 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\main_app.py",
        "lines": 239,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\main_app.py",
            "line": 49,
            "message": "Class 'TeslaStockApp' has 152 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\trading_flags.py",
        "lines": 460,
        "violations": [
          {
            "type": "file_loc",
            "file": "tsla_forecast_app\\modules\\trading_flags.py",
            "line": 1,
            "message": "File has 460 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "tsla_forecast_app\\modules\\trading_flags.py",
            "line": 396,
            "message": "Line 396 has 133 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\trading_flags.py",
            "line": 80,
            "message": "Class 'TradingFlagEngine' has 381 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components.py",
        "lines": 314,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\modules\\v2_trading_interface.py",
        "lines": 268,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\v2_trading_interface.py",
            "line": 23,
            "message": "Class 'V2TradingInterface' has 246 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\__init__.py",
        "lines": 28,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\chart_display.py",
        "lines": 329,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\chart_display.py",
            "line": 27,
            "message": "Class 'RealTimeChart' has 132 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\chart_display.py",
            "line": 52,
            "message": "Function 'paintEvent' has 82 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\chart_display.py",
            "line": 161,
            "message": "Class 'ChartDisplayWidget' has 169 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\chart_display.py",
            "line": 170,
            "message": "Function 'init_ui' has 86 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
        "lines": 238,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
            "line": 24,
            "message": "Class 'ForecastDisplayWidget' has 215 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
            "line": 31,
            "message": "Function 'init_ui' has 141 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\log_display.py",
        "lines": 246,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\log_display.py",
            "line": 27,
            "message": "Class 'LogDisplayWidget' has 220 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\log_display.py",
            "line": 36,
            "message": "Function 'init_ui' has 122 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\professional_theme.py",
        "lines": 340,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\professional_theme.py",
            "line": 13,
            "message": "Class 'ProfessionalTheme' has 328 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\professional_theme.py",
            "line": 120,
            "message": "Function 'get_professional_stylesheet' has 129 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
        "lines": 269,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
            "line": 23,
            "message": "Class 'ResponsiveLayout' has 201 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\settings_display.py",
        "lines": 299,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\settings_display.py",
            "line": 28,
            "message": "Class 'SettingsDisplayWidget' has 272 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\settings_display.py",
            "line": 50,
            "message": "Function 'init_ui' has 199 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui_components\\stock_display.py",
        "lines": 177,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\stock_display.py",
            "line": 23,
            "message": "Class 'StockDisplayWidget' has 155 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui_components\\stock_display.py",
            "line": 30,
            "message": "Function 'init_ui' has 104 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui\\__init__.py",
        "lines": 36,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui\\chart_widget.py",
        "lines": 287,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui\\chart_widget.py",
            "line": 27,
            "message": "Class 'ChartWidget' has 261 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
        "lines": 316,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
            "line": 53,
            "message": "Class 'MobileResponsiveWidget' has 116 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
            "line": 71,
            "message": "Function 'setup_responsive_styles' has 65 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
            "line": 171,
            "message": "Class 'MobileTradingCard' has 105 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
            "line": 179,
            "message": "Function 'init_ui' has 73 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "tsla_forecast_app\\modules\\ui\\trading_dashboard.py",
        "lines": 260,
        "violations": [
          {
            "type": "class_loc",
            "file": "tsla_forecast_app\\modules\\ui\\trading_dashboard.py",
            "line": 27,
            "message": "Class 'TradingDashboard' has 234 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "tsla_forecast_app\\modules\\ui\\trading_dashboard.py",
            "line": 127,
            "message": "Function 'create_quick_actions_section' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "migration_system\\__init__.py",
        "lines": 22,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\backup\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\backup\\backup_manager.py",
        "lines": 115,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\core\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\core\\migration_controller.py",
        "lines": 134,
        "violations": [
          {
            "type": "class_loc",
            "file": "migration_system\\core\\migration_controller.py",
            "line": 23,
            "message": "Class 'MigrationController' has 112 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "migration_system\\core\\migration_controller.py",
            "line": 41,
            "message": "Function 'run_complete_migration' has 78 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "migration_system\\data\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\data\\data_migrator.py",
        "lines": 166,
        "violations": [
          {
            "type": "line_length",
            "file": "migration_system\\data\\data_migrator.py",
            "line": 65,
            "message": "Line 65 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "migration_system\\data\\data_migrator.py",
            "line": 98,
            "message": "Line 98 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "migration_system\\data\\data_migrator.py",
            "line": 18,
            "message": "Class 'DataMigrator' has 149 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "migration_system\\schema\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\schema\\schema_manager.py",
        "lines": 199,
        "violations": [
          {
            "type": "line_length",
            "file": "migration_system\\schema\\schema_manager.py",
            "line": 161,
            "message": "Line 161 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "migration_system\\schema\\schema_manager.py",
            "line": 162,
            "message": "Line 162 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "migration_system\\schema\\schema_manager.py",
            "line": 165,
            "message": "Line 165 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "migration_system\\schema\\schema_manager.py",
            "line": 166,
            "message": "Line 166 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "migration_system\\schema\\schema_manager.py",
            "line": 167,
            "message": "Line 167 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "migration_system\\schema\\schema_manager.py",
            "line": 17,
            "message": "Class 'SchemaManager' has 183 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "migration_system\\testing\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\testing\\integration_tester.py",
        "lines": 215,
        "violations": [
          {
            "type": "line_length",
            "file": "migration_system\\testing\\integration_tester.py",
            "line": 79,
            "message": "Line 79 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "migration_system\\testing\\integration_tester.py",
            "line": 17,
            "message": "Class 'IntegrationTester' has 199 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "migration_system\\testing\\integration_tester.py",
            "line": 24,
            "message": "Function 'run_integration_tests' has 62 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "migration_system\\validation\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "migration_system\\validation\\data_validator.py",
        "lines": 152,
        "violations": [
          {
            "type": "class_loc",
            "file": "migration_system\\validation\\data_validator.py",
            "line": 17,
            "message": "Class 'DataValidator' has 136 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "migration_system\\validation\\data_validator.py",
            "line": 63,
            "message": "Function 'validate_migration' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_auth\\cookie_manager.py",
        "lines": 191,
        "violations": [
          {
            "type": "class_loc",
            "file": "thea_auth\\cookie_manager.py",
            "line": 30,
            "message": "Class 'TheaCookieManager' has 162 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "thea_auth\\cookie_manager.py",
            "line": 43,
            "message": "Function 'save_cookies' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_auth\\login_handler.py",
        "lines": 344,
        "violations": [
          {
            "type": "line_length",
            "file": "thea_auth\\login_handler.py",
            "line": 173,
            "message": "Line 173 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "thea_auth\\login_handler.py",
            "line": 30,
            "message": "Class 'TheaLoginHandler' has 303 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "thea_auth\\login_handler.py",
            "line": 60,
            "message": "Function 'ensure_login' has 71 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "thea_auth\\login_handler.py",
            "line": 132,
            "message": "Function '_is_logged_in' has 94 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_auth\\__init__.py",
        "lines": 17,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_auth\\factory.py",
        "lines": 39,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\__init__.py",
        "lines": 20,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\automation\\__init__.py",
        "lines": 9,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\automation\\selenium_handler.py",
        "lines": 252,
        "violations": [
          {
            "type": "class_loc",
            "file": "thea_communication\\automation\\selenium_handler.py",
            "line": 30,
            "message": "Class 'SeleniumHandler' has 223 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "thea_communication\\automation\\selenium_handler.py",
            "line": 131,
            "message": "Function 'send_message' has 80 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_communication\\automation\\simple_manual.py",
        "lines": 50,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\core\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\core\\communication_service.py",
        "lines": 134,
        "violations": [
          {
            "type": "class_loc",
            "file": "thea_communication\\core\\communication_service.py",
            "line": 19,
            "message": "Class 'TheaCommunicationService' has 116 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "thea_communication\\core\\communication_service.py",
            "line": 77,
            "message": "Function 'run_communication_cycle' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "thea_communication\\response\\__init__.py",
        "lines": 8,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\response\\response_analyzer.py",
        "lines": 18,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\response\\response_capturer.py",
        "lines": 17,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "thea_communication\\response\\response_handler.py",
        "lines": 138,
        "violations": [
          {
            "type": "class_loc",
            "file": "thea_communication\\response\\response_handler.py",
            "line": 18,
            "message": "Class 'ResponseHandler' has 121 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "web_dashboard\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "web_dashboard\\api.py",
        "lines": 127,
        "violations": [
          {
            "type": "function_loc",
            "file": "web_dashboard\\api.py",
            "line": 9,
            "message": "Function 'get_agents' has 69 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "web_dashboard\\websocket.py",
        "lines": 335,
        "violations": [
          {
            "type": "line_length",
            "file": "web_dashboard\\websocket.py",
            "line": 141,
            "message": "Line 141 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "web_dashboard\\websocket.py",
            "line": 24,
            "message": "Class 'DashboardWebSocketServer' has 295 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\commandresult.py",
        "lines": 181,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\coordinate_agent_registry.py",
        "lines": 31,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\agent_registry.py",
        "lines": 25,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\__init__.py",
        "lines": 11,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\base_classes.py",
        "lines": 0,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\shared_imports.py",
        "lines": 0,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\__init__.py",
        "lines": 26,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\coherent_collaboration_cli.py",
        "lines": 468,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\coherent_collaboration_cli.py",
            "line": 1,
            "message": "File has 468 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\core\\coherent_collaboration_cli.py",
            "line": 29,
            "message": "Line 29 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\coherent_collaboration_cli.py",
            "line": 18,
            "message": "Function 'main' has 169 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\coherent_collaboration_cli.py",
            "line": 189,
            "message": "Function 'handle_registry_command' has 57 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\coherent_collaboration_cli.py",
            "line": 248,
            "message": "Function 'handle_design_command' has 52 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\coherent_collaboration_cli.py",
            "line": 317,
            "message": "Function 'handle_pr_command' has 75 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\coordinate_loader.py",
        "lines": 90,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\cross_platform_database.py",
        "lines": 213,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\cross_platform_database.py",
            "line": 28,
            "message": "Class 'CrossPlatformDatabase' has 117 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\cross_platform_env.py",
        "lines": 253,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\cross_platform_env.py",
            "line": 24,
            "message": "Class 'CrossPlatformEnvironment' has 165 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\cross_platform_paths.py",
        "lines": 262,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\cross_platform_paths.py",
            "line": 22,
            "message": "Class 'CrossPlatformPaths' has 181 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\design_authority.py",
        "lines": 440,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\design_authority.py",
            "line": 1,
            "message": "File has 440 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\core\\design_authority.py",
            "line": 161,
            "message": "Line 161 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\core\\design_authority.py",
            "line": 349,
            "message": "Line 349 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\design_authority.py",
            "line": 42,
            "message": "Class 'DesignAuthority' has 383 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\design_authority.py",
            "line": 54,
            "message": "Function '_load_knowledge_base' has 80 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\design_authority.py",
            "line": 135,
            "message": "Function 'review_component_plan' has 58 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\design_authority.py",
            "line": 299,
            "message": "Function '_analyze_code_complexity' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\knowledge_base.py",
        "lines": 121,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\knowledge_base_core.py",
        "lines": 448,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\knowledge_base_core.py",
            "line": 1,
            "message": "File has 448 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\core\\knowledge_base_core.py",
            "line": 129,
            "message": "Line 129 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\core\\knowledge_base_core.py",
            "line": 148,
            "message": "Line 148 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\core\\knowledge_base_core.py",
            "line": 161,
            "message": "Line 161 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\knowledge_base_core.py",
            "line": 65,
            "message": "Class 'KnowledgeBaseCore' has 384 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\knowledge_base_manager.py",
        "lines": 271,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\core\\knowledge_base_manager.py",
            "line": 268,
            "message": "Line 268 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\knowledge_base_manager.py",
            "line": 17,
            "message": "Class 'KnowledgeBaseManager' has 255 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\knowledge_base_retriever.py",
        "lines": 226,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\knowledge_base_retriever.py",
            "line": 11,
            "message": "Class 'KnowledgeBaseRetriever' has 216 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\project_registry.py",
        "lines": 335,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\project_registry.py",
            "line": 57,
            "message": "Class 'ProjectRegistryManager' has 253 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\project_registry.py",
            "line": 115,
            "message": "Function '_create_default_registry' has 74 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\shared_error_handling.py",
        "lines": 193,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\shared_logging.py",
        "lines": 137,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\shared_validation.py",
        "lines": 205,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\swarm_action_protocol.py",
        "lines": 112,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\core\\swarm_action_protocol.py",
            "line": 70,
            "message": "Line 70 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\core\\unified_coordinate_loader.py",
        "lines": 428,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\unified_coordinate_loader.py",
            "line": 1,
            "message": "File has 428 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\unified_coordinate_loader.py",
            "line": 55,
            "message": "Class 'UnifiedCoordinateLoader' has 341 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\unified_coordinate_loader.py",
            "line": 169,
            "message": "Function '_create_default_config' has 64 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\unified_ml_pipeline.py",
        "lines": 482,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\unified_ml_pipeline.py",
            "line": 1,
            "message": "File has 482 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\unified_ml_pipeline.py",
            "line": 184,
            "message": "Class 'UnifiedMLPipeline' has 237 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\pr_review_models.py",
        "lines": 83,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\pr_review_protocol.py",
        "lines": 49,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\vibe_check_models.py",
        "lines": 42,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\vibe_check_patterns.py",
        "lines": 67,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\pr_review_protocol_refactored.py",
        "lines": 49,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\pr_review_storage.py",
        "lines": 84,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\vibe_check_analyzers.py",
        "lines": 157,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\core\\vibe_check_analyzers.py",
            "line": 30,
            "message": "Line 30 has 149 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\core\\vibe_check_analyzers.py",
            "line": 57,
            "message": "Line 57 has 144 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\core\\vibe_check_analyzers.py",
            "line": 83,
            "message": "Line 83 has 165 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\core\\vibe_check_analyzers.py",
            "line": 104,
            "message": "Line 104 has 147 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\core\\vibe_check_analyzers.py",
            "line": 123,
            "message": "Line 123 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\vibe_check_analyzers.py",
            "line": 11,
            "message": "Class 'VibeAnalyzer' has 147 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\vibe_check_core.py",
        "lines": 210,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\vibe_check_core.py",
            "line": 16,
            "message": "Class 'VibeChecker' has 195 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\vibe_check_core.py",
            "line": 40,
            "message": "Function 'check_file' has 81 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\pr_review_core.py",
        "lines": 293,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\pr_review_core.py",
            "line": 13,
            "message": "Class 'PRReviewProtocol' has 281 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\pr_review_core.py",
            "line": 110,
            "message": "Function 'review_pull_request' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\pr_review_validators.py",
        "lines": 101,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\core\\pr_review_validators.py",
            "line": 31,
            "message": "Line 31 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\core\\vibe_check.py",
        "lines": 109,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\vibe_check_refactored.py",
        "lines": 109,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\ssot_manager.py",
        "lines": 237,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\ssot_manager.py",
            "line": 47,
            "message": "Class 'SSOTManager' has 172 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\database\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\database\\backup_recovery_system.py",
        "lines": 431,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\database\\backup_recovery_system.py",
            "line": 1,
            "message": "File has 431 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\core\\database\\backup_recovery_system.py",
            "line": 210,
            "message": "Line 210 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\database\\backup_recovery_system.py",
            "line": 86,
            "message": "Class 'BackupRecoverySystem' has 346 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\database\\data_replication_system.py",
        "lines": 424,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\database\\data_replication_system.py",
            "line": 1,
            "message": "File has 424 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\database\\data_replication_system.py",
            "line": 91,
            "message": "Class 'DataReplicationSystem' has 334 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\database\\database_monitoring_system.py",
        "lines": 212,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\database\\database_monitoring_system.py",
            "line": 28,
            "message": "Class 'DatabaseMonitoringSystem' has 185 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\database\\database_monitoring_system_v2.py",
        "lines": 212,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\database\\database_monitoring_system_v2.py",
            "line": 28,
            "message": "Class 'DatabaseMonitoringSystem' has 185 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\database\\monitoring\\__init__.py",
        "lines": 24,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\database\\monitoring\\alert_manager.py",
        "lines": 237,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\database\\monitoring\\alert_manager.py",
            "line": 47,
            "message": "Class 'AlertManager' has 191 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\database\\monitoring\\health_checker.py",
        "lines": 288,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\database\\monitoring\\health_checker.py",
            "line": 37,
            "message": "Class 'HealthChecker' has 252 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\database\\monitoring\\metrics_collector.py",
        "lines": 213,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\database\\monitoring\\metrics_collector.py",
            "line": 47,
            "message": "Class 'MetricsCollector' has 167 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\security\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\security\\jwt_manager.py",
        "lines": 205,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\security\\jwt_manager.py",
            "line": 39,
            "message": "Class 'JWTManager' has 167 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\security\\oauth2_provider.py",
        "lines": 184,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\security\\oauth2_provider.py",
            "line": 43,
            "message": "Class 'OAuth2Provider' has 142 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\security\\security_cli.py",
        "lines": 255,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\security\\security_manager.py",
        "lines": 280,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\security\\security_manager.py",
            "line": 44,
            "message": "Class 'SecurityManager' has 237 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\tracing\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\tracing\\error_tracker.py",
        "lines": 416,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\core\\tracing\\error_tracker.py",
            "line": 1,
            "message": "File has 416 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\tracing\\error_tracker.py",
            "line": 72,
            "message": "Class 'ErrorTracker' has 275 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\tracing\\error_tracker.py",
            "line": 84,
            "message": "Function 'track_error' has 73 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\tracing\\error_tracker.py",
            "line": 158,
            "message": "Function 'track_custom_error' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\tracing\\jaeger_tracer.py",
        "lines": 271,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\tracing\\jaeger_tracer.py",
            "line": 38,
            "message": "Class 'JaegerTracer' has 194 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\tracing\\performance_monitor.py",
        "lines": 330,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\core\\tracing\\performance_monitor.py",
            "line": 75,
            "message": "Line 75 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\tracing\\performance_monitor.py",
            "line": 55,
            "message": "Class 'PerformanceMonitor' has 247 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\tracing\\performance_monitor.py",
            "line": 98,
            "message": "Function '_collect_system_metrics' has 63 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\tracing\\request_tracker.py",
        "lines": 268,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\tracing\\request_tracker.py",
            "line": 46,
            "message": "Class 'RequestTracker' has 223 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\tracing\\request_tracker.py",
            "line": 55,
            "message": "Function 'start_request' has 52 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\config\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\config\\unified_config_manager.py",
        "lines": 282,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\core\\config\\unified_config_manager.py",
            "line": 174,
            "message": "Line 174 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\config\\unified_config_manager.py",
            "line": 32,
            "message": "Class 'UnifiedConfigManager' has 225 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\task\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\task\\priority_scheduler.py",
        "lines": 289,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\task\\priority_scheduler.py",
            "line": 68,
            "message": "Class 'PriorityScheduler' has 198 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\task\\priority_scheduler.py",
            "line": 158,
            "message": "Function '_execute_task' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\prompts\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\prompts\\aletheia_manager.py",
        "lines": 306,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\core\\prompts\\aletheia_manager.py",
            "line": 25,
            "message": "Class 'AletheiaPromptManager' has 226 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\core\\memory\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\core\\memory\\persistent_memory.py",
        "lines": 374,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\core\\memory\\persistent_memory.py",
            "line": 126,
            "message": "Line 126 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\core\\memory\\persistent_memory.py",
            "line": 27,
            "message": "Class 'PersistentMemoryManager' has 304 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\core\\memory\\persistent_memory.py",
            "line": 146,
            "message": "Function 'get' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_devlog_service.py",
        "lines": 350,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_devlog_service.py",
            "line": 37,
            "message": "Class 'DiscordDevlogService' has 222 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\event_format.py",
        "lines": 79,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\agent_devlog_automation.py",
        "lines": 222,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\agent_devlog_automation.py",
            "line": 39,
            "message": "Class 'AgentDevlogAutomation' has 122 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot_integrated.py",
        "lines": 279,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot_integrated.py",
            "line": 43,
            "message": "Class 'IntegratedDiscordBotService' has 205 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\test_discord_commander.py",
        "lines": 225,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\test_discord_commander.py",
            "line": 26,
            "message": "Class 'DiscordCommanderTester' has 167 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\agent_devlog_posting.py",
        "lines": 71,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\aletheia_prompt_manager.py",
        "lines": 447,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\aletheia_prompt_manager.py",
            "line": 1,
            "message": "File has 447 lines, exceeds 400 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\coordinate_manager.py",
        "lines": 434,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\coordinate_manager.py",
            "line": 1,
            "message": "File has 434 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\coordinate_manager.py",
            "line": 67,
            "message": "Class 'CoordinateCalculator' has 104 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\coordinate_manager.py",
            "line": 247,
            "message": "Class 'CoordinateBatchProcessor' has 174 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\devlog_analytics_api.py",
        "lines": 448,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\devlog_analytics_api.py",
            "line": 1,
            "message": "File has 448 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_analytics_api.py",
            "line": 431,
            "message": "Line 431 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\devlog_analytics_api.py",
            "line": 26,
            "message": "Class 'DevlogAnalyticsAPI' has 418 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\devlog_analytics_api.py",
            "line": 47,
            "message": "Function '_setup_routes' has 122 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\devlog_analytics_api.py",
            "line": 51,
            "message": "Function 'get_devlogs' has 55 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\devlog_analytics_api.py",
            "line": 170,
            "message": "Function '_generate_analytics' has 61 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\devlog_analytics_api.py",
            "line": 302,
            "message": "Function '_get_trends_data' has 59 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\devlog_storytelling_service.py",
        "lines": 420,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 1,
            "message": "File has 420 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 260,
            "message": "Line 260 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 261,
            "message": "Line 261 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 262,
            "message": "Line 262 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 274,
            "message": "Line 274 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 275,
            "message": "Line 275 has 133 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 276,
            "message": "Line 276 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 277,
            "message": "Line 277 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 278,
            "message": "Line 278 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 306,
            "message": "Line 306 has 248 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 310,
            "message": "Line 310 has 242 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 347,
            "message": "Line 347 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\devlog_storytelling_service.py",
            "line": 54,
            "message": "Class 'DevlogStorytellingService' has 349 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_line_emitter.py",
        "lines": 83,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\github_protocol_models.py",
        "lines": 484,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\github_protocol_models.py",
            "line": 1,
            "message": "File has 484 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\services\\github_protocol_models.py",
            "line": 463,
            "message": "Line 463 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\github_protocol_models.py",
            "line": 483,
            "message": "Line 483 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\github_protocol_models.py",
            "line": 152,
            "message": "Class 'GitHubProtocolDatabase' has 289 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\github_protocol_service.py",
        "lines": 480,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\github_protocol_service.py",
            "line": 1,
            "message": "File has 480 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\services\\github_protocol_service.py",
            "line": 461,
            "message": "Line 461 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\github_protocol_service.py",
            "line": 37,
            "message": "Class 'GitHubProtocolService' has 404 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\github_protocol_service.py",
            "line": 97,
            "message": "Function 'create_repository' has 62 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\github_protocol_service.py",
            "line": 160,
            "message": "Function 'create_issue' has 56 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\github_protocol_service.py",
            "line": 217,
            "message": "Function 'create_pull_request' has 58 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\github_protocol_service.py",
            "line": 276,
            "message": "Function 'create_file' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\multichat_session_demo.py",
        "lines": 201,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\multichat_session_demo.py",
            "line": 18,
            "message": "Class 'MultichatSessionDemo' has 174 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\multichat_session_persistence.py",
        "lines": 360,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\multichat_session_persistence.py",
            "line": 42,
            "message": "Class 'SessionPersistence' has 319 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\persistent_memory.py",
        "lines": 489,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\persistent_memory.py",
            "line": 1,
            "message": "File has 489 lines, exceeds 400 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\secret_store.py",
        "lines": 101,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\service_manager.py",
        "lines": 384,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\service_manager.py",
            "line": 361,
            "message": "Line 361 has 127 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\service_manager.py",
            "line": 31,
            "message": "Class 'ServiceManager' has 264 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\social_media_integration.py",
        "lines": 181,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\social_media_integration.py",
            "line": 21,
            "message": "Class 'SocialMediaIntegrationService' has 107 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\swarm_intelligence_coordination.py",
        "lines": 409,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\swarm_intelligence_coordination.py",
            "line": 1,
            "message": "File has 409 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\swarm_intelligence_coordination.py",
            "line": 85,
            "message": "Class 'SwarmIntelligenceCoordination' has 325 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\v3_autonomous_workflow_system.py",
        "lines": 323,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\v3_autonomous_workflow_system.py",
            "line": 66,
            "message": "Class 'V3AutonomousWorkflowSystem' has 258 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\enhanced_onboarding.py",
        "lines": 264,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\enhanced_onboarding.py",
            "line": 91,
            "message": "Line 91 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\enhanced_onboarding.py",
            "line": 94,
            "message": "Line 94 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\enhanced_onboarding.py",
            "line": 243,
            "message": "Line 243 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\enhanced_onboarding.py",
            "line": 30,
            "message": "Class 'EnhancedOnboardingService' has 194 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\enhanced_onboarding.py",
            "line": 52,
            "message": "Function 'create_onboarding_message' has 75 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\enhanced_onboarding.py",
            "line": 128,
            "message": "Function 'execute_enhanced_onboarding' has 67 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\soft_onboarding.py",
        "lines": 263,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\soft_onboarding.py",
            "line": 91,
            "message": "Line 91 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\soft_onboarding.py",
            "line": 94,
            "message": "Line 94 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\soft_onboarding.py",
            "line": 30,
            "message": "Class 'SoftOnboardingService' has 191 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\soft_onboarding.py",
            "line": 52,
            "message": "Function 'create_soft_onboarding_message' has 75 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\soft_onboarding.py",
            "line": 128,
            "message": "Function 'execute_soft_onboarding' has 62 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging_models.py",
        "lines": 71,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\consolidated_messaging_service_core.py",
        "lines": 224,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\consolidated_messaging_core.py",
        "lines": 128,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\consolidated_messaging_core.py",
            "line": 23,
            "message": "Class 'ConsolidatedMessagingService' has 106 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\consolidated_messaging_service_utils.py",
        "lines": 283,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\consolidated_messaging_service_utils.py",
            "line": 233,
            "message": "Line 233 has 292 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\consolidated_messaging_service_utils.py",
            "line": 234,
            "message": "Line 234 has 149 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\consolidated_messaging_service_utils.py",
            "line": 241,
            "message": "Line 241 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\consolidated_messaging_service_utils.py",
            "line": 244,
            "message": "Line 244 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\consolidated_messaging_service_utils.py",
            "line": 116,
            "message": "Function 'paste_to_coords' has 70 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\consolidated_messaging_service_utils.py",
            "line": 208,
            "message": "Function 'create_onboarding_message' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\consolidated_messaging_service.py",
        "lines": 64,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\consolidated_messaging_service_main.py",
        "lines": 440,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\consolidated_messaging_service_main.py",
            "line": 1,
            "message": "File has 440 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\services\\consolidated_messaging_service_main.py",
            "line": 347,
            "message": "Line 347 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\consolidated_messaging_service_main.py",
            "line": 43,
            "message": "Class 'ConsolidatedMessagingService' has 195 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\consolidated_messaging_service_main.py",
            "line": 166,
            "message": "Function 'hard_onboard_agent' has 60 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\consolidated_messaging_service_main.py",
            "line": 240,
            "message": "Function 'build_parser' has 60 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\consolidated_messaging_service_main.py",
            "line": 302,
            "message": "Function 'main' has 134 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\broadcast.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\coordinates.py",
        "lines": 85,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\history.py",
        "lines": 42,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\onboarding_bridge.py",
        "lines": 37,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\task_handlers.py",
        "lines": 96,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\thea_handlers.py",
        "lines": 62,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\agent_context.py",
        "lines": 310,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\agent_context.py",
            "line": 21,
            "message": "Class 'AgentContextDetector' has 262 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\intelligent_coordinator.py",
        "lines": 172,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\intelligent_coordinator.py",
            "line": 32,
            "message": "Class 'IntelligentAgentCoordinator' has 141 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\intelligent_messaging.py",
        "lines": 389,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\intelligent_messaging.py",
            "line": 147,
            "message": "Line 147 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\intelligent_messaging.py",
            "line": 23,
            "message": "Class 'IntelligentMessagingService' has 367 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\models_optimized.py",
        "lines": 145,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\models_optimized.py",
            "line": 114,
            "message": "Line 114 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\messaging\\multichat_response.py",
        "lines": 409,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\messaging\\multichat_response.py",
            "line": 1,
            "message": "File has 409 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\multichat_response.py",
            "line": 26,
            "message": "Class 'MultichatResponseSystem' has 342 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\project_update_cli.py",
        "lines": 272,
        "violations": [
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\project_update_cli.py",
            "line": 28,
            "message": "Function 'build_parser' has 66 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\project_update_cli.py",
            "line": 114,
            "message": "Function 'main' has 155 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\project_update_system.py",
        "lines": 309,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\project_update_system.py",
            "line": 216,
            "message": "Line 216 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\project_update_system.py",
            "line": 24,
            "message": "Class 'ProjectUpdateSystem' has 286 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\project_update_system.py",
            "line": 33,
            "message": "Function 'send_project_update' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\workflow_integration.py",
        "lines": 359,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\workflow_integration.py",
            "line": 26,
            "message": "Class 'MessagingWorkflowIntegration' has 288 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\workflow_integration.py",
            "line": 103,
            "message": "Function 'workflow_request_help' has 74 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\workflow_integration.py",
            "line": 178,
            "message": "Function 'workflow_status_update' has 67 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\workflow_integration.py",
            "line": 246,
            "message": "Function 'workflow_task_completion' has 68 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\message_validator.py",
        "lines": 197,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\message_validator.py",
            "line": 18,
            "message": "Class 'MessageValidator' has 180 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\messaging_core.py",
        "lines": 116,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\coordination_tracker.py",
        "lines": 128,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\coordination_tracker.py",
            "line": 19,
            "message": "Class 'CoordinationTracker' has 110 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\pyautogui_handler.py",
        "lines": 201,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\pyautogui_handler.py",
            "line": 31,
            "message": "Class 'PyAutoGUIHandler' has 171 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\__init__.py",
        "lines": 26,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\enhanced_message_validator.py",
        "lines": 308,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\enhanced_message_validator.py",
            "line": 268,
            "message": "Line 268 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\enhanced_message_validator.py",
            "line": 30,
            "message": "Class 'EnhancedMessageValidator' has 215 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\enhanced_message_validator.py",
            "line": 72,
            "message": "Function 'validate_message_for_paste' has 64 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
        "lines": 393,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
            "line": 121,
            "message": "Line 121 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
            "line": 207,
            "message": "Line 207 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
            "line": 298,
            "message": "Line 298 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
            "line": 31,
            "message": "Class 'EnhancedPyAutoGUIHandler' has 340 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\memory_leak_analyzer.py",
        "lines": 361,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\memory_leak_analyzer.py",
            "line": 142,
            "message": "Line 142 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\memory_leak_analyzer.py",
            "line": 329,
            "message": "Line 329 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\memory_leak_analyzer.py",
            "line": 215,
            "message": "Class 'MessagingSystemMemoryAnalyzer' has 147 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\memory_leak_fixes.py",
        "lines": 290,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\memory_leak_analysis_report.py",
        "lines": 248,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\memory_leak_analysis_report.py",
            "line": 206,
            "message": "Line 206 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\memory_leak_analysis_report.py",
            "line": 210,
            "message": "Line 210 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\memory_leak_analysis_report.py",
            "line": 20,
            "message": "Class 'MemoryLeakAnalysisReport' has 195 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\intelligent_coordinator_models.py",
        "lines": 82,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
        "lines": 235,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
            "line": 31,
            "message": "Class 'IntelligentCoordinatorCore' has 205 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\core\\__init__.py",
        "lines": 10,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\core\\messaging_service.py",
        "lines": 205,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\core\\messaging_service.py",
            "line": 32,
            "message": "Class 'MessagingService' has 174 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\core\\coordinate_loader.py",
        "lines": 90,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\broadcast_service\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\cli\\__init__.py",
        "lines": 16,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\cli\\messaging_cli_clean.py",
        "lines": 171,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\cli\\messaging_cli_clean.py",
            "line": 22,
            "message": "Class 'MessagingCLI' has 143 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\cli\\messaging_cli_clean.py",
            "line": 28,
            "message": "Function 'create_parser' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\cli\\perf_cli\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\delivery\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\delivery\\inbox_delivery.py",
        "lines": 39,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\delivery\\fallback.py",
        "lines": 71,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
        "lines": 124,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
            "line": 114,
            "message": "Line 114 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\messaging\\history_service\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\interfaces\\__init__.py",
        "lines": 26,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\interfaces\\messaging_interfaces.py",
        "lines": 102,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\models\\messaging_models.py",
        "lines": 162,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\models\\messaging_enums.py",
        "lines": 81,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\models\\__init__.py",
        "lines": 35,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\providers\\__init__.py",
        "lines": 18,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\providers\\discord_provider.py",
        "lines": 431,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\messaging\\providers\\discord_provider.py",
            "line": 1,
            "message": "File has 431 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\providers\\discord_provider.py",
            "line": 27,
            "message": "Class 'DiscordMessagingProvider' has 163 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\providers\\discord_provider.py",
            "line": 192,
            "message": "Class 'DiscordCommandHandler' has 233 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\messaging\\providers\\discord_provider.py",
            "line": 201,
            "message": "Function 'setup_slash_commands' has 224 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\providers\\fallback_provider\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\onboarding\\__init__.py",
        "lines": 15,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
        "lines": 193,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
            "line": 21,
            "message": "Class 'OnboardingService' has 169 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\messaging\\status\\__init__.py",
        "lines": 10,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\messaging\\status\\status_monitor.py",
        "lines": 164,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\messaging\\status\\status_monitor.py",
            "line": 17,
            "message": "Class 'StatusMonitor' has 148 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_login_detector.py",
        "lines": 373,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_login_detector.py",
            "line": 109,
            "message": "Line 109 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_login_detector.py",
            "line": 256,
            "message": "Line 256 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_login_detector.py",
            "line": 283,
            "message": "Line 283 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_login_detector.py",
            "line": 286,
            "message": "Line 286 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_login_detector.py",
            "line": 290,
            "message": "Line 290 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_login_detector.py",
            "line": 38,
            "message": "Class 'TheaLoginDetector' has 297 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_login_detector.py",
            "line": 53,
            "message": "Function 'is_logged_in' has 264 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_login_handler_refactored.py",
        "lines": 353,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_login_handler_refactored.py",
            "line": 46,
            "message": "Class 'TheaLoginHandler' has 270 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_login_handler_refactored.py",
            "line": 81,
            "message": "Function 'ensure_login' has 73 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_login_handler_refactored.py",
            "line": 155,
            "message": "Function '_automated_login' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_autonomous_cli.py",
        "lines": 353,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_autonomous_cli.py",
            "line": 74,
            "message": "Line 74 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_autonomous_cli.py",
            "line": 116,
            "message": "Function 'main' has 102 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_autonomous_cli.py",
            "line": 220,
            "message": "Function 'conversation_command' has 71 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_autonomous_cli.py",
            "line": 293,
            "message": "Function 'analytics_command' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_cookie_manager.py",
        "lines": 229,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_cookie_manager.py",
            "line": 39,
            "message": "Class 'TheaCookieManager' has 163 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_cookie_manager.py",
            "line": 52,
            "message": "Function 'save_cookies' has 59 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\__init__.py",
        "lines": 93,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\thea\\thea_analytics_reporter.py",
        "lines": 324,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_analytics_reporter.py",
            "line": 127,
            "message": "Line 127 has 163 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_analytics_reporter.py",
            "line": 166,
            "message": "Line 166 has 158 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_analytics_reporter.py",
            "line": 167,
            "message": "Line 167 has 124 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_analytics_reporter.py",
            "line": 178,
            "message": "Line 178 has 142 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_analytics_reporter.py",
            "line": 224,
            "message": "Line 224 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_analytics_reporter.py",
            "line": 51,
            "message": "Class 'TheaAnalyticsReporter' has 243 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_analytics_reporter.py",
            "line": 110,
            "message": "Function 'generate_strategic_report' has 75 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_browser_manager.py",
        "lines": 159,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_browser_manager.py",
            "line": 107,
            "message": "Line 107 has 132 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\thea\\thea_communication_core.py",
        "lines": 397,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_communication_core.py",
            "line": 32,
            "message": "Class 'TheaCommunicationCore' has 366 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_communication_core.py",
            "line": 55,
            "message": "Function 'send_message_selenium' has 121 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_communication_core.py",
            "line": 282,
            "message": "Function 'create_conversation_log' has 73 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_communication_interface.py",
        "lines": 343,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_communication_interface.py",
            "line": 31,
            "message": "Class 'TheaCommunicationInterface' has 253 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_communication_interface.py",
            "line": 168,
            "message": "Function 'capture_thea_response' has 56 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_communication_interface.py",
            "line": 229,
            "message": "Function 'run_communication_cycle' has 55 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_communication_interface.py",
            "line": 286,
            "message": "Function 'main' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_error_recovery.py",
        "lines": 373,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_error_recovery.py",
            "line": 58,
            "message": "Class 'TheaErrorRecovery' has 300 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_monitoring_system.py",
        "lines": 466,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\thea\\thea_monitoring_system.py",
            "line": 1,
            "message": "File has 466 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_monitoring_system.py",
            "line": 64,
            "message": "Class 'TheaMonitoringSystem' has 368 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\context_templates.py",
        "lines": 304,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 109,
            "message": "Line 109 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 148,
            "message": "Line 148 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 251,
            "message": "Line 251 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 256,
            "message": "Line 256 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 283,
            "message": "Line 283 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 290,
            "message": "Line 290 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 297,
            "message": "Line 297 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\context_templates.py",
            "line": 58,
            "message": "Class 'ProjectContextManager' has 189 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\strategic_consultation_cli.py",
        "lines": 472,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 1,
            "message": "File has 472 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 10,
            "message": "Line 10 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 13,
            "message": "Line 13 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 220,
            "message": "Line 220 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 258,
            "message": "Line 258 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 338,
            "message": "Line 338 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 341,
            "message": "Line 341 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 378,
            "message": "Line 378 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 436,
            "message": "Line 436 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 28,
            "message": "Function 'consult_command' has 67 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 178,
            "message": "Function 'paste_message_command' has 165 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\strategic_consultation_cli.py",
            "line": 367,
            "message": "Function 'main' has 102 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_autonomous_system.py",
        "lines": 375,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_autonomous_system.py",
            "line": 38,
            "message": "Class 'TheaAutonomousSystem' has 290 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_autonomous_system.py",
            "line": 95,
            "message": "Function 'initialize' has 67 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\thea\\thea_autonomous_system.py",
            "line": 163,
            "message": "Function 'send_message_autonomous' has 96 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\thea\\thea_conversation_manager.py",
        "lines": 352,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\thea\\thea_conversation_manager.py",
            "line": 158,
            "message": "Line 158 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\thea\\thea_conversation_manager.py",
            "line": 53,
            "message": "Class 'TheaConversationManager' has 271 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\__init__.py",
        "lines": 76,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 36,
            "message": "Line 36 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 38,
            "message": "Line 38 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 39,
            "message": "Line 39 has 131 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 41,
            "message": "Line 41 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 42,
            "message": "Line 42 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 43,
            "message": "Line 43 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 44,
            "message": "Line 44 has 125 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 45,
            "message": "Line 45 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\__init__.py",
            "line": 46,
            "message": "Line 46 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\vector_database\\architecture_integration.py",
        "lines": 367,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\architecture_integration.py",
            "line": 61,
            "message": "Line 61 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\architecture_integration.py",
            "line": 26,
            "message": "Class 'ArchitectureIntegration' has 333 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\vector_database\\architecture_integration.py",
            "line": 206,
            "message": "Function 'get_architecture_analytics' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
        "lines": 391,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
            "line": 120,
            "message": "Line 120 has 151 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
            "line": 67,
            "message": "Class 'CompleteInfrastructureIntegration' has 316 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
            "line": 149,
            "message": "Function '_monitor_infrastructure_components' has 70 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\core_integration.py",
        "lines": 289,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\core_integration.py",
            "line": 32,
            "message": "Class 'VectorDatabaseCoreIntegration' has 249 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\data_processor.py",
        "lines": 305,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\data_processor.py",
            "line": 22,
            "message": "Class 'VectorDataProcessor' has 275 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\enhanced_collaboration.py",
        "lines": 328,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
        "lines": 342,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
            "line": 241,
            "message": "Line 241 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
            "line": 56,
            "message": "Class 'ComplexityAnalyzer' has 111 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\performance_optimization_framework.py",
        "lines": 339,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\performance_optimization_framework.py",
            "line": 323,
            "message": "Line 323 has 165 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\vector_database\\project_completion_system.py",
        "lines": 305,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\quality_assurance_framework.py",
        "lines": 311,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\record_time_migration.py",
        "lines": 362,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\record_time_migration.py",
            "line": 74,
            "message": "Line 74 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\record_time_migration.py",
            "line": 28,
            "message": "Class 'RecordTimeMigration' has 326 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\status_indexer.py",
        "lines": 59,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\test_vector_database.py",
        "lines": 312,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\test_vector_database.py",
            "line": 32,
            "message": "Class 'TestVectorDatabase' has 276 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
        "lines": 101,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\vector_database_integration.py",
        "lines": 124,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\vector_database_models.py",
        "lines": 403,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\vector_database\\vector_database_models.py",
            "line": 1,
            "message": "File has 403 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\vector_database_models.py",
            "line": 178,
            "message": "Class 'VectorDatabaseConnection' has 117 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\vector_database\\vector_database_models.py",
            "line": 199,
            "message": "Function '_create_tables' has 75 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\vector_database_monitoring.py",
        "lines": 198,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
        "lines": 225,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
            "line": 33,
            "message": "Class 'VectorDatabaseOrchestrator' has 193 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\query_analytics.py",
        "lines": 295,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\query_analytics.py",
            "line": 112,
            "message": "Line 112 has 160 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\query_analytics.py",
            "line": 26,
            "message": "Class 'VectorDatabaseQueryAnalytics' has 261 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\vector_database\\query_analytics.py",
            "line": 41,
            "message": "Function 'query' has 90 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\security_validator_core.py",
        "lines": 346,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\security_validator_core.py",
            "line": 18,
            "message": "Class 'VectorDatabaseSecurityCore' has 329 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\security_validator_checks.py",
        "lines": 319,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\security_validator_checks.py",
            "line": 18,
            "message": "Class 'SecurityChecks' has 302 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\security_validator_main.py",
        "lines": 218,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\security_validator_main.py",
            "line": 20,
            "message": "Class 'VectorDatabaseSecurityValidator' has 185 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\security_validator.py",
        "lines": 62,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\orchestration\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\orchestration\\core.py",
        "lines": 55,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\contracts\\__init__.py",
        "lines": 37,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
        "lines": 195,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
            "line": 54,
            "message": "Line 54 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
            "line": 23,
            "message": "Class 'ContractExecutionCore' has 173 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\contracts\\contract_models.py",
        "lines": 111,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
        "lines": 153,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
            "line": 19,
            "message": "Class 'ContractPerformanceMonitor' has 135 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
        "lines": 144,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
            "line": 19,
            "message": "Class 'ContractQualityValidator' has 126 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\contracts\\contract_utils.py",
        "lines": 112,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\indexing\\__init__.py",
        "lines": 13,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\indexing\\manager.py",
        "lines": 121,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\vector_database\\indexing\\manager.py",
            "line": 18,
            "message": "Class 'IndexManager' has 104 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\vector_database\\indexing\\processor.py",
        "lines": 104,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\vector_database\\indexing\\types.py",
        "lines": 83,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\__init__.py",
        "lines": 20,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\blockers\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\blockers\\blocker_resolver.py",
        "lines": 327,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\blockers\\blocker_resolver.py",
            "line": 16,
            "message": "Class 'BlockerResolver' has 312 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\autonomous\\core\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
        "lines": 185,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
            "line": 112,
            "message": "Line 112 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
            "line": 137,
            "message": "Line 137 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
            "line": 144,
            "message": "Line 144 has 146 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
            "line": 31,
            "message": "Class 'AgentAutonomousWorkflow' has 155 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\autonomous\\mailbox\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\mailbox\\mailbox_manager.py",
        "lines": 174,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\mailbox\\mailbox_manager.py",
            "line": 111,
            "message": "Line 111 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\mailbox\\mailbox_manager.py",
            "line": 17,
            "message": "Class 'MailboxManager' has 158 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\autonomous\\operations\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
        "lines": 276,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
            "line": 17,
            "message": "Class 'AutonomousOperations' has 260 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\__init__.py",
        "lines": 15,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\core.py",
        "lines": 131,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\operations\\modular\\core.py",
            "line": 63,
            "message": "Line 63 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\operations\\modular\\core.py",
            "line": 68,
            "message": "Line 68 has 141 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\operations\\modular\\core.py",
            "line": 78,
            "message": "Line 78 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\operations\\modular\\core.py",
            "line": 94,
            "message": "Line 94 has 165 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\operations\\modular\\core.py",
            "line": 22,
            "message": "Class 'AutonomousOperationsCore' has 110 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\operation_executor.py",
        "lines": 81,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\operations\\modular\\operation_executor.py",
            "line": 61,
            "message": "Line 61 has 123 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\operations\\modular\\operation_executor.py",
            "line": 67,
            "message": "Line 67 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\operations_loader.py",
        "lines": 143,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\operations\\modular\\operations_loader.py",
            "line": 17,
            "message": "Class 'OperationsLoader' has 127 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
        "lines": 120,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
            "line": 17,
            "message": "Class 'OperationsManager' has 104 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\__init__.py",
        "lines": 28,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\code_review_executor.py",
        "lines": 61,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\autonomous\\operations\\modular\\executors\\code_review_executor.py",
            "line": 40,
            "message": "Line 40 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\documentation_update_executor.py",
        "lines": 27,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\performance_analysis_executor.py",
        "lines": 60,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\security_scan_executor.py",
        "lines": 27,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\ssot_validation_executor.py",
        "lines": 27,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\swarm_coordination_analysis_executor.py",
        "lines": 27,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\system_integration_scan_executor.py",
        "lines": 27,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\operations\\modular\\executors\\test_optimization_executor.py",
        "lines": 27,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\tasks\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\autonomous\\tasks\\task_manager.py",
        "lines": 193,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\autonomous\\tasks\\task_manager.py",
            "line": 17,
            "message": "Class 'TaskManager' has 177 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\__init__.py",
        "lines": 11,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\agent_coordination.py",
        "lines": 13,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
        "lines": 229,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
            "line": 185,
            "message": "Line 185 has 126 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
            "line": 186,
            "message": "Line 186 has 164 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
            "line": 187,
            "message": "Line 187 has 133 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
            "line": 188,
            "message": "Line 188 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
            "line": 195,
            "message": "Line 195 has 231 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
            "line": 20,
            "message": "Function 'setup_basic_commands' has 185 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\basic_commands_modular.py",
        "lines": 28,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\button_handlers.py",
        "lines": 167,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\button_handlers.py",
            "line": 101,
            "message": "Line 101 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\help_command.py",
        "lines": 67,
        "violations": [
          {
            "type": "function_loc",
            "file": "src\\services\\discord_bot\\commands\\help_command.py",
            "line": 17,
            "message": "Function 'setup_help_command' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\main_interface.py",
        "lines": 270,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\main_interface.py",
            "line": 110,
            "message": "Line 110 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\main_interface.py",
            "line": 115,
            "message": "Line 115 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\commands\\main_interface.py",
            "line": 14,
            "message": "Class 'MainInterface' has 257 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
        "lines": 87,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\ping_command.py",
        "lines": 38,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\response_utils.py",
        "lines": 38,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\safe_response_utils.py",
        "lines": 63,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\social_media_commands.py",
        "lines": 272,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\commands\\social_media_commands.py",
            "line": 23,
            "message": "Class 'SocialMediaCommands' has 245 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\webhook_setup_commands.py",
        "lines": 203,
        "violations": [
          {
            "type": "function_loc",
            "file": "src\\services\\discord_bot\\commands\\webhook_setup_commands.py",
            "line": 21,
            "message": "Function 'setup_webhook_setup_commands' has 183 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\agent_coordination\\__init__.py",
        "lines": 15,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
        "lines": 209,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
            "line": 64,
            "message": "Line 64 has 133 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
            "line": 132,
            "message": "Line 132 has 168 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
            "line": 21,
            "message": "Class 'AgentCoordinationCore' has 189 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\agent_coordination\\messaging.py",
        "lines": 173,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\messaging.py",
            "line": 30,
            "message": "Line 30 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\messaging.py",
            "line": 36,
            "message": "Line 36 has 149 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\messaging.py",
            "line": 130,
            "message": "Line 130 has 151 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
        "lines": 188,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
            "line": 40,
            "message": "Line 40 has 224 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
            "line": 89,
            "message": "Line 89 has 134 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
            "line": 95,
            "message": "Line 95 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
            "line": 143,
            "message": "Line 143 has 150 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
            "line": 149,
            "message": "Line 149 has 169 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
            "line": 184,
            "message": "Line 184 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
            "line": 17,
            "message": "Class 'AgentOnboardingHandler' has 172 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\commands\\agent_coordination\\status.py",
        "lines": 162,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\status.py",
            "line": 40,
            "message": "Line 40 has 178 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\status.py",
            "line": 46,
            "message": "Line 46 has 156 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\status.py",
            "line": 17,
            "message": "Class 'AgentStatusHandler' has 146 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\discord_bot\\commands\\agent_coordination\\status.py",
            "line": 97,
            "message": "Function 'get_agent_status' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\core\\__init__.py",
        "lines": 6,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\core\\discord_bot_models.py",
        "lines": 56,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\core\\discord_bot_core.py",
        "lines": 118,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\core\\discord_bot_core.py",
            "line": 17,
            "message": "Class 'DiscordBotCore' has 102 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\core\\discord_bot.py",
        "lines": 99,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\core\\commands\\__init__.py",
        "lines": 13,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\core\\commands\\social_media_commands.py",
        "lines": 168,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\core\\commands\\social_media_commands.py",
            "line": 23,
            "message": "Class 'SocialMediaCommands' has 141 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\ui\\__init__.py",
        "lines": 13,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\ui\\discord_ui.py",
        "lines": 466,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\discord_bot\\ui\\discord_ui.py",
            "line": 1,
            "message": "File has 466 lines, exceeds 400 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_bot\\tools\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_bot\\tools\\webhook_provisioner.py",
        "lines": 197,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_bot\\tools\\webhook_provisioner.py",
            "line": 16,
            "message": "Class 'DiscordWebhookProvisioner' has 167 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\alerting\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\alerting\\intelligent_alerting_system.py",
        "lines": 428,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\alerting\\intelligent_alerting_system.py",
            "line": 1,
            "message": "File has 428 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\alerting\\intelligent_alerting_system.py",
            "line": 109,
            "message": "Class 'IntelligentAlertingSystem' has 320 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\dashboard\\__init__.py",
        "lines": 21,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\dashboard\\dashboard_web_core.py",
        "lines": 196,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\dashboard\\dashboard_web_core.py",
            "line": 21,
            "message": "Class 'DashboardWebHandler' has 143 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\dashboard\\dashboard_web_html.py",
        "lines": 347,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\dashboard\\dashboard_web_html.py",
            "line": 301,
            "message": "Line 301 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\dashboard\\dashboard_web_html.py",
            "line": 322,
            "message": "Line 322 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\dashboard\\dashboard_web_html.py",
            "line": 326,
            "message": "Line 326 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\dashboard\\dashboard_web_html.py",
            "line": 330,
            "message": "Line 330 has 132 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\dashboard\\dashboard_web_html.py",
            "line": 334,
            "message": "Line 334 has 119 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\dashboard\\dashboard_web_html.py",
            "line": 12,
            "message": "Function 'generate_dashboard_html' has 336 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\dashboard\\dashboard_web_interface.py",
        "lines": 57,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\dashboard\\dashboard_web_utils.py",
        "lines": 150,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\dashboard\\swarm_coordination_dashboard.py",
        "lines": 289,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\dashboard\\swarm_coordination_dashboard.py",
            "line": 69,
            "message": "Class 'SwarmCoordinationDashboard' has 221 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\__init__.py",
        "lines": 44,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\commands.py",
        "lines": 351,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\commands.py",
            "line": 153,
            "message": "Line 153 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\commands.py",
            "line": 27,
            "message": "Class 'AgentCommands' has 113 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\core.py",
        "lines": 270,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\core.py",
            "line": 61,
            "message": "Line 61 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\core.py",
            "line": 68,
            "message": "Line 68 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\discord_commander\\optimization.py",
        "lines": 425,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\services\\discord_commander\\optimization.py",
            "line": 1,
            "message": "File has 425 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\optimization.py",
            "line": 272,
            "message": "Class 'DiscordOptimizer' has 154 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\web_controller_core.py",
        "lines": 79,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\bot_commands.py",
        "lines": 214,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\bot_commands.py",
            "line": 177,
            "message": "Line 177 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\bot_commands.py",
            "line": 20,
            "message": "Class 'CommandManager' has 195 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\bot_core.py",
        "lines": 74,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\bot_events.py",
        "lines": 217,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\bot_events.py",
            "line": 20,
            "message": "Class 'DiscordBotEvents' has 198 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\bot_v2.py",
        "lines": 174,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\bot_v2.py",
            "line": 24,
            "message": "Class 'DiscordCommanderBotV2' has 151 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\optimization_utils.py",
        "lines": 267,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\performance_metrics.py",
        "lines": 248,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\performance_metrics.py",
            "line": 205,
            "message": "Line 205 has 159 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\performance_metrics.py",
            "line": 218,
            "message": "Line 218 has 156 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\performance_metrics.py",
            "line": 231,
            "message": "Line 231 has 128 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\performance_metrics.py",
            "line": 244,
            "message": "Line 244 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\discord_commander\\performance_metrics.py",
            "line": 191,
            "message": "Function 'check_for_alerts' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\performance_monitor.py",
        "lines": 199,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\performance_monitor.py",
            "line": 66,
            "message": "Line 66 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\performance_monitor.py",
            "line": 30,
            "message": "Class 'DiscordPerformanceMonitor' has 170 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\social_media_poster.py",
        "lines": 101,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\socket_events.py",
        "lines": 172,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\socket_events.py",
            "line": 23,
            "message": "Class 'SocketEventHandler' has 150 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\discord_commander\\socket_events.py",
            "line": 32,
            "message": "Function 'register_events' has 114 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\web_controller_refactored.py",
        "lines": 105,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\web_handlers.py",
        "lines": 244,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\web_handlers.py",
            "line": 86,
            "message": "Line 86 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\web_handlers.py",
            "line": 28,
            "message": "Class 'WebHandlers' has 217 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\web_models.py",
        "lines": 172,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\web_utils.py",
        "lines": 259,
        "violations": [
          {
            "type": "function_loc",
            "file": "src\\services\\discord_commander\\web_utils.py",
            "line": 151,
            "message": "Function 'get_agent_workspace_info' has 65 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\web_controller_v2.py",
        "lines": 264,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\web_controller_v2.py",
            "line": 113,
            "message": "Line 113 has 151 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\web_controller_v2.py",
            "line": 122,
            "message": "Line 122 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\web_controller_v2.py",
            "line": 195,
            "message": "Line 195 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\web_controller_v2.py",
            "line": 32,
            "message": "Class 'DiscordCommanderControllerV2' has 210 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\discord_commander\\web_controller_v2.py",
            "line": 77,
            "message": "Function '_create_default_templates' has 97 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\web_controller_main.py",
        "lines": 79,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\web_controller_main.py",
            "line": 64,
            "message": "Line 64 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\services\\discord_commander\\web_controller_models.py",
        "lines": 49,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\web_routes.py",
        "lines": 123,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\web_routes.py",
            "line": 15,
            "message": "Class 'WebRoutes' has 109 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\web_controller.py",
        "lines": 15,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\bot_config.py",
        "lines": 48,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\discord_commander\\bot_main.py",
        "lines": 255,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\discord_commander\\bot_main.py",
            "line": 170,
            "message": "Line 170 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\discord_commander\\bot_main.py",
            "line": 39,
            "message": "Class 'DiscordCommanderBot' has 122 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\discord_commander\\bot.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\agent_devlog\\__init__.py",
        "lines": 39,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\agent_devlog\\agent_validation.py",
        "lines": 190,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\agent_devlog\\agent_validation.py",
            "line": 15,
            "message": "Class 'AgentValidator' has 176 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\agent_devlog\\cli.py",
        "lines": 239,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\agent_devlog\\cli.py",
            "line": 103,
            "message": "Line 103 has 132 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\agent_devlog\\cli.py",
            "line": 16,
            "message": "Class 'AgentDevlogCLI' has 211 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\agent_devlog\\cli.py",
            "line": 23,
            "message": "Function 'create_parser' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\agent_devlog\\devlog_poster.py",
        "lines": 234,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\agent_devlog\\devlog_poster.py",
            "line": 100,
            "message": "Line 100 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\agent_devlog\\devlog_poster.py",
            "line": 19,
            "message": "Class 'AgentDevlogPoster' has 216 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\agent_devlog\\devlog_poster.py",
            "line": 76,
            "message": "Function 'post_devlog' has 74 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\agent_devlog\\models.py",
        "lines": 89,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\agent_devlog\\storage.py",
        "lines": 203,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\agent_devlog\\storage.py",
            "line": 19,
            "message": "Class 'DevlogStorage' has 185 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\role_assignment\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\role_assignment\\contract_integration.py",
        "lines": 272,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\role_assignment\\contract_integration.py",
            "line": 56,
            "message": "Line 56 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\role_assignment\\contract_integration.py",
            "line": 75,
            "message": "Line 75 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\role_assignment\\contract_integration.py",
            "line": 113,
            "message": "Line 113 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\role_assignment\\contract_integration.py",
            "line": 120,
            "message": "Line 120 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\role_assignment\\contract_integration.py",
            "line": 262,
            "message": "Line 262 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\role_assignment\\contract_integration.py",
            "line": 42,
            "message": "Class 'ContractIntegration' has 206 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\role_assignment\\contract_integration.py",
            "line": 50,
            "message": "Function '_define_general_cycle' has 99 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\role_assignment\\role_assignment_service.py",
        "lines": 290,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\services\\role_assignment\\role_assignment_service.py",
            "line": 60,
            "message": "Class 'RoleAssignmentService' has 175 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\devlog_storytelling\\__init__.py",
        "lines": 93,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
        "lines": 214,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 38,
            "message": "Line 38 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 39,
            "message": "Line 39 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 40,
            "message": "Line 40 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 41,
            "message": "Line 41 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 42,
            "message": "Line 42 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 45,
            "message": "Line 45 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 46,
            "message": "Line 46 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 47,
            "message": "Line 47 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 50,
            "message": "Line 50 has 130 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 51,
            "message": "Line 51 has 124 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 60,
            "message": "Line 60 has 155 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 64,
            "message": "Line 64 has 186 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 68,
            "message": "Line 68 has 177 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 75,
            "message": "Line 75 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 76,
            "message": "Line 76 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 191,
            "message": "Line 191 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 21,
            "message": "Class 'RoleIntegration' has 194 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 30,
            "message": "Function 'register_storytelling_tools' has 63 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
            "line": 112,
            "message": "Function 'create_role_tool_guide' has 65 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\services\\code_archaeology\\__init__.py",
        "lines": 111,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\application_layer.py",
        "lines": 322,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\design_patterns.py",
        "lines": 351,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\design_patterns_v2.py",
        "lines": 403,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\architecture\\design_patterns_v2.py",
            "line": 1,
            "message": "File has 403 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\architecture\\design_patterns_v2.py",
            "line": 91,
            "message": "Line 91 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\architecture\\repository_layer.py",
        "lines": 292,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\service_layer.py",
        "lines": 341,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\system_integration.py",
        "lines": 278,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\unified_architecture_core.py",
        "lines": 323,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\architecture\\unified_architecture_core.py",
            "line": 65,
            "message": "Class 'ComponentLifecycle' has 103 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\architecture\\patterns\\singleton_factory.py",
        "lines": 138,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\architecture\\patterns\\singleton_factory.py",
            "line": 65,
            "message": "Line 65 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\architecture\\patterns\\__init__.py",
        "lines": 65,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\patterns\\command_repository.py",
        "lines": 262,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\architecture\\patterns\\observer_strategy.py",
        "lines": 201,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\domain\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\domain\\domain_events.py",
        "lines": 320,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\domain\\entities\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\domain\\entities\\agent.py",
        "lines": 450,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\domain\\entities\\agent.py",
            "line": 1,
            "message": "File has 450 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\domain\\entities\\agent.py",
            "line": 76,
            "message": "Class 'Agent' has 319 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\domain\\entities\\task_enums.py",
        "lines": 42,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\domain\\entities\\task_core.py",
        "lines": 155,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\domain\\entities\\task_core.py",
            "line": 24,
            "message": "Class 'TaskCore' has 132 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\domain\\entities\\task.py",
        "lines": 19,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\monitoring\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\monitoring\\memory_optimized_monitor.py",
        "lines": 339,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\monitoring\\memory_optimized_monitor.py",
            "line": 48,
            "message": "Class 'MemoryOptimizedMonitor' has 268 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\monitoring\\performance_monitor.py",
        "lines": 422,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\monitoring\\performance_monitor.py",
            "line": 1,
            "message": "File has 422 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\monitoring\\performance_monitor.py",
            "line": 70,
            "message": "Class 'RealTimePerformanceMonitor' has 329 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\fsm\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\fsm\\activity_monitor.py",
        "lines": 194,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\fsm\\activity_monitor.py",
            "line": 24,
            "message": "Class 'ActivityMonitor' has 164 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\fsm\\captain_dashboard.py",
        "lines": 203,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\fsm\\captain_dashboard.py",
            "line": 22,
            "message": "Class 'CaptainDashboard' has 175 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\fsm\\fsm_messaging_integration.py",
        "lines": 180,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\fsm\\fsm_messaging_integration.py",
            "line": 161,
            "message": "Line 161 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\fsm\\fsm_messaging_integration.py",
            "line": 35,
            "message": "Class 'FSMMessagingIntegration' has 131 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\fsm\\fsm_registry.py",
        "lines": 213,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\v3_007_infrastructure.py",
        "lines": 42,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\v3_007_data_management.py",
        "lines": 47,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\v3_007_model_management.py",
        "lines": 108,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\v3_007_deployment.py",
        "lines": 43,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\ml_monitoring.py",
        "lines": 140,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_monitoring.py",
            "line": 21,
            "message": "Class 'MLMonitoring' has 120 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_monitoring_core.py",
        "lines": 198,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_monitoring_core.py",
            "line": 21,
            "message": "Class 'MLMonitoringCore' has 178 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_monitoring_models.py",
        "lines": 56,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\ml_monitoring_storage.py",
        "lines": 153,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_monitoring_storage.py",
            "line": 20,
            "message": "Class 'MLMonitoringStorage' has 134 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_core.py",
        "lines": 126,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_core.py",
            "line": 16,
            "message": "Class 'MLPipelineCore' has 111 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_core_fixed.py",
        "lines": 346,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_core_fixed.py",
            "line": 155,
            "message": "Class 'MLPipelineCore' has 192 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_core_refactored.py",
        "lines": 333,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_core_refactored.py",
            "line": 28,
            "message": "Class 'MLPipelineCore' has 306 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_core_refactored.py",
            "line": 188,
            "message": "Function 'train_model' has 59 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_core_refactored.py",
            "line": 248,
            "message": "Function 'evaluate_model' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
        "lines": 359,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
            "line": 28,
            "message": "Class 'MLPipelineCore' has 332 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_core_v2_final.py",
        "lines": 297,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_final.py",
            "line": 28,
            "message": "Class 'MLPipelineCore' has 270 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
        "lines": 263,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
            "line": 28,
            "message": "Class 'MLPipelineCore' has 236 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
            "line": 150,
            "message": "Function 'train_model' has 55 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
            "line": 206,
            "message": "Function 'evaluate_model' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
        "lines": 265,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
            "line": 28,
            "message": "Class 'MLPipelineCore' has 238 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
            "line": 150,
            "message": "Function 'train_model' has 51 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
            "line": 208,
            "message": "Function 'evaluate_model' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_fallback.py",
        "lines": 158,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_fallback.py",
            "line": 20,
            "message": "Class 'FallbackMLModel' has 139 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_fallback.py",
            "line": 32,
            "message": "Function 'train' has 64 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_manager.py",
        "lines": 217,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_manager.py",
            "line": 26,
            "message": "Class 'MLPipelineManager' has 192 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_manager.py",
            "line": 39,
            "message": "Function 'run_complete_pipeline' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_models.py",
        "lines": 48,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\ml_pipeline_system.py",
        "lines": 174,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\ml_pipeline_system.py",
            "line": 26,
            "message": "Class 'MLPipelineSystem' has 144 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\ml_pipeline_system.py",
            "line": 96,
            "message": "Function 'export_system_data' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\ml_pipeline_system_v2.py",
        "lines": 311,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\ml_pipeline_utils.py",
        "lines": 186,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\model_deployment.py",
        "lines": 297,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\model_deployment.py",
            "line": 10,
            "message": "Class 'ModelDeployment' has 288 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\model_deployment.py",
            "line": 41,
            "message": "Function 'deploy_model' has 56 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\model_deployment.py",
            "line": 98,
            "message": "Function 'predict' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\model_versioning.py",
        "lines": 83,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\ml\\model_versioning.py",
            "line": 69,
            "message": "Line 69 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\ml\\pipeline.py",
        "lines": 95,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\pipeline_v2.py",
        "lines": 95,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\pytorch_infrastructure.py",
        "lines": 317,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\pytorch_infrastructure.py",
            "line": 12,
            "message": "Class 'PyTorchInfrastructure' has 306 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\pytorch_infrastructure.py",
            "line": 182,
            "message": "Function 'train_model' has 109 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\tensorflow_infrastructure.py",
        "lines": 236,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\tensorflow_infrastructure.py",
            "line": 9,
            "message": "Class 'TensorFlowInfrastructure' has 228 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\training_pipeline.py",
        "lines": 361,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\training_pipeline.py",
            "line": 39,
            "message": "Class 'TrainingPipeline' has 323 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\v3_007_automation.py",
        "lines": 48,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\v3_007_core.py",
        "lines": 274,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\ml\\v3_007_core.py",
            "line": 108,
            "message": "Line 108 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\ml\\v3_007_core.py",
            "line": 33,
            "message": "Class 'V3_007_MLPipelineCore' has 242 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\v3_007_core.py",
            "line": 36,
            "message": "Function '__init__' has 52 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\v3_007_core.py",
            "line": 89,
            "message": "Function 'execute_implementation' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\v3_007_monitoring.py",
        "lines": 51,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\validation_framework.py",
        "lines": 57,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\model_versioning_core.py",
        "lines": 200,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\ml\\model_versioning_core.py",
            "line": 188,
            "message": "Line 188 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\ml\\model_versioning_core.py",
            "line": 40,
            "message": "Class 'ModelVersioningCore' has 161 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\model_versioning_advanced.py",
        "lines": 179,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\ml\\model_versioning_advanced.py",
            "line": 32,
            "message": "Line 32 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\ml\\model_versioning_advanced.py",
            "line": 73,
            "message": "Line 73 has 116 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\ml\\model_versioning_advanced.py",
            "line": 169,
            "message": "Line 169 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\ml\\model_versioning_advanced.py",
            "line": 9,
            "message": "Class 'ModelVersioningAdvanced' has 171 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\validation_framework_core.py",
        "lines": 223,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\ml\\validation_framework_core.py",
            "line": 92,
            "message": "Line 92 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\ml\\validation_framework_core.py",
            "line": 63,
            "message": "Class 'ValidationFrameworkCore' has 161 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\validation_framework_core.py",
            "line": 77,
            "message": "Function 'run_test' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\data_ingestion_system\\__init__.py",
        "lines": 0,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\data_ingestion_system\\data_ingestion\\IngestManager.py",
        "lines": 201,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\data_ingestion_system\\data_ingestion\\IngestManager.py",
            "line": 17,
            "message": "Class 'IngestManager' has 159 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\data_ingestion_system\\data_ingestion\\LocalEmbeddingsGeneratorAgent.py",
        "lines": 96,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\data_ingestion_system\\data_ingestion\\OrchestratorAgent.py",
        "lines": 180,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\data_ingestion_system\\data_ingestion\\OrchestratorAgent.py",
            "line": 14,
            "message": "Class 'OrchestratorAgent' has 167 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\ml\\data_ingestion_system\\data_ingestion\\OrchestratorAgent.py",
            "line": 96,
            "message": "Function 'run_realtime_pipeline' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\data_ingestion_system\\data_ingestion\\PreprocessorAgent.py",
        "lines": 94,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\ml\\data_ingestion_system\\data_ingestion\\VectorStoreAgent.py",
        "lines": 119,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\ml\\data_ingestion_system\\data_ingestion\\VectorStoreAgent.py",
            "line": 9,
            "message": "Class 'VectorStoreAgent' has 111 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\ml\\data_ingestion_system\\data_ingestion\\__init__.py",
        "lines": 18,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\infrastructure\\cloud\\__init__.py",
        "lines": 17,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tracing\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tracing\\agent_tracing.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tracing\\core.py",
        "lines": 127,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\tracing\\core.py",
            "line": 24,
            "message": "Class 'V3_004_DistributedTracingCore' has 104 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\tracing\\fsm_tracing.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tracing\\infrastructure_setup.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tracing\\jaeger_backend.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tracing\\messaging_observability.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tracing\\performance_monitoring.py",
        "lines": 46,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\validation\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\validation\\contract_system_validator.py",
        "lines": 116,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\validation\\contract_system_validator.py",
            "line": 15,
            "message": "Class 'ContractSystemValidator' has 102 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\validation\\documentation_validator.py",
        "lines": 40,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\validation\\enhanced_security_validator.py",
        "lines": 282,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\validation\\enhanced_security_validator.py",
            "line": 117,
            "message": "Line 117 has 122 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\validation\\enhanced_security_validator.py",
            "line": 207,
            "message": "Line 207 has 124 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\validation\\enhanced_security_validator.py",
            "line": 234,
            "message": "Line 234 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\validation\\enhanced_security_validator.py",
            "line": 32,
            "message": "Class 'EnhancedSecurityValidator' has 251 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\validation\\integration_validator.py",
        "lines": 42,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\validation\\integration_validator.py",
            "line": 41,
            "message": "Line 41 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\validation\\performance_validator.py",
        "lines": 54,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\validation\\performance_validator.py",
            "line": 45,
            "message": "Line 45 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\validation\\quality_gates_validator.py",
        "lines": 68,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\validation\\security_validator.py",
        "lines": 73,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\validation\\security_validator.py",
            "line": 40,
            "message": "Line 40 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\validation\\v3_directives_validator.py",
        "lines": 105,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\validation\\v3_directives_validator.py",
            "line": 49,
            "message": "Line 49 has 140 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\validation\\validation_framework_core.py",
        "lines": 115,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\validation\\validation_framework_core.py",
            "line": 55,
            "message": "Line 55 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\validation\\validation_utils.py",
        "lines": 54,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\discord\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\discord\\memory_aware_responses.py",
        "lines": 457,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 1,
            "message": "File has 457 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 302,
            "message": "Line 302 has 151 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 303,
            "message": "Line 303 has 140 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 304,
            "message": "Line 304 has 120 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 305,
            "message": "Line 305 has 126 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 306,
            "message": "Line 306 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 307,
            "message": "Line 307 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 308,
            "message": "Line 308 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 309,
            "message": "Line 309 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\discord\\memory_aware_responses.py",
            "line": 117,
            "message": "Class 'ResponseGenerator' has 204 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\discord\\template_messaging.py",
        "lines": 340,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\discord\\template_messaging.py",
            "line": 16,
            "message": "Class 'TemplateEngine' has 117 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\discord\\template_messaging.py",
            "line": 60,
            "message": "Function '_load_default_templates' has 59 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\discord\\enhanced_bot_engine.py",
        "lines": 376,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\discord\\enhanced_bot_engine.py",
            "line": 27,
            "message": "Class 'EnhancedDiscordBot' has 261 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\discord\\realtime_coordination_core.py",
        "lines": 200,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\discord\\realtime_coordination.py",
        "lines": 101,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\discord\\realtime_coordination_advanced.py",
        "lines": 204,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\discord\\memory_aware_responses_core.py",
        "lines": 0,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\team_beta\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\team_beta\\clone_automation.py",
        "lines": 342,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\team_beta\\clone_automation.py",
            "line": 43,
            "message": "Class 'CloneAutomation' has 254 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\clone_automation.py",
            "line": 137,
            "message": "Function 'clone_repository' has 58 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\consolidation_analyzer.py",
        "lines": 403,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\team_beta\\consolidation_analyzer.py",
            "line": 1,
            "message": "File has 403 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\team_beta\\consolidation_analyzer.py",
            "line": 395,
            "message": "Line 395 has 155 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\team_beta\\consolidation_analyzer.py",
            "line": 64,
            "message": "Class 'SystemConsolidationAnalyzer' has 310 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\consolidation_analyzer.py",
            "line": 136,
            "message": "Function 'analyze_duplications' has 61 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\consolidation_analyzer.py",
            "line": 229,
            "message": "Function 'create_consolidation_plan' has 88 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\repository_analyzer.py",
        "lines": 356,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\team_beta\\repository_analyzer.py",
            "line": 321,
            "message": "Line 321 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\team_beta\\repository_analyzer.py",
            "line": 64,
            "message": "Class 'RepositoryAnalyzer' has 266 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\repository_analyzer.py",
            "line": 79,
            "message": "Function '_initialize_target_repositories' has 64 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\repository_manager.py",
        "lines": 334,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\team_beta\\repository_manager.py",
            "line": 72,
            "message": "Class 'RepositoryManagerInterface' has 215 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\testing_integration.py",
        "lines": 369,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\team_beta\\testing_integration.py",
            "line": 355,
            "message": "Line 355 has 112 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\team_beta\\testing_integration.py",
            "line": 368,
            "message": "Line 368 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\team_beta\\testing_integration.py",
            "line": 61,
            "message": "Class 'TestingIntegrationCoordinator' has 266 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\testing_integration.py",
            "line": 82,
            "message": "Function '_initialize_integration_tasks' has 91 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\testing_integration.py",
            "line": 222,
            "message": "Function 'create_testing_integration_report' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\testing_validation.py",
        "lines": 45,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\team_beta\\vscode_customization.py",
        "lines": 339,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\team_beta\\vscode_customization.py",
            "line": 64,
            "message": "Class 'VSCodeCustomizationInterface' has 235 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\vscode_customization_core.py",
        "lines": 278,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\team_beta\\vscode_customization_core.py",
            "line": 64,
            "message": "Class 'VSCodeCustomizationCore' has 183 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\vscode_integration.py",
        "lines": 333,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\team_beta\\vscode_integration.py",
            "line": 62,
            "message": "Class 'VSCodeIntegrationInterface' has 247 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\vscode_integration.py",
            "line": 145,
            "message": "Function 'create_vscode_fork_workflow' has 67 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\vscode_integration.py",
            "line": 235,
            "message": "Function 'create_team_coordination_interface' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\vscode_quality_gates.py",
        "lines": 342,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\team_beta\\vscode_quality_gates.py",
            "line": 140,
            "message": "Line 140 has 128 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\team_beta\\vscode_quality_gates.py",
            "line": 146,
            "message": "Line 146 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\team_beta\\vscode_quality_gates.py",
            "line": 28,
            "message": "Class 'VSCodeQualityGates' has 284 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\vscode_quality_gates.py",
            "line": 48,
            "message": "Function 'check_file' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\testing_validation_modules\\test_execution.py",
        "lines": 15,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\team_beta\\testing_validation_modules\\__init__.py",
        "lines": 36,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\team_beta\\testing_validation_modules\\core_validation.py",
        "lines": 359,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\team_beta\\testing_validation_modules\\core_validation.py",
            "line": 26,
            "message": "Class 'TestingValidationSystem' has 307 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\testing_validation_modules\\core_validation.py",
            "line": 55,
            "message": "Function '_initialize_test_cases' has 124 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\team_beta\\testing_validation_modules\\core_validation.py",
            "line": 261,
            "message": "Function 'save_report' has 57 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\testing_validation_modules\\models.py",
        "lines": 93,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\team_beta\\testing_validation_modules\\test_execution_core.py",
        "lines": 397,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\team_beta\\testing_validation_modules\\test_execution_core.py",
            "line": 241,
            "message": "Line 241 has 130 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\team_beta\\testing_validation_modules\\test_execution_core.py",
            "line": 17,
            "message": "Class 'TestExecutor' has 381 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\testing_validation_modules\\test_execution_platform.py",
        "lines": 192,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\team_beta\\testing_validation_modules\\test_execution_platform.py",
            "line": 55,
            "message": "Line 55 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\team_beta\\testing_validation_modules\\test_execution_platform.py",
            "line": 15,
            "message": "Class 'PlatformTestExecutor' has 178 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\team_beta\\testing_validation_modules\\test_execution_validation.py",
        "lines": 239,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\team_beta\\testing_validation_modules\\test_execution_validation.py",
            "line": 16,
            "message": "Class 'TestValidator' has 224 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
        "lines": 270,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
            "line": 30,
            "message": "Class 'ComprehensiveIntegrationAssessmentV2' has 241 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\integration_assessment_engine.py",
        "lines": 308,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\integration_assessment_engine.py",
            "line": 6,
            "message": "Line 6 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\integration\\integration_assessment_engine.py",
            "line": 30,
            "message": "Class 'IntegrationAssessmentEngine' has 279 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\integration_models.py",
        "lines": 259,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\integration\\comprehensive_integration_assessment_core.py",
        "lines": 144,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_core.py",
            "line": 104,
            "message": "Line 104 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_core.py",
            "line": 128,
            "message": "Line 128 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_core.py",
            "line": 132,
            "message": "Line 132 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\integration\\comprehensive_integration_assessment_utils.py",
        "lines": 226,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_utils.py",
            "line": 76,
            "message": "Line 76 has 114 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_utils.py",
            "line": 83,
            "message": "Line 83 has 115 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_utils.py",
            "line": 118,
            "message": "Line 118 has 102 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\integration\\comprehensive_integration_assessment_main.py",
        "lines": 260,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_main.py",
            "line": 193,
            "message": "Line 193 has 117 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_main.py",
            "line": 194,
            "message": "Line 194 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\integration\\comprehensive_integration_assessment_main.py",
            "line": 206,
            "message": "Line 206 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\integration\\comprehensive_integration_assessment_main.py",
            "line": 28,
            "message": "Class 'ComprehensiveIntegrationAssessment' has 170 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\comprehensive_integration_assessment.py",
        "lines": 51,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\integration\\qa_coordination\\__init__.py",
        "lines": 63,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\integration\\qa_coordination\\core_coordination.py",
        "lines": 307,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\integration\\qa_coordination\\core_coordination.py",
            "line": 25,
            "message": "Class 'Agent6Agent8EnhancedQACoordination' has 268 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\integration\\qa_coordination\\core_coordination.py",
            "line": 132,
            "message": "Function '_initialize_qa_enhancements' has 61 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\qa_coordination\\models.py",
        "lines": 101,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\integration\\qa_coordination\\performance_validation.py",
        "lines": 394,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\integration\\qa_coordination\\performance_validation.py",
            "line": 14,
            "message": "Class 'PerformanceValidationEnhancement' has 341 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\qa_coordination\\validation_protocols.py",
        "lines": 288,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\qa_coordination\\validation_protocols.py",
            "line": 6,
            "message": "Line 6 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\integration\\qa_coordination\\validation_protocols.py",
            "line": 13,
            "message": "Class 'AdvancedValidationProtocols' has 247 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\integration\\qa_coordination\\validation_protocols.py",
            "line": 67,
            "message": "Function 'run_v2_compliance_validation' has 70 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
        "lines": 219,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
            "line": 13,
            "message": "Class 'VectorDatabaseQAIntegration' has 185 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\qa_coordination\\testing_framework_integration.py",
        "lines": 314,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\qa_coordination\\testing_framework_integration.py",
            "line": 117,
            "message": "Line 117 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\integration\\qa_coordination\\testing_framework_integration.py",
            "line": 16,
            "message": "Class 'TestingFrameworkIntegration' has 259 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\integration\\qa_coordination\\testing_framework_integration.py",
            "line": 207,
            "message": "Function 'run_pytest_suite' has 54 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\agent7_interface_testing\\__init__.py",
        "lines": 38,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\integration\\agent7_interface_testing\\functionality_tests.py",
        "lines": 326,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\agent7_interface_testing\\functionality_tests.py",
            "line": 306,
            "message": "Line 306 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\integration\\agent7_interface_testing\\functionality_tests.py",
            "line": 16,
            "message": "Class 'Agent7FunctionalityTests' has 311 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\integration\\agent7_interface_testing\\functionality_tests.py",
            "line": 272,
            "message": "Function 'run_all_functionality_tests' has 55 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\agent7_interface_testing\\integration_tests.py",
        "lines": 290,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\agent7_interface_testing\\integration_tests.py",
            "line": 270,
            "message": "Line 270 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\integration\\agent7_interface_testing\\integration_tests.py",
            "line": 18,
            "message": "Class 'Agent7IntegrationTests' has 273 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\integration\\agent7_interface_testing\\integration_tests.py",
            "line": 235,
            "message": "Function 'run_all_integration_tests' has 56 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\integration\\agent7_interface_testing\\models.py",
        "lines": 96,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\integration\\agent7_interface_testing\\core_testing.py",
        "lines": 280,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\integration\\agent7_interface_testing\\core_testing.py",
            "line": 270,
            "message": "Line 270 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\integration\\agent7_interface_testing\\core_testing.py",
            "line": 19,
            "message": "Class 'Agent7InterfaceTestingValidation' has 231 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\integration\\agent7_interface_testing\\core_testing.py",
            "line": 80,
            "message": "Function '_analyze_interface' has 65 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\integration\\agent7_interface_testing\\core_testing.py",
            "line": 146,
            "message": "Function '_generate_validation_report' has 70 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\cloud_infrastructure_data.py",
        "lines": 163,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\v3\\cloud_infrastructure_data.py",
            "line": 53,
            "message": "Line 53 has 118 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\v3\\cloud_infrastructure_data.py",
            "line": 23,
            "message": "Class 'CloudInfrastructureData' has 141 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\cloud_infrastructure_data.py",
            "line": 30,
            "message": "Function 'create_rds_config' has 70 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\cloud_infrastructure_data.py",
            "line": 101,
            "message": "Function 'create_redis_config' has 63 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\cloud_infrastructure_models.py",
        "lines": 61,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\cloud_infrastructure_networking.py",
        "lines": 186,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\cloud_infrastructure_networking.py",
            "line": 23,
            "message": "Class 'CloudInfrastructureNetworking' has 164 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\cloud_infrastructure_networking.py",
            "line": 30,
            "message": "Function 'create_vpc_config' has 96 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\cloud_infrastructure_networking.py",
            "line": 127,
            "message": "Function 'create_eks_config' has 60 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\cloud_infrastructure_security.py",
        "lines": 203,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\cloud_infrastructure_security.py",
            "line": 23,
            "message": "Class 'CloudInfrastructureSecurity' has 181 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\cloud_infrastructure_security.py",
            "line": 30,
            "message": "Function 'create_security_config' has 174 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\ml_pipeline_core.py",
        "lines": 171,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\ml_pipeline_core.py",
            "line": 24,
            "message": "Class 'MLPipelineCore' has 148 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\ml_pipeline_operations.py",
        "lines": 176,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\ml_pipeline_operations.py",
            "line": 22,
            "message": "Class 'MLPipelineOperations' has 155 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\tracing_infrastructure.py",
        "lines": 149,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\tracing_infrastructure.py",
            "line": 24,
            "message": "Class 'TracingInfrastructure' has 126 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\tracing_observability.py",
        "lines": 198,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\tracing_observability.py",
            "line": 22,
            "message": "Class 'TracingObservability' has 177 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\v3_009_command_understanding.py",
        "lines": 427,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\v3\\v3_009_command_understanding.py",
            "line": 1,
            "message": "File has 427 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_009_command_understanding.py",
            "line": 61,
            "message": "Class 'CommandParser' has 182 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\v3_009_intent_recognition.py",
        "lines": 431,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 1,
            "message": "File has 431 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 61,
            "message": "Line 61 has 111 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 78,
            "message": "Line 78 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 83,
            "message": "Line 83 has 108 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 88,
            "message": "Line 88 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 95,
            "message": "Line 95 has 113 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 96,
            "message": "Line 96 has 107 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 100,
            "message": "Line 100 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 101,
            "message": "Line 101 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 107,
            "message": "Line 107 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 117,
            "message": "Line 117 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 122,
            "message": "Line 122 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 123,
            "message": "Line 123 has 104 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 146,
            "message": "Line 146 has 106 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 156,
            "message": "Line 156 has 109 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 157,
            "message": "Line 157 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 47,
            "message": "Class 'IntentClassifier' has 284 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\v3_009_intent_recognition.py",
            "line": 56,
            "message": "Function '_initialize_intent_patterns' has 106 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\v3_009_nlp_pipeline.py",
        "lines": 407,
        "violations": [
          {
            "type": "file_loc",
            "file": "src\\v3\\v3_009_nlp_pipeline.py",
            "line": 1,
            "message": "File has 407 lines, exceeds 400 limit",
            "severity": "error"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_nlp_pipeline.py",
            "line": 117,
            "message": "Line 117 has 110 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\v3\\v3_009_nlp_pipeline.py",
            "line": 129,
            "message": "Line 129 has 103 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_009_nlp_pipeline.py",
            "line": 57,
            "message": "Class 'NLPPipeline' has 203 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\v3_011_api_gateway_advanced.py",
        "lines": 300,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\v3_011_api_gateway_core.py",
        "lines": 310,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_011_api_gateway_core.py",
            "line": 135,
            "message": "Class 'APIGateway' has 129 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\v3_011_api_gateway_core.py",
            "line": 164,
            "message": "Function 'handle_request' has 51 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\v3_012_mobile_app_framework.py",
        "lines": 70,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\v3_012_ui_components.py",
        "lines": 307,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\v3\\v3_012_ui_components.py",
            "line": 290,
            "message": "Line 290 has 121 characters, exceeds 100 limit",
            "severity": "warning"
          }
        ],
        "status": "warning"
      },
      {
        "file": "src\\v3\\v3_012_ui_screens.py",
        "lines": 302,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_012_ui_screens.py",
            "line": 42,
            "message": "Class 'ScreenFactory' has 101 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\web_dashboard_api.py",
        "lines": 233,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\web_dashboard_api.py",
            "line": 22,
            "message": "Class 'WebDashboardAPI' has 212 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\web_dashboard_api.py",
            "line": 181,
            "message": "Function 'create_websocket_integration' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\web_dashboard_components.py",
        "lines": 291,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\web_dashboard_components.py",
            "line": 23,
            "message": "Class 'WebDashboardComponents' has 269 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\web_dashboard_components.py",
            "line": 113,
            "message": "Function 'create_system_health_component' has 61 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\web_dashboard_components.py",
            "line": 219,
            "message": "Function 'create_configuration_component' has 73 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\web_dashboard_models.py",
        "lines": 51,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\v3_009_response_generation_core.py",
        "lines": 177,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\v3_009_response_generation.py",
        "lines": 37,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\v3_009_response_generation_main.py",
        "lines": 237,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_009_response_generation_main.py",
            "line": 27,
            "message": "Class 'AdvancedResponseGenerator' has 145 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\v3_009_response_generation_utils.py",
        "lines": 229,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
        "lines": 163,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
            "line": 52,
            "message": "Class 'MobileAppFrameworkCore' has 112 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
        "lines": 195,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
        "lines": 271,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
            "line": 17,
            "message": "Class 'ComponentTemplateManager' has 255 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
            "line": 23,
            "message": "Function '_initialize_component_templates' has 114 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
            "line": 208,
            "message": "Function '_generate_storage_methods' has 64 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\aletheia\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\aletheia\\aletheia_prompt_manager.py",
        "lines": 155,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\aletheia\\aletheia_prompt_manager.py",
            "line": 153,
            "message": "Line 153 has 101 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "class_loc",
            "file": "src\\aletheia\\aletheia_prompt_manager.py",
            "line": 38,
            "message": "Class 'AletheiaPromptManager' has 112 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\memory\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\memory\\persistent_memory.py",
        "lines": 202,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\memory\\persistent_memory.py",
            "line": 41,
            "message": "Class 'PersistentMemory' has 155 lines, exceeds 100 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\tools\\__init__.py",
        "lines": 1,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tools\\swarm_workflow_orchestrator_core.py",
        "lines": 230,
        "violations": [
          {
            "type": "class_loc",
            "file": "src\\tools\\swarm_workflow_orchestrator_core.py",
            "line": 18,
            "message": "Class 'SwarmWorkflowOrchestratorCore' has 213 lines, exceeds 100 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\tools\\swarm_workflow_orchestrator_core.py",
            "line": 126,
            "message": "Function '_execute_task' has 53 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      },
      {
        "file": "src\\tools\\swarm_workflow_orchestrator_utils.py",
        "lines": 95,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tools\\swarm_workflow_orchestrator.py",
        "lines": 40,
        "violations": [],
        "status": "ok"
      },
      {
        "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
        "lines": 264,
        "violations": [
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 69,
            "message": "Line 69 has 229 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 76,
            "message": "Line 76 has 186 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 110,
            "message": "Line 110 has 186 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 117,
            "message": "Line 117 has 161 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 158,
            "message": "Line 158 has 167 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 165,
            "message": "Line 165 has 143 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 172,
            "message": "Line 172 has 134 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "line_length",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 244,
            "message": "Line 244 has 105 characters, exceeds 100 limit",
            "severity": "warning"
          },
          {
            "type": "function_loc",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 59,
            "message": "Function 'create_v2_trading_robot_workflow' has 125 lines, exceeds 50 limit",
            "severity": "error"
          },
          {
            "type": "function_loc",
            "file": "src\\tools\\swarm_workflow_orchestrator_main.py",
            "line": 186,
            "message": "Function 'main' has 75 lines, exceeds 50 limit",
            "severity": "error"
          }
        ],
        "status": "error"
      }
    ],
    "summary": {
      "total_files": 884,
      "total_violations": 1295,
      "error_files": 461,
      "warning_files": 42,
      "ok_files": 381,
      "compliance_rate": 43.09954751131222,
      "violation_rate": 1.4649321266968325
    }
  }
}