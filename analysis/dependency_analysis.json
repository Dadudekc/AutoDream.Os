{
  "imports_by_module": {},
  "most_imported_modules": {},
  "circular_dependencies": [],
  "external_dependencies": [],
  "internal_dependencies": {
    "archive\\captain_handbooks_consolidated\\archive\\consolidated_files\\emergency_intervention\\unified_emergency\\orchestrators\\emergency_orchestrator": {
      "file_path": "archive\\captain_handbooks_consolidated\\archive\\consolidated_files\\emergency_intervention\\unified_emergency\\orchestrators\\emergency_orchestrator.py",
      "functions": [
        "__init__",
        "_register_default_protocols",
        "detect_emergency",
        "analyze_emergency",
        "execute_intervention",
        "handle_emergency",
        "register_intervention_handler",
        "get_emergency_status",
        "get_active_emergencies",
        "get_emergency_history",
        "get_system_metrics",
        "get_protocol_summary",
        "get_system_health",
        "create_custom_protocol",
        "get_orchestrator_status",
        "shutdown"
      ],
      "classes": {
        "EmergencyInterventionOrchestrator": {
          "methods": [
            "__init__",
            "_register_default_protocols",
            "detect_emergency",
            "analyze_emergency",
            "execute_intervention",
            "handle_emergency",
            "register_intervention_handler",
            "get_emergency_status",
            "get_active_emergencies",
            "get_emergency_history",
            "get_system_metrics",
            "get_protocol_summary",
            "get_system_health",
            "create_custom_protocol",
            "get_orchestrator_status",
            "shutdown"
          ],
          "docstring": "Main orchestrator for emergency intervention operations.\n\nCoordinates emergency detection, analysis, intervention, and logging across all\nemergency components.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\models": {
      "file_path": "src\\services\\messaging\\models.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\providers\\fallback_provider\\__init__": {
      "file_path": "src\\services\\messaging\\providers\\fallback_provider\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\broadcast_service\\__init__": {
      "file_path": "src\\services\\messaging\\broadcast_service\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\cli\\perf_cli\\__init__": {
      "file_path": "src\\services\\messaging\\cli\\perf_cli\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\agent_management\\consolidated_service": {
      "file_path": "src\\services\\agent_management\\consolidated_service.py",
      "functions": [
        "__init__",
        "_load_assignments",
        "_create_vector_integration",
        "_save_assignments",
        "get_agent_principle",
        "assign_principle",
        "get_all_assignments",
        "get_agents_by_principle",
        "get_agent_status",
        "get_integration_stats",
        "_get_recent_work_count",
        "_get_pending_tasks_count",
        "_get_last_activity",
        "_get_total_documents",
        "_get_agent_documents",
        "index_agent_work",
        "search_agent_work",
        "get_agent_context",
        "get_agent_config",
        "reload_config",
        "get_comprehensive_agent_report"
      ],
      "classes": {
        "ArchitecturalPrinciple": {
          "methods": [],
          "docstring": "Temporary architectural principle model.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "ConsolidatedAgentManagementService": {
          "methods": [
            "__init__",
            "_load_assignments",
            "_create_vector_integration",
            "_save_assignments",
            "get_agent_principle",
            "assign_principle",
            "get_all_assignments",
            "get_agents_by_principle",
            "get_agent_status",
            "get_integration_stats",
            "_get_recent_work_count",
            "_get_pending_tasks_count",
            "_get_last_activity",
            "_get_total_documents",
            "_get_agent_documents",
            "index_agent_work",
            "search_agent_work",
            "get_agent_context",
            "get_agent_config",
            "reload_config",
            "get_comprehensive_agent_report"
          ],
          "docstring": "Unified agent management service combining assignment, status, and vector integration.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\discord_commander\\webhook\\__init__": {
      "file_path": "src\\discord_commander\\webhook\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\discord_commander\\messaging_gateway\\__init__": {
      "file_path": "src\\discord_commander\\messaging_gateway\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\discord_commander\\communication_engine\\__init__": {
      "file_path": "src\\discord_commander\\communication_engine\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\onboarding\\onboarding_bridge\\__init__": {
      "file_path": "src\\onboarding\\onboarding_bridge\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\onboarding\\__init__": {
      "file_path": "src\\onboarding\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "tools\\captain_snapshot": {
      "file_path": "tools\\captain_snapshot.py",
      "functions": [
        "load_agents_index",
        "calculate_staleness",
        "calculate_staleness_fixed",
        "get_status_priority",
        "format_agent_row",
        "main"
      ],
      "classes": {},
      "estimated_dependencies": []
    }
  }
}