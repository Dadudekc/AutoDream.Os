name: Test & Coverage Gate
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for coverage diff

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-cov coverage diff-cover

      - name: Run tests with coverage
        run: |
          coverage run -m pytest -q --tb=short

      - name: Generate coverage reports
        run: |
          coverage xml -o coverage.xml
          coverage html -d .coverage_html

      - name: Check changed file coverage
        run: |
          python tools/coverage/changed_file_report.py --base origin/main --min 95 --strict

      - name: Check global coverage threshold
        run: |
          coverage report --fail-under=85

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            coverage.xml
            .coverage_html/

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            
            try {
              // Get coverage summary
              const coverageOutput = execSync('coverage report --show-missing', { encoding: 'utf8' });
              const lines = coverageOutput.split('\n');
              const totalLine = lines.find(line => line.includes('TOTAL'));
              
              if (totalLine) {
                const match = totalLine.match(/(\d+)%\s*$/);
                const coverage = match ? match[1] : 'unknown';
                
                const comment = `## ðŸ“Š Coverage Report
                
                **Global Coverage:** ${coverage}%
                
                <details>
                <summary>Full Coverage Report</summary>
                
                \`\`\`
                ${coverageOutput}
                \`\`\`
                
                </details>
                
                Coverage reports available in [artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Could not generate coverage comment:', error.message);
            }



