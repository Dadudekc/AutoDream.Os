{
  "imports_by_module": {},
  "most_imported_modules": {},
  "circular_dependencies": [],
  "external_dependencies": [],
  "internal_dependencies": {
    "archive\\captain_handbooks_consolidated\\archive\\consolidated_files\\emergency_intervention\\unified_emergency\\orchestrators\\emergency_orchestrator": {
      "file_path": "archive\\captain_handbooks_consolidated\\archive\\consolidated_files\\emergency_intervention\\unified_emergency\\orchestrators\\emergency_orchestrator.py",
      "functions": [
        "__init__",
        "_register_default_protocols",
        "detect_emergency",
        "analyze_emergency",
        "execute_intervention",
        "handle_emergency",
        "register_intervention_handler",
        "get_emergency_status",
        "get_active_emergencies",
        "get_emergency_history",
        "get_system_metrics",
        "get_protocol_summary",
        "get_system_health",
        "create_custom_protocol",
        "get_orchestrator_status",
        "shutdown"
      ],
      "classes": {
        "EmergencyInterventionOrchestrator": {
          "methods": [
            "__init__",
            "_register_default_protocols",
            "detect_emergency",
            "analyze_emergency",
            "execute_intervention",
            "handle_emergency",
            "register_intervention_handler",
            "get_emergency_status",
            "get_active_emergencies",
            "get_emergency_history",
            "get_system_metrics",
            "get_protocol_summary",
            "get_system_health",
            "create_custom_protocol",
            "get_orchestrator_status",
            "shutdown"
          ],
          "docstring": "Main orchestrator for emergency intervention operations.\n\nCoordinates emergency detection, analysis, intervention, and logging across all\nemergency components.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\services\\handlers_orchestrator": {
      "file_path": "src\\services\\handlers_orchestrator.py",
      "functions": [
        "create_unified_handlers_orchestrator",
        "__init__",
        "_initialize_handlers",
        "process_request",
        "submit_request",
        "get_request_status",
        "_handle_role_command",
        "_handle_coordinator_command",
        "_handle_specialist_command",
        "_handle_analyst_command",
        "_handle_overnight",
        "schedule_overnight_task",
        "process_overnight_batch",
        "perform_overnight_maintenance",
        "_handle_agent_assignment",
        "assign_task_to_agent",
        "_handle_agent_status",
        "get_agent_status",
        "update_agent_status",
        "check_agent_health",
        "create_task",
        "update_task",
        "complete_task",
        "get_system_status",
        "coordinate_agents",
        "assign_tasks",
        "analyze_domain",
        "provide_expertise",
        "generate_report",
        "analyze_data",
        "_log_request",
        "get_status"
      ],
      "classes": {
        "HandlerType": {
          "methods": [],
          "docstring": null,
          "base_classes": [
            "Enum"
          ],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "HandlerPriority": {
          "methods": [],
          "docstring": null,
          "base_classes": [
            "Enum"
          ],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "HandlerStatus": {
          "methods": [],
          "docstring": null,
          "base_classes": [
            "Enum"
          ],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "HandlerRequest": {
          "methods": [],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "UnifiedHandlersOrchestrator": {
          "methods": [
            "__init__",
            "_initialize_handlers",
            "process_request",
            "submit_request",
            "get_request_status",
            "_handle_role_command",
            "_handle_coordinator_command",
            "_handle_specialist_command",
            "_handle_analyst_command",
            "_handle_overnight",
            "schedule_overnight_task",
            "process_overnight_batch",
            "perform_overnight_maintenance",
            "_handle_agent_assignment",
            "assign_task_to_agent",
            "_handle_agent_status",
            "get_agent_status",
            "update_agent_status",
            "check_agent_health",
            "create_task",
            "update_task",
            "complete_task",
            "get_system_status",
            "coordinate_agents",
            "assign_tasks",
            "analyze_domain",
            "provide_expertise",
            "generate_report",
            "analyze_data",
            "_log_request",
            "get_status"
          ],
          "docstring": null,
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\services\\unified_vector_service": {
      "file_path": "src\\services\\unified_vector_service.py",
      "functions": [
        "__post_init__",
        "store_document",
        "search_documents",
        "get_document",
        "delete_document",
        "get_stats",
        "__init__",
        "generate_embedding",
        "_generate_sentence_transformer_embedding",
        "_generate_openai_embedding",
        "_generate_simple_embedding",
        "__init__",
        "store_document",
        "search_documents",
        "get_document",
        "delete_document",
        "get_stats",
        "_calculate_similarity",
        "__init__",
        "store_message",
        "search_messages",
        "get_service_statistics"
      ],
      "classes": {
        "EmbeddingModel": {
          "methods": [],
          "docstring": null,
          "base_classes": [
            "Enum"
          ],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "DocumentType": {
          "methods": [],
          "docstring": null,
          "base_classes": [
            "Enum"
          ],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "VectorDocument": {
          "methods": [
            "__post_init__"
          ],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "SearchQuery": {
          "methods": [],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "SearchResult": {
          "methods": [],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "VectorDatabaseStats": {
          "methods": [],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "VectorRepository": {
          "methods": [
            "store_document",
            "search_documents",
            "get_document",
            "delete_document",
            "get_stats"
          ],
          "docstring": null,
          "base_classes": [
            "ABC"
          ],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "EmbeddingService": {
          "methods": [
            "__init__",
            "generate_embedding",
            "_generate_sentence_transformer_embedding",
            "_generate_openai_embedding",
            "_generate_simple_embedding"
          ],
          "docstring": null,
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "InMemoryVectorRepository": {
          "methods": [
            "__init__",
            "store_document",
            "search_documents",
            "get_document",
            "delete_document",
            "get_stats",
            "_calculate_similarity"
          ],
          "docstring": "In-memory vector repository implementation.",
          "base_classes": [
            "VectorRepository"
          ],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "UnifiedVectorService": {
          "methods": [
            "__init__",
            "store_message",
            "search_messages",
            "get_service_statistics"
          ],
          "docstring": "Unified vector service using Repository pattern.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\services\\consolidated_messaging_service": {
      "file_path": "src\\services\\consolidated_messaging_service.py",
      "functions": [
        "build_parser",
        "main",
        "__init__",
        "_validate_coordinates_for_delivery",
        "_validate_all_agents_for_delivery",
        "send_message",
        "broadcast",
        "_paste_to_coords"
      ],
      "classes": {
        "ConsolidatedMessagingService": {
          "methods": [
            "__init__",
            "_validate_coordinates_for_delivery",
            "_validate_all_agents_for_delivery",
            "send_message",
            "broadcast",
            "_paste_to_coords"
          ],
          "docstring": "MAIN messaging service with pre-delivery coordinate validation & routing safeguards.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\cli\\messaging_cli_clean": {
      "file_path": "src\\services\\messaging\\cli\\messaging_cli_clean.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\broadcast_service\\__init__": {
      "file_path": "src\\services\\messaging\\broadcast_service\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\providers\\fallback_provider\\__init__": {
      "file_path": "src\\services\\messaging\\providers\\fallback_provider\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\messaging\\history_service\\__init__": {
      "file_path": "src\\services\\messaging\\history_service\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\services\\agent_management\\consolidated_service": {
      "file_path": "src\\services\\agent_management\\consolidated_service.py",
      "functions": [
        "__init__",
        "_load_assignments",
        "_create_vector_integration",
        "_save_assignments",
        "get_agent_principle",
        "assign_principle",
        "get_all_assignments",
        "get_agents_by_principle",
        "get_agent_status",
        "get_integration_stats",
        "_get_recent_work_count",
        "_get_pending_tasks_count",
        "_get_last_activity",
        "_get_total_documents",
        "_get_agent_documents",
        "index_agent_work",
        "search_agent_work",
        "get_agent_context",
        "get_agent_config",
        "reload_config",
        "get_comprehensive_agent_report"
      ],
      "classes": {
        "ArchitecturalPrinciple": {
          "methods": [],
          "docstring": "Temporary architectural principle model.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        },
        "ConsolidatedAgentManagementService": {
          "methods": [
            "__init__",
            "_load_assignments",
            "_create_vector_integration",
            "_save_assignments",
            "get_agent_principle",
            "assign_principle",
            "get_all_assignments",
            "get_agents_by_principle",
            "get_agent_status",
            "get_integration_stats",
            "_get_recent_work_count",
            "_get_pending_tasks_count",
            "_get_last_activity",
            "_get_total_documents",
            "_get_agent_documents",
            "index_agent_work",
            "search_agent_work",
            "get_agent_context",
            "get_agent_config",
            "reload_config",
            "get_comprehensive_agent_report"
          ],
          "docstring": "Unified agent management service combining assignment, status, and vector integration.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\core\\coordinate_loader_new": {
      "file_path": "src\\core\\coordinate_loader_new.py",
      "functions": [
        "load_coordinates_from_json",
        "get_agent_coordinates",
        "get_coordinate_loader",
        "tuple",
        "is_all_ok",
        "to_lines",
        "__init__",
        "load",
        "get_agent_ids",
        "get_coords",
        "validate_agent",
        "validate_all",
        "get_chat_coordinates",
        "get_all_agents",
        "is_agent_active",
        "get_valid_agents",
        "get_validation_report"
      ],
      "classes": {
        "AgentCoords": {
          "methods": [
            "tuple"
          ],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "ValidationIssue": {
          "methods": [],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "ValidationReport": {
          "methods": [
            "is_all_ok",
            "to_lines"
          ],
          "docstring": null,
          "base_classes": [],
          "maturity": "Prototype",
          "agent_type": "Utility"
        },
        "CoordinateLoader": {
          "methods": [
            "__init__",
            "load",
            "get_agent_ids",
            "get_coords",
            "validate_agent",
            "validate_all",
            "get_chat_coordinates",
            "get_all_agents",
            "is_agent_active",
            "get_valid_agents",
            "get_validation_report"
          ],
          "docstring": "Loads and validates agent coordinates from a JSON SSOT.\n\nExpected JSON shape (excerpt):\n{\n  \"agents\": {\n    \"Agent-1\": {\"chat_input_coordinates\": [-1269, 481], \"active\": true, ...},\n    \"Agent-2\": {\"chat_input_coordinates\": [-308, 480], \"active\": true, ...}\n  }\n}",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\core\\coordinate_loader_backup": {
      "file_path": "src\\core\\coordinate_loader_backup.py",
      "functions": [
        "load_coordinates_from_json",
        "get_agent_coordinates",
        "get_coordinate_loader",
        "__init__",
        "validate_coordinates",
        "get_chat_coordinates",
        "get_all_coordinates",
        "get_all_agents",
        "get_valid_agents",
        "is_agent_active",
        "get_validation_report"
      ],
      "classes": {
        "CoordinateLoader": {
          "methods": [
            "__init__",
            "validate_coordinates",
            "get_chat_coordinates",
            "get_all_coordinates",
            "get_all_agents",
            "get_valid_agents",
            "is_agent_active",
            "get_validation_report"
          ],
          "docstring": "Coordinate loader class with validation and routing safeguards.",
          "base_classes": [],
          "maturity": "Core Asset",
          "agent_type": "Utility"
        }
      },
      "estimated_dependencies": []
    },
    "src\\discord_commander\\communication_engine\\__init__": {
      "file_path": "src\\discord_commander\\communication_engine\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\discord_commander\\messaging_gateway\\__init__": {
      "file_path": "src\\discord_commander\\messaging_gateway\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\discord_commander\\webhook\\__init__": {
      "file_path": "src\\discord_commander\\webhook\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\onboarding\\onboarding_bridge\\__init__": {
      "file_path": "src\\onboarding\\onboarding_bridge\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    },
    "src\\onboarding\\__init__": {
      "file_path": "src\\onboarding\\__init__.py",
      "functions": [],
      "classes": {},
      "estimated_dependencies": []
    }
  }
}