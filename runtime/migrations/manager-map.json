{
  "from src.core.utility_system.managers.file_manager import FileManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as FileManager",
  "from src.core.agent_context_manager import AgentContextManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as AgentContextManager",
  "from src.core.config_core import ConfigurationManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as ConfigurationManager",
  "from src.discord_commander.configuration_manager import DiscordConfigurationManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as DiscordConfigurationManager",
  "from src.core.integration_coordinators.unified_integration.coordinators.config_manager import ConfigManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as ConfigManager",
  "from src.core.ssot.unified_ssot.execution.execution_manager import ExecutionManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as ExecutionManager",
  "from src.core.integration_coordinators.unified_integration.coordinators.task_manager import TaskManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as TaskManager",
  "from src.core.emergency_intervention.unified_emergency.engines.protocol_manager import ProtocolManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as ProtocolManager",
  "from src.core.performance.unified_dashboard.widget_manager import WidgetManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as WidgetManager",
  "from src.core.performance.unified_dashboard.metric_manager import MetricManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as MetricManager",
  "from src.core.integration_coordinators.unified_integration.monitors.alert_manager import AlertManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as AlertManager",
  "from src.gaming.gaming_alert_manager import GamingAlertManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as GamingAlertManager",
  "from src.services.architectural_onboarding import ArchitecturalOnboardingManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as ArchitecturalOnboardingManager",
  "from src.core.error_handling.error_recovery import ErrorRecoveryManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as ErrorRecoveryManager",
  "from src.core.dry_eliminator.orchestrators.results_manager import ResultsManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as ResultsManager",
  "from src.core.file_locking.file_locking_manager import FileLockManager": "from src.core.managers.adapters.legacy_manager_adapter import create_legacy_manager_adapter as FileLockManager",
  "class FileManager(": "class FileManager(LegacyManagerAdapter):",
  "class AgentContextManager(": "class AgentContextManager(LegacyManagerAdapter):",
  "class ConfigurationManager(": "class ConfigurationManager(LegacyManagerAdapter):",
  "class DiscordConfigurationManager(": "class DiscordConfigurationManager(LegacyManagerAdapter):",
  "class ConfigManager(": "class ConfigManager(LegacyManagerAdapter):",
  "class ExecutionManager(": "class ExecutionManager(LegacyManagerAdapter):",
  "class TaskManager(": "class TaskManager(LegacyManagerAdapter):",
  "class ProtocolManager(": "class ProtocolManager(LegacyManagerAdapter):",
  "class WidgetManager(": "class WidgetManager(LegacyManagerAdapter):",
  "class MetricManager(": "class MetricManager(LegacyManagerAdapter):",
  "class AlertManager(": "class AlertManager(LegacyManagerAdapter):",
  "class GamingAlertManager(": "class GamingAlertManager(LegacyManagerAdapter):",
  "class ArchitecturalOnboardingManager(": "class ArchitecturalOnboardingManager(LegacyManagerAdapter):",
  "class ErrorRecoveryManager(": "class ErrorRecoveryManager(LegacyManagerAdapter):",
  "class ResultsManager(": "class ResultsManager(LegacyManagerAdapter):",
  "class FileLockManager(": "class FileLockManager(LegacyManagerAdapter):"
}
