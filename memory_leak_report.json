{
  "timestamp": "D:\\Agent_Cellphone_V2_Repository",
  "project_root": ".",
  "summary": {
    "total_files_analyzed": 890,
    "files_with_issues": 676,
    "total_issues": 3751,
    "issues_by_severity": {
      "HIGH": 77,
      "MEDIUM": 2891,
      "LOW": 783
    },
    "issues_by_type": {
      "global_variables": 704,
      "event_handlers": 2701,
      "circular_references": 188,
      "large_data_structures": 79,
      "threading_thread": 21,
      "resource_creation": 22,
      "sqlite_without_close": 32,
      "deque_without_limit": 2,
      "file_without_context": 2
    },
    "top_files_with_issues": [
      {
        "file": "src\\monitoring\\performance_monitor.py",
        "issue_count": 40
      },
      {
        "file": "src\\discord\\memory_aware_responses.py",
        "issue_count": 39
      },
      {
        "file": "analytics\\predictive_core.py",
        "issue_count": 31
      },
      {
        "file": "static_documentation_deleter_core.py",
        "issue_count": 26
      },
      {
        "file": "src\\integration\\integration_assessment_engine.py",
        "issue_count": 26
      },
      {
        "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
        "issue_count": 25
      },
      {
        "file": "src\\services\\thea\\thea_conversation_manager.py",
        "issue_count": 23
      },
      {
        "file": "src\\core\\database\\monitoring\\health_checker.py",
        "issue_count": 22
      },
      {
        "file": "src\\services\\github_protocol_service.py",
        "issue_count": 22
      },
      {
        "file": "src\\services\\multichat_session_persistence.py",
        "issue_count": 22
      }
    ],
    "recommendations": [
      "üö® URGENT: 77 HIGH severity issues require immediate attention",
      "‚ö†Ô∏è WARNING: 2891 MEDIUM severity issues should be addressed",
      "üßµ Thread Management: 21 threading issues detected - ensure proper cleanup",
      "üóÑÔ∏è Database: 32 SQLite connection issues - use context managers",
      "üìÅ File Handling: 2 file handling issues - use context managers"
    ]
  },
  "detailed_issues": [
    {
      "file": "discord_commander.py",
      "line": 70,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = DiscordCommanderConfig(self.logger)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander.py",
      "line": 95,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.bot = self.core.create_discord_bot()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "add_sample_devlogs.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"\"\"# Devlog Entry",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "check_agent5_inbox.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "check_v2_compliance.py",
      "line": 18,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = checker.check_v2_compliance()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "query_all_devlogs.py",
      "line": 20,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(\"http://localhost:8002/api/devlogs\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "query_all_devlogs.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(\"http://localhost:8002/api/devlogs/export/json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "query_all_devlogs.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "analytics_response = requests.get(\"http://localhost:8002/api/devlogs/analytics\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "demo_captain_knowledge_queries.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "demonstrate_database_queries.py",
      "line": 18,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "demonstrator = DatabaseQueryDemonstrator()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "demo_current_mission_status.py",
      "line": 18,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "demonstrator = MissionStatusDemonstrator()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "demo_cycle_based_operations.py",
      "line": 17,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "demonstrator = CycleBasedOperationsDemonstrator()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "demo_onboarding_knowledge.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "demonstrate_vector_integration.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "demonstrate_vector_integration.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "success, suggestions = intelligent_messaging.send_message(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "demonstrate_vector_integration.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_result = coordinator.coordinate_task(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "demonstrate_vector_integration.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "success, suggestions = intelligent_messaging.send_message(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "demonstrate_vector_integration.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_result = coordinator.coordinate_task(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_bot_config.py",
      "line": 46,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "config = DiscordBotConfig()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_bot_config.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = DiscordBotConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_bot_config.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "is_configured = config.print_config_status()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_fixed.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "get_real_tesla_price.py",
      "line": 20,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, headers=headers, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "get_real_tesla_price.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "get_real_tesla_price.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "get_real_tesla_price.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus = engine.get_consensus_flag(flags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_all_onboarding_docs.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "ingest_all_onboarding_docs.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_ids = core.ingest_onboarding_managers()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_modular.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "ingest_captain_docs.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = devlog_file.read_text(encoding=\"utf-8\", errors=\"ignore\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = Path(protocol_file).read_text(encoding=\"utf-8\", errors=\"ignore\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = Path(compliance_file).read_text(encoding=\"utf-8\", errors=\"ignore\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 151,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = Path(security_file).read_text(encoding=\"utf-8\", errors=\"ignore\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "ingest_existing_documentation.py",
      "line": 247,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = Path(guideline_file).read_text(encoding=\"utf-8\", errors=\"ignore\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "reduce_md_files.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "reduce_md_files.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "frontend_dir = Path(\"frontend\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "reduce_md_files.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "frontend_files = list(frontend_dir.rglob(\"*.md\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
      "line": 18,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.v3_directives = self._get_v3_directives()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
      "line": 19,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.quality_guidelines = self._get_quality_guidelines()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_status = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "V3_DIRECTIVES_DEPLOYMENT_SYSTEM.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_passed = deployment_system.validate_deployment()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "V3_SECURITY_CLEANUP_FIXED.py",
      "line": 43,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "password = os.getenv(\"DISCORD_BOT_PASSWORD\", \"default_value\")",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "V3_SECURITY_CLEANUP_FIXED.py",
      "line": 44,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "api_key = os.getenv(\"API_KEY\")",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "V3_SECURITY_CLEANUP_FIXED.py",
      "line": 47,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "password = \"example\"  # This is fine for examples",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "V3_SECURITY_CLEANUP_FIXED.py",
      "line": 48,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "token = \"test_token\"  # This is fine for tests",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "V3_SECURITY_CLEANUP_FIXED.py",
      "line": 51,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "password = \"real_password_123\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "V3_SECURITY_CLEANUP_FIXED.py",
      "line": 52,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "api_key = \"sk-1234567890abcdef\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "cleanup_stale_database_records.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain_integration_example.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain_integration_example.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations = {\"cache_size\": 1000, \"parallel_processing\": True}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain_integration_example.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations=optimizations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_selector_debugger.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "thea_selector_debugger.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"div[contenteditable='true'][role='textbox']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_selector_debugger.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"[contenteditable='true']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_selector_debugger.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"div[data-testid='conversation-composer-input'] div[contenteditable='true']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "simple_thea_debugger.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "simple_thea_debugger.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_manual_login.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "thea_manual_login.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = system.send_message_autonomous(test_message)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, driver: webdriver.Chrome | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.last_response_length = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_selectors = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.continue_selectors = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 100,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "continue_clicks = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_element = self._find_response_element()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.last_response_length = current_length",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 150,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_element = self._find_response_element()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 243,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def create_response_detector(driver: webdriver.Chrome | None = None) -> ResponseDetector:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 248,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def wait_for_response(driver: webdriver.Chrome | None = None, timeout: int = 120) -> bool:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "response_detector.py",
      "line": 255,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def extract_response(driver: webdriver.Chrome | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "quality_gates_core.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_count = len([n for n in ast.walk(tree) if isinstance(n, ast.FunctionDef)])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_function_complexity = self._calculate_max_function_complexity(tree)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "async_function_count = self._count_async_functions(tree)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = self._check_violations(file_path, line_count, enum_count, class_count,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 100,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_count=function_count,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_function_complexity=max_function_complexity,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "async_function_count=async_function_count,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 130,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "visited = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "quality_gates_core.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 282,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_count=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 284,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_function_complexity=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 287,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "async_function_count=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_gates_core.py",
      "line": 289,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=[\"Analysis failed\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "captain_docs_core.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "log_content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sections = self._parse_log_sections(log_content)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=log_content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sections = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "handbook_content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=handbook_content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cheatsheet_content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_docs_core.py",
      "line": 118,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=cheatsheet_content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_cycle_core.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "captain_cycle_core.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "handbook_content = \"\"\"# Captain's Handbook - Agent Cellphone V2 (Cycle-Based Operations)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_cycle_core.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cheatsheet_content = \"\"\"# Captain's Cheatsheet - Cycle-Based Operations",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_cycle_core.py",
      "line": 302,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "handbook_content = self.create_cycle_based_handbook()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_cycle_core.py",
      "line": 303,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cheatsheet_content = self.create_cycle_based_cheatsheet()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_cycle_core.py",
      "line": 308,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=handbook_content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_cycle_core.py",
      "line": 319,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=cheatsheet_content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_definitions = self._create_agent_definitions(coords_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=agent_definitions,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "definitions = \"# Complete Agent Definitions\\n\\n\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_path = Path(\"docs/onboarding_manager.md\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 100,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 104,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "complete_onboarding_core.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_fixed_backup.py",
      "line": 59,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_fixed_backup.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_fixed_backup.py",
      "line": 77,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "self.connected_agents = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "discord_commander_fixed_backup.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connected_agents = set()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_fixed_backup.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_fixed_backup.py",
      "line": 309,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = \"üêù **Discord Commander Active!**\\n\\n\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_fixed_backup.py",
      "line": 329,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_core.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "env_content = f\"\"\"# Discord Commander Configuration",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 88,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "DISCORD_BOT_TOKEN={bot_token}",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 89,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "DISCORD_CHANNEL_ID={channel_id}",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 90,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "DISCORD_GUILD_ID={guild_id}",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 93,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "AGENT_MODE=5-agent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 94,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "ACTIVE_AGENTS=Agent-4,Agent-5,Agent-6,Agent-7,Agent-8",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 97,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "LOG_LEVEL=INFO",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 98,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "DEBUG_MODE=false",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_setup_core.py",
      "line": 126,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "env_content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "comprehensive_devlog_core.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(\"http://localhost:8002/api/devlogs/export/json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "comprehensive_devlog_core.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analyze_large_files.py",
      "line": 8,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "large_files = [f for f in data['violations']['files'] if f['lines'] > 400]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "cleanup_stale_database_core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "cleanup_stale_database_core.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "cleanup_stale_database_core.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self.validate_cleanup_results()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent5_inbox_checker_core.py",
      "line": 27,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.inbox_dir = self.workspace_dir / \"inbox\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent5_inbox_checker_core.py",
      "line": 28,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.processed_dir = self.workspace_dir / \"processed\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent5_inbox_checker_core.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "correlation_id = message.get(\"correlation_id\", \"unknown\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent5_inbox_checker_core.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_status = response.get(\"status\", \"unknown\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent5_inbox_checker_core.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_message = response.get(\"message\", \"No message\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "captain_knowledge_demo_core.py",
      "line": 121,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_patterns = self.retriever.how_do_agents_do(\"successful coordination\", k=3)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "v2_compliance_checker_core.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "combined_export_core.py",
      "line": 33,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"agents\": set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "combined_export_core.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(\"http://localhost:8002/api/devlogs/export/json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "combined_export_core.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = file_path.read_text(encoding=\"utf-8\", errors=\"replace\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_files = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 209,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "guide_content = \"\"\"# Database Query Replacement Guide",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 218,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "retriever = Retriever()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 221,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "devlogs = retriever.search(\"devlog entries\", kinds=[\"conversation\"], k=50)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 224,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "agent_devlogs = retriever.search(\"\", kinds=[\"conversation\"], agent_id=\"Agent-5\", k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 227,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "recent_devlogs = retriever.search(\"recent devlog entries\", kinds=[\"conversation\"], k=10)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 233,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "protocols = retriever.search(\"communication protocols\", kinds=[\"protocol\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 236,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "guidelines = retriever.search(\"agent guidelines\", kinds=[\"protocol\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 239,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "collaboration = retriever.search(\"collaboration\", kinds=[\"protocol\"], k=10)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 245,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "compliance = retriever.search(\"V2 compliance\", kinds=[\"action\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 248,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "refactoring = retriever.search(\"refactoring patterns\", kinds=[\"protocol\", \"action\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 251,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "violations = retriever.search(\"compliance violations\", kinds=[\"action\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 251,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = retriever.search(\"compliance violations\", kinds=[\"action\"], k=20)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 257,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "security = retriever.search(\"security implementation\", kinds=[\"action\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 260,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "security_protocols = retriever.search(\"security protocols\", kinds=[\"protocol\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 263,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "validations = retriever.search(\"security validation\", kinds=[\"action\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 263,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validations = retriever.search(\"security validation\", kinds=[\"action\"], k=20)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 269,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "expertise = retriever.get_agent_expertise(\"Agent-1\", k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 272,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "work_patterns = retriever.search(\"work patterns\", kinds=[\"action\", \"protocol\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 275,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "contracts = retriever.search(\"agent contracts\", kinds=[\"protocol\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 275,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts = retriever.search(\"agent contracts\", kinds=[\"protocol\"], k=20)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 281,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "coordination = retriever.search(\"coordination patterns\", kinds=[\"coordination\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 284,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "interactions = retriever.search(\"agent interactions\", kinds=[\"conversation\", \"action\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 284,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "interactions = retriever.search(\"agent interactions\", kinds=[\"conversation\", \"action\"], k=20)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "static_documentation_deleter_core.py",
      "line": 287,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "collaboration = retriever.search(\"collaboration patterns\", kinds=[\"coordination\"], k=20)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "database_query_demonstrator_core.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "database_query_demonstrator_core.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "compliance_actions = self.retriever.search(\"compliance\", kinds=[\"action\"], k=20)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "database_query_demonstrator_core.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "security_actions = self.retriever.search(\"security\", kinds=[\"action\"], k=20)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "mission_status_demonstrator_core.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "cycle_based_operations_demonstrator_core.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "devlog_analytics_system_core.py",
      "line": 53,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "thread = threading.Thread(target=_run, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "devlog_analytics_system_core.py",
      "line": 53,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function run_service",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 32,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.controller = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 128,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "bot_thread = threading.Thread(target=run_bot, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.controller = DiscordCommanderController()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 161,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "controller_thread = threading.Thread(target=run_controller, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controller_thread = threading.Thread(target=run_controller, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 229,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controller_success = self.start_controller()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_commander_launcher_core.py",
      "line": 161,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_controller",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "agent_mode_switcher_core.py",
      "line": 15,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_path = \"config/unified_config.yaml\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_mode_switcher_core.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = self.load_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_mode_switcher_core.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "mode_config = config[\"agent_modes\"][mode_name]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_mode_switcher_core.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = self.load_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "discord_bot_config_core.py",
      "line": 18,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.config = self._load_config()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "discord_bot_config_core.py",
      "line": 18,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = self._load_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 49,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.config = self._load_config(config_path)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = self._load_config(config_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_path = path",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_data = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(f\"{self.base_url}/user\", headers=self.headers, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 133,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_url=repo[\"clone_url\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 153,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = base64.b64decode(file_data[\"content\"]).decode(\"utf-8\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 211,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 229,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_url=repo[\"clone_url\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 252,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "github_agent_client_core.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(f\"{self.base_url}/rate_limit\", headers=self.headers, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "real_agent_coordination_core.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "real_messaging_available = False",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "real_agent_coordination_core.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "real_agent_coordination_core.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "correlation_id = f\"corr-{datetime.now().strftime('%H%M%S')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "real_agent_coordination_core.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "responses = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "real_agent_coordination_core.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "real_agent_coordination_core.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "notification_message = f\"\"\"============================================================",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "temp_message_sender_core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "quality_coordination_response.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "quality_coordination_response.py",
      "line": 219,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = protocol.create_coordination_response()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "quality_coordination_response.py",
      "line": 247,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_path = Path(\"agent_workspaces/Agent-6/coordination_response.json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_executor.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_executor.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.execution_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_executor.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.core.validate_database_integrity()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_executor.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_summary = self._generate_execution_summary()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_executor.py",
      "line": 163,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.partitioning_plans = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\scalability_strategies.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "partitioning_strategies = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\automated_migration_scripts.py",
      "line": 32,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\automated_migration_scripts.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controller = MigrationController(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching_strategy_system.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching_strategy_system.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = load_config(args.config) if args.config else {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_core.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_core.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.migration_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_core.py",
      "line": 41,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "self.with sqlite3.connect(str(self.db_path) as connection:)",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_core.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_core.py",
      "line": 67,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(str(backup_path) as backup_conn:)",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_core.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\migration_scripts.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.scripts = self._define_migration_scripts()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 46,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "self.with sqlite3.connect(str(self.db_path) as connection:)",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = self._generate_optimization_recommendations(query_analysis, index_analysis, slow_queries)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_results = self._apply_optimizations(recommendations)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_queries = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"SELECT * FROM v2_compliance_audit WHERE component_name = ?\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 266,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 300,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 317,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 327,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avg_execution_time = statistics.mean([test['execution_time'] for test in validation_results['performance_tests']])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\query_optimization_system.py",
      "line": 383,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_system = QueryOptimizationSystem()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\scalability_core.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\scalability_validation.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\scalability_validation.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.load_balancing_config = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\v2_compliance_improvement_plan.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\v2_compliance_improvement_plan.py",
      "line": 27,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.compliance_issues = self._identify_compliance_issues()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\database_specialist\\v2_compliance_improvement_plan.py",
      "line": 28,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.improvement_strategy = self._create_improvement_strategy()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\__init__.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = cache_config or self._get_default_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
      "line": 31,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.redis_available = self._check_redis_availability()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitor = CacheMonitor(self.config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring = self.monitor.implement_performance_monitoring()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\core\\caching_system.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if entry.ttl and datetime.now() > entry.created_at + timedelta(seconds=entry.ttl):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\monitoring\\cache_monitor.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\monitoring\\cache_monitor.py",
      "line": 22,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\monitoring\\cache_monitor.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\strategies\\cache_strategies.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\strategies\\cache_strategies.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\strategies\\cache_strategies.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.invalidation_rules = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\strategies\\cache_strategies.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.invalidation_rules = invalidation",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\tools\\cache_tools.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\database_specialist\\caching\\tools\\cache_tools.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching_strategy_system.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching_strategy_system.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = load_config(args.config) if args.config else {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_core.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_core.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.migration_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_core.py",
      "line": 41,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "self.with sqlite3.connect(str(self.db_path) as connection:)",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_core.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_core.py",
      "line": 67,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(str(backup_path) as backup_conn:)",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_core.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_executor.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_executor.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.execution_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_executor.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.core.validate_database_integrity()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_executor.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_summary = self._generate_execution_summary()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_executor.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\migration_scripts.py",
      "line": 24,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.scripts = self._define_migration_scripts()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_system.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\scalability_core.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\scalability_strategies.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\scalability_strategies.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.partitioning_plans = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\scalability_strategies.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "partitioning_strategies = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\scalability_validation.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\scalability_validation.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.load_balancing_config = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\v2_compliance_improvement_plan.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\v2_compliance_improvement_plan.py",
      "line": 25,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.compliance_issues = self._identify_compliance_issues()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\Agent-3\\v2_compliance_improvement_plan.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.improvement_strategy = self._create_improvement_strategy()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\Agent-3\\automated_migration_scripts.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\automated_migration_scripts.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controller = MigrationController(db_path=args.db_path, backup_dir=args.backup_dir)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 42,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "self.with sqlite3.connect(str(self.db_path) as connection:)",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = self._generate_optimization_recommendations(slow_queries)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "applied_optimizations = self._apply_optimizations(recommendations)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self._validate_improvements()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\query_optimization_core.py",
      "line": 148,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\__init__.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = cache_config or self._get_default_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
      "line": 28,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.redis_available = self._check_redis_availability()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitor = CacheMonitor(self.config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring = self.monitor.implement_performance_monitoring()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
      "line": 148,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if entry.ttl and datetime.now() > entry.created_at + timedelta(seconds=entry.ttl):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\core\\caching_system.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def set_in_cache(self, key: str, value: Any, ttl: int | None = None) -> bool:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\models\\cache_models.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ttl: int | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\monitoring\\cache_monitor.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\monitoring\\cache_monitor.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\monitoring\\cache_monitor.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\strategies\\cache_strategies.py",
      "line": 12,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\strategies\\cache_strategies.py",
      "line": 20,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\strategies\\cache_strategies.py",
      "line": 22,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.invalidation_rules = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\strategies\\cache_strategies.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.invalidation_rules = invalidation",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\tools\\cache_tools.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "agent_workspaces\\Agent-3\\caching\\tools\\cache_tools.py",
      "line": 22,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_task_manager.py",
      "line": 37,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.working_tasks_file = self.workspace_dir / \"working_tasks.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\agent_task_manager.py",
      "line": 38,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.future_tasks_file = self.workspace_dir / \"future_tasks.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\agent_task_manager.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "dependencies: list[str] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis_cli.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "tools_dir = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\post_major_update.py",
      "line": 40,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "tools_dir = Path(__file__).parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if component_type == \"react\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = {name}()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 148,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = {name}()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 160,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "devlog_content = f\"\"\"## {name} Component Created",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "- `{name}.{'js' if component_type == 'react' else 'py'}`",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 171,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "- `{name}.test.{'js' if component_type == 'react' else 'py'}`",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_cli.py",
      "line": 269,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type = sys.argv[3] if len(sys.argv) > 3 else \"react\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_interface.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\captain_autonomous_interface.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conditions = self.core.check_stopping_conditions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_interface.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conditions = self.core.check_stopping_conditions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\directive_handlers.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\directive_models.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.milestones = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\directive_models.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.milestones = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\run_project_scan.py",
      "line": 11,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "REPO_ROOT = Path(__file__).resolve().parents[1]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\simple_workflow_automation.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\simple_workflow_automation.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "message_content = f\"\"\"# Message from {from_agent}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_workflow_automation.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "message_content = f\"\"\"# Status Check Request",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_workflow_automation.py",
      "line": 290,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "message_content = f\"\"\"# Task Assignment: {title}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_workflow_automation.py",
      "line": 322,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "message_content = f\"\"\"# Project Participation: {project_name}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow_cli.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\performance_detective_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\performance_detective_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\performance_detective_cli.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "investigation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\security_inspector_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\security_inspector_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\documentation_architect_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\documentation_architect_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\integration_explorer_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\integration_explorer_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\integration_explorer_cli.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "exploration_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\financial_analyst_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\financial_analyst_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\trading_strategist_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\trading_strategist_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\risk_manager_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\risk_manager_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\market_researcher_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\market_researcher_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\portfolio_optimizer_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\portfolio_optimizer_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\portfolio_optimizer_cli.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\compliance_auditor_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\compliance_auditor_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\__init__.py",
      "line": 6,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_swarm_scaffolder.py",
      "line": 8,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "PROJECT_NAME = \"AgentCellphoneV2\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_swarm_scaffolder.py",
      "line": 9,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "AUTHOR = \"Agent Swarm\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_swarm_scaffolder.py",
      "line": 10,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "INITIAL_COMMIT_MSG = \"Initial commit: Agent Cellphone V2 folder structure and orchestrator setup.\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_swarm_scaffolder.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "FOLDERS = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_swarm_scaffolder.py",
      "line": 33,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "FILES = {",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_vector_search.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_vector_search.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_vector_search.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = result.get(\"context\", \"Unknown\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = \"\"\"# AUTO-GENERATED __init__.py",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 81,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = {python_files}",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 150,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "devlog_content = f\"\"\"# {title}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = file_path.read_text()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_count = len([line for line in lines if line.strip().startswith(\"def \")])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 306,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name = params.get(\"name\", \"NewComponent\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 307,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type = params.get(\"type\", \"react\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_automation.py",
      "line": 309,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if component_type == \"react\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_workflow_manager.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_workflow_manager.py",
      "line": 89,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.workflow_data = self._load_workflow()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\agent_workflow_manager.py",
      "line": 90,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.steps = self._initialize_steps()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\agent_workflow_manager.py",
      "line": 118,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"steps\": [step.to_dict() for step in self.steps],",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\agent_workflow_manager.py",
      "line": 245,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"steps\": [step.to_dict() for step in self.steps],",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\api_gateway_cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\api_gateway_cli.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.gateway: APIGateway | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\api_gateway_cli.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "headers: dict[str, str] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\api_gateway_cli.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "data: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\api_gateway_cli.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self.gateway.process_request(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\api_gateway_cli.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def generate_docs(self, output_file: str | None = None) -> int:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_core.py",
      "line": 31,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.bottlenecks = self.storage.load_bottlenecks()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\captain_autonomous_core.py",
      "line": 32,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.flaws = self.storage.load_flaws()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\captain_autonomous_core.py",
      "line": 33,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.stopping_conditions = self.storage.load_stopping_conditions()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\captain_autonomous_core.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.stopping_conditions = self.storage.load_stopping_conditions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_core.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "stopping_conditions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_manager.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\captain_autonomous_models.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.resolution_plan = resolution_plan",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_models.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.resolution_attempts = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_models.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.resolution_attempts = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_storage.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.stopping_conditions_file = Path(\"swarm_coordination/stopping_conditions.json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_storage.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "resolution_plan=bottleneck_data[\"resolution_plan\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_storage.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "bottleneck.resolution_attempts = bottleneck_data[\"resolution_attempts\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_storage.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "flaw.resolution_attempts = flaw_data[\"resolution_attempts\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_utility.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "age_seconds = time.time() - file_path.stat().st_mtime",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_utility.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_seconds = int(delta.total_seconds())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_utility.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "minutes, seconds = divmod(remainder, 60)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_utility.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files = list(project_root.rglob(\"*.py\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_utility.py",
      "line": 163,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = file_path.read_text(encoding=\"utf-8\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_autonomous_utility.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_cli.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\captain_cli.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "activity_monitor = get_activity_monitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_cli.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_message = f\"\"\"üö® ONBOARDING REQUIRED - IMMEDIATE ACTION",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_cli.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_parser = subparsers.add_parser(\"onboard\", help=\"Onboard agent\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_directive_manager.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\captain_directive_manager.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.milestones = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_directive_manager.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.milestones = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_directive_manager.py",
      "line": 111,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.directives = self._load_directives()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\captain_directive_manager.py",
      "line": 112,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.initiatives = self._load_initiatives()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\captain_directive_manager.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "directive.milestones = directive_data[\"milestones\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\captain_directive_manager.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "initiative.milestones = initiative_data[\"milestones\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\code_archaeologist_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\code_archaeologist_cli.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\code_archaeologist_cli.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evolution_analysis = self.service.evolution_tracker.track_evolution(target_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.content_hashes = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.content_hashes = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hash = self.generate_content_hash(content, metadata)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hash = self.generate_content_hash(content, metadata)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"{row['title']} {row['summary']} {row['canonical']}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = vector.get(\"content\", \"\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\content_hash_system.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"{devlog.get('action', '')} {devlog.get('details', '')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\coordinate_mapper.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_path = config_path",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\coordinate_mapper.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.coordinates = self._load_coordinates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\coordinate_mapper.py",
      "line": 202,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_coords = agent_data.get(\"onboarding_coordinates\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\coordinate_mapper.py",
      "line": 231,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_coords = agent_data.get(\"onboarding_coordinates\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\database_cleanup.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\database_cleanup.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hashes = defaultdict(list)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\database_cleanup.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = doc.get(\"canonical\", \"\") + doc.get(\"summary\", \"\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\database_cleanup.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hash = hashlib.md5(content.encode()).hexdigest()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\database_cleanup.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\database_cleanup.py",
      "line": 252,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"{doc.get('title', '')} {doc.get('summary', '')} {doc.get('canonical', '')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\database_cleanup.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hash = hashlib.md5(content.encode()).hexdigest()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 21,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.consolidated_dir = self.devlogs_dir / \"consolidated\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.consolidated_dir = self.devlogs_dir / \"consolidated\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = log_path.read_text(encoding=\"utf-8\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = log[\"content\"].lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidated_content = f\"\"\"# {agent} Comprehensive Daily Summary - {date}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = log[\"content\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "key_content = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "in_content = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 144,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = log[\"content\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 156,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = log[\"content\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 168,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = log[\"content\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 180,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = log[\"content\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 223,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidated_content = self.consolidate_logs(date, agent, log_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidated_filename = f\"{date}_{agent}_Comprehensive_Daily_Summary.md\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidated_path = self.devlogs_dir / consolidated_filename",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_consolidator.py",
      "line": 264,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidator = DevlogConsolidator()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\devlog_storyteller_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\devlog_storyteller_cli.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\devlog_storyteller_cli.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\directive_services.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "directive.milestones = directive_data[\"milestones\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\directive_services.py",
      "line": 177,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "initiative.milestones = initiative_data[\"milestones\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\duplication_audit.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\duplication_audit.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = __import__(\"logging\").getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\duplication_audit.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.integration_issues = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\duplication_audit.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\duplication_audit.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "production_indicators = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\duplication_audit.py",
      "line": 144,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_lower = content.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\duplication_audit.py",
      "line": 171,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.systems = self._load_systems()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\feature_registry_check.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\feature_registry_check.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = __import__(\"logging\").getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\feature_registry_check.py",
      "line": 32,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.registry = self._load_registry()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\github_agent_cli.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_cli.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = args.content or \"\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_cli.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permission_level = GitHubPermissionLevel(args.permission_level.lower())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_cli.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = self.service.get_agent_operations(self.agent_id, status)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 50,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.config = self._load_config(config_path)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = self._load_config(config_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_path = path",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_data = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(f\"{self.base_url}/user\", headers=self.headers, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_url=repo[\"clone_url\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 171,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 199,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = base64.b64decode(file_data[\"content\"]).decode(\"utf-8\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 212,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_url=repo[\"clone_url\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_client.py",
      "line": 268,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(f\"{self.base_url}/rate_limit\", headers=self.headers, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "language: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 95,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.session = self._create_session()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self.session.get(f\"{self.base_url}/user\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self.session.request(method, url, **kwargs)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_url=repo_data[\"clone_url\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"POST\", \"/user/repos\", json=data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"GET\", f\"/repos/{owner}/{repo}\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"GET\", endpoint)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 215,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"POST\", f\"/repos/{owner}/{repo}/issues\", json=data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"GET\", f\"/repos/{owner}/{repo}/issues/{issue_number}\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"GET\", f\"/repos/{owner}/{repo}/issues\", params=params)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 235,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"POST\", f\"/repos/{owner}/{repo}/pulls\", json=data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 258,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 319,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ref_response = self._make_request(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 340,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"GET\", \"/user\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 346,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._make_request(\"GET\", \"/search/repositories\", params=params)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\github_agent_controller.py",
      "line": 364,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controller = create_github_controller(token)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = None",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 29,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.content = self._load_knowledge_base()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.content = self._load_knowledge_base()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 30,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.sections = self._parse_sections()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.sections = self._parse_sections()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sections = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "current_content = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "current_content = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def search(self, query: str, category: str | None = None) -> list[dict[str, str]]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sections_to_search = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "section_content = self.sections[section_name]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_problems = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 247,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "solutions = search_tool.get_quick_solutions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 278,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "solutions = search_tool.get_quick_solutions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\knowledge_base_search.py",
      "line": 292,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "solutions = search_tool.get_quick_solutions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\overengineering_detector.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\overengineering_detector.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = file_path.read_text()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\overengineering_detector.py",
      "line": 292,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\overengineering_detector.py",
      "line": 295,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "abstraction_issues = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\overengineering_detector.py",
      "line": 348,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = detector.get_simplification_recommendations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\predictive_analytics_cli.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time=response_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\predictive_analytics_cli.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=50,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\predictive_analytics_cli.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = health[\"components\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\predictive_analytics_cli.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time=150.0 + (hour * 20),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\predictive_analytics_cli.py",
      "line": 160,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cpu=85.0, memory=78.0, response_time=300.0, error_rate=0.02",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\predictive_analytics_cli.py",
      "line": 228,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time=args.response_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_reason: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 126,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_id=f\"response_{agent_id}_{hash(response_text)}\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 130,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 248,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_text = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 250,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_text = args.check",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_reference_enforcer.py",
      "line": 256,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_report = enforcer.generate_violation_report(report)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\quick_fix.py",
      "line": 10,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\quick_fix.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\quick_fix.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = \"\"\"# AUTO-GENERATED __init__.py",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\quick_fix.py",
      "line": 57,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = {python_files}",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\simple_project_scanner.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\simple_project_scanner.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_analysis = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_project_scanner.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_vector_cleanup.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\simple_vector_cleanup.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_vector_cleanup.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hash = hashlib.md5(content.encode()).hexdigest()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_vector_search.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\simple_vector_search.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = msg_file.read_text(encoding=\"utf-8\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_vector_search.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = devlog_file.read_text(encoding=\"utf-8\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\simple_vector_search.py",
      "line": 212,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\swarm_coordination_tool.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\swarm_coordination_tool.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision_type_enum = DecisionType(decision_type)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\swarm_coordination_tool.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision_id = await swarm.propose_decision(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\swarm_coordination_tool.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision_type=decision_type_enum,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\swarm_dashboard_cli.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\team_collaboration_tool.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\team_collaboration_tool.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.collaboration_file = \"team_alpha_collaboration_workspace.md\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\team_collaboration_tool.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "discussion_entry = f\"\"\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\team_collaboration_tool.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\team_collaboration_tool.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = tool.suggest_tool_priorities()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\team_collaboration_tool.py",
      "line": 192,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = tool.suggest_tool_priorities()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\team_dashboard.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 35,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.vector_db = self._load_vector_db()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 36,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.devlog_db = self._load_devlog_db()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 37,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.project_data = self._load_project_analysis()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = vector.get(\"content\", \"\").lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 129,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"agents\": set(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 130,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"document_types\": set(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 134,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"agents\": set(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 135,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"vector_types\": set(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 136,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"sources\": set(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\unified_database_search.py",
      "line": 138,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"devlogs\": {\"total_entries\": len(self.devlog_db), \"agents\": set(), \"statuses\": set()},",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\v2_refactoring_assistant.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\v2_refactoring_assistant.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\v2_refactoring_assistant.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\v2_refactoring_assistant.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\v2_refactoring_assistant.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.violations = violations",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\v2_refactoring_assistant.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\v2_refactoring_assistant.py",
      "line": 361,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def generate_refactoring_report(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\v3_autonomous_cycle.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\webhook_provisioner_cli.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.provisioner = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\webhook_provisioner_cli.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.provisioner = DiscordWebhookProvisioner(self.bot)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\agent_cycle_devlog.py",
      "line": 40,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\enhanced_onboarding_cli.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\enhanced_onboarding_cli.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_coords = agent_info.get(\"onboarding_coordinates\", [0, 0])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\enhanced_onboarding_cli.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = input(\"\\nü§î Continue with enhanced onboarding? (y/N): \")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\soft_onboarding_cli.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\soft_onboarding_cli.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_coords = agent_info.get(\"onboarding_coordinates\", [0, 0])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\soft_onboarding_cli.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = input(\"\\nü§î Continue with soft onboarding? (y/N): \")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\unified_onboarding_cli.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\unified_onboarding_cli.py",
      "line": 126,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_coords = agent_info.get(\"onboarding_coordinates\", [0, 0])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\unified_onboarding_cli.py",
      "line": 167,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = input(f\"\\nü§î Continue with {args.type} onboarding? (y/N): \")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\find_coordinates.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\find_coordinates.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool.py",
      "line": 34,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.specifications = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.environment_vars = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "start_time: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "end_time: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: TrainingInfrastructureConfig = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or TrainingInfrastructureConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 165,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications={\"cores\": 4, \"frequency\": \"2.4GHz\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 175,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications={\"memory\": \"8GB\", \"compute_capability\": \"7.5\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications={\"size\": \"16GB\", \"type\": \"DDR4\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_core.py",
      "line": 195,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications={\"size\": \"1TB\", \"type\": \"SSD\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_main.py",
      "line": 42,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_main.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: TrainingInfrastructureConfig = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_main.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or TrainingInfrastructureConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_main.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment_id=job.environment.env_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_main.py",
      "line": 286,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor_parser = subparsers.add_parser(\"monitor\", help=\"Monitor training job\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_main.py",
      "line": 329,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment=env,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.environments_dir = base_dir / \"environments\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 223,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications=r_data.get(\"specifications\", {}),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 234,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment_vars=env_data.get(\"environment_vars\", {}),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 311,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications=r_data.get(\"specifications\", {}),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 321,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications=r_data.get(\"specifications\", {}),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 327,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment = TrainingEnvironment(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 334,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment_vars=env_data.get(\"environment_vars\", {}),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 341,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment=environment,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 404,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "specifications=r_data.get(\"specifications\", {}),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\ml_training_infrastructure_tool_utils.py",
      "line": 411,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment_id=status_data[\"environment_id\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_core.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "file_path: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_core.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "line_number: int | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_utils.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\protocol_compliance_checker_utils.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_utils.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_utils.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_count = content.count(\"def \")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_utils.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_utils.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_count = sum(1 for issue in issues if issue.level == ComplianceLevel.VIOLATION)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_main.py",
      "line": 37,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\protocol_compliance_checker_main.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_count = sum(1 for issue in self.issues if issue.level == ComplianceLevel.VIOLATION)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_main.py",
      "line": 209,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.recommendations = generate_recommendations(self.issues)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_main.py",
      "line": 216,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=violation_count,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_main.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=self.recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker_main.py",
      "line": 237,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\protocol_compliance_checker.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_rate = sum(agent.tasks_completed for agent in agent_performance) / total_tasks",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 186,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=quality_data.get(\"violations\", 0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=quality_data.get(\"recommendations\", []),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 197,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[\"Run quality gates to get current data\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 208,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 211,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[\"Quality gate data unavailable\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 276,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_percentage = (compliant_files / total_files * 100) if total_files > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 280,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_percentage=completion_percentage,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_utils.py",
      "line": 293,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_percentage=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_main.py",
      "line": 36,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\operational_dashboard_tool_main.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_rate = (completed_tasks / total_tasks * 100) if total_tasks > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_main.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = generate_recommendations(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_main.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_main.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "project_name: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_main.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool_main.py",
      "line": 340,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "html_content = dashboard.generate_dashboard_html()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\operational_dashboard_tool.py",
      "line": 36,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\memory_leak_detector.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\memory_leak_detector.py",
      "line": 104,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"pattern\": r\"addEventListener|on\\w+\\s*=\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_leak_detector.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_leak_detector.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files = list(self.project_root.rglob(\"*.py\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_leak_detector.py",
      "line": 271,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 49,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "\"replacement\": r\"with sqlite3.connect(\\2) as \\1:\",",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 59,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "\"replacement\": r\"threading.Thread(\\1, daemon=True)\",",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "original_content = content",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 110,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = content[:match.start()] + fixed_code + content[match.end():]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 152,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "high_severity_files = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring_tool = '''#!/usr/bin/env python3",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 205,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 244,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.snapshots = self.snapshots[-100:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 281,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 296,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 313,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = MemoryMonitor(args.threshold)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 328,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring_file = self.project_root / \"tools\" / \"memory_monitor.py\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_optimizer.py",
      "line": 387,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring_tool = optimizer.create_memory_monitoring_tool()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_monitor.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\memory_monitor.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_monitor.py",
      "line": 60,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.snapshots = self.snapshots[-100:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\memory_monitor.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_monitor.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_monitor.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = MemoryMonitor(args.threshold)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_monitor.py",
      "line": 45,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function take_snapshot",
      "code": "Process()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 81,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.stats_history = self.stats_history[-self.max_history:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 146,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self.monitor_thread = threading.Thread(",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitor_thread = threading.Thread(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 241,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 60,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function get_current_stats",
      "code": "Process()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "tools\\memory_manager.py",
      "line": 146,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_monitoring",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 58,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "if \"threading.Thread(\" in content and \"daemon=True\" not in content:",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = content.replace(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 60,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "\"threading.Thread(\",",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 61,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "\"threading.Thread(\"",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = re.sub(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 66,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "r\"threading.Thread(\\1, daemon=True)\",",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 118,
      "type": "deque_without_limit",
      "severity": "MEDIUM",
      "description": "Unbounded deque can cause memory growth",
      "code": "if \"collections.deque()\" in content:",
      "recommendation": "Consider using maxlen parameter"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = content.replace(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 120,
      "type": "deque_without_limit",
      "severity": "MEDIUM",
      "description": "Unbounded deque can cause memory growth",
      "code": "\"collections.deque()\",",
      "recommendation": "Consider using maxlen parameter"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 207,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "if \"threading.Thread(\" in content and \"daemon=True\" not in content:",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 208,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = re.sub(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 210,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "r\"threading.Thread(\\1, daemon=True)\",",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 249,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 263,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversations = data.get(\"conversations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\critical_memory_fixer.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "filtered_conversations = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\analyzers.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\analyzers.py",
      "line": 31,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.rust_parser = self._init_tree_sitter_language(\"rust\")",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\projectscanner\\analyzers.py",
      "line": 32,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.js_parser = self._init_tree_sitter_language(\"javascript\")",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\projectscanner\\analyzers.py",
      "line": 186,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\reporters.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\workers.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\workers.py",
      "line": 190,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\workers.py",
      "line": 98,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function __init__",
      "code": "Queue()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "tools\\projectscanner\\workers.py",
      "line": 99,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function __init__",
      "code": "Queue()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "tools\\projectscanner\\core.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\core.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_analysis = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\core.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\core.py",
      "line": 123,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "dependencies = {\"requirements_files\": [], \"imports\": {}, \"external_deps\": set()}",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\core.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\core.py",
      "line": 214,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\core.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_file = self.project_root / \"chatgpt_project_context.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\__init__.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\__init__.py",
      "line": 37,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\__init__.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\__init__.py",
      "line": 38,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"V2_SWARM Agent-4 (Captain)\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\__init__.py",
      "line": 39,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__description__ = \"V2 Compliant Project Scanner Package\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\__init__.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__description__ = \"V2 Compliant Project Scanner Package\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\cli.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\cli.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\cli.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_analysis = analysis[\"python_analysis\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_analyzer_v2.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\file_discovery.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\file_discovery.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "file_extensions = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core_analyzer.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core_analyzer.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "extensions = [\".py\", \".rs\", \".js\", \".ts\", \".json\", \".yaml\", \".yml\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core_analyzer.py",
      "line": 38,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "discovered_files = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core_analyzer.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\caching_system.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\caching_system.py",
      "line": 25,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.cache = self.load_cache()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
      "line": 173,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_path = self.project_root / \"chatgpt_project_context.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "existing_context = self._load_existing_report(context_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "enhanced_context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "merged_context = {**existing_context, **enhanced_context}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generator.py",
      "line": 251,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = \"\\n\".join(lines)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\language_analyzer.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\language_analyzer.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.python_analyzer = PythonAnalyzer()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\language_analyzer.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "functions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\language_analyzer.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "functions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\python_analyzer.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\python_analyzer.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "functions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\python_analyzer.py",
      "line": 248,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_functions = len(functions)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\__init__.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\agent_categorization.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\agent_categorization.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.specialization_patterns = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\agent_categorization.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_analysis = analysis.get(\"content_analysis\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\agent_categorization.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "functions = content_analysis.get(\"functions\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\file_analysis.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\file_analysis.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hash_map = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\file_analysis.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_hash = analysis.get(\"content_hash\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generation.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generation.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def export_chatgpt_context(self, template_path: str | None = None) -> None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generation.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "chatgpt_context = self.report_generator.generate_chatgpt_context(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\report_generation.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_path = self.core.project_root / \"chatgpt_project_context.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 47,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "self.additional_ignore_dirs: set[str] = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "progress_callback: Callable[[int], None] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "num_workers: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "file_extensions: set[str] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "minor_violations = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 133,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "major_violations = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_scanner\\core.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "critical_violations = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\projectscanner\\enhanced_analyzer\\core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\projectscanner\\enhanced_analyzer\\core.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, project_root: Path | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "MAX_FILE_LOC = 400",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "MAX_CLASS_LOC = 100",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "MAX_FUNCTION_LOC = 50",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "MAX_LINE_LENGTH = 100",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "EXCLUDE_PATTERNS = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.max_function_loc = MAX_FUNCTION_LOC",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\core.py",
      "line": 167,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 20,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.refactor_suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "file_suggestions = self._analyze_file_violations(file_result)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type = violation[\"type\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if violation_type == \"file_loc\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif violation_type == \"class_loc\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif violation_type == \"function_loc\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif violation_type == \"print_statement\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif violation_type == \"line_length\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 130,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\refactor.py",
      "line": 136,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestion_type = suggestion[\"type\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\violations.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\violations.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.violation_counts = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\violations.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files = list(root_path.rglob(\"*.py\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\violations.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type = violation[\"type\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\violations.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_violations = results[\"total_violations\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\violations.py",
      "line": 111,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_counts = results[\"violation_counts\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\__init__.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\__init__.py",
      "line": 34,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\__init__.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\__init__.py",
      "line": 35,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"V2_SWARM Agent-4 (Captain)\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\__init__.py",
      "line": 36,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__description__ = \"V2 Compliant Analysis Tool Package\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\__init__.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__description__ = \"V2 Compliant Analysis Tool Package\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\analysis\\cli.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\analysis\\cli.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations_text = format_violations_text(results)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\fsm\\fsm_scan.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\fsm\\fsm_scan.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "ROOTS = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\fsm\\fsm_scan.py",
      "line": 30,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "VALID_AGENT_STATES = {state.value for state in AgentState}",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\fsm\\fsm_scan.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "VALID_SWARM_STATES = {state.value for state in SwarmState}",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\coverage\\gap_analyzer.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\coverage\\gap_analyzer.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "churn_bonus = min(1.0, stats.churn / 10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\coverage\\gap_analyzer.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\coverage\\run_coverage_analysis.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "mutation_cmd = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\__init__.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\__init__.py",
      "line": 39,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\__init__.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\__init__.py",
      "line": 40,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"Agent-2 (Architecture & Design Specialist)\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\__init__.py",
      "line": 41,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__description__ = \"V2 Compliant Agent Workflow System\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\__init__.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__description__ = \"V2 Compliant Agent Workflow System\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\automation.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\automation.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "started_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completed_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "result: Any | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 95,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"steps\": [step.to_dict() for step in self.steps],",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 142,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "visited = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\core.py",
      "line": 143,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "rec_stack = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config_file: str | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 45,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.config = self._load_config(config_file)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = self._load_config(config_file)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "default_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "user_config = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 102,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "json.dump(workflow.to_dict(), f, indent=2)",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\manager.py",
      "line": 136,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_order = WorkflowScheduler.get_execution_order(workflow.steps)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_metrics: PerformanceMetrics | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.start_time: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "parallel_executions=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = (datetime.now() - self.start_time).total_seconds()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_metrics.execution_time = execution_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_executions = len(self.metrics_history)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 238,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "results = await asyncio.gather(*futures, return_exceptions=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 265,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitor = PerformanceMonitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 268,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 295,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 391,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 412,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 417,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\workflow\\optimization.py",
      "line": 61,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function __init__",
      "code": "Process()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "tools\\workflow\\simple_manager.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\simple_manager.py",
      "line": 81,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"steps\": [step.to_dict() for step in self.steps],",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\workflow\\simple_manager.py",
      "line": 148,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "json.dump(workflow.to_dict(), f, indent=2)",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\trading_cli\\market_analyzer.py",
      "line": 31,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.api_keys = self._load_api_keys()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\trading_cli\\market_analyzer.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, headers=headers, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\market_analyzer.py",
      "line": 209,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus = self.flag_engine.get_consensus_flag(flags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\market_analyzer.py",
      "line": 283,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus = prediction[\"consensus\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 28,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.api_keys = self._load_api_keys()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 29,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.sentiment_keywords = self._load_sentiment_keywords()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 163,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 351,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = min(0.9, 0.6 + abs(sentiment_score))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 354,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = min(0.8, 0.5 + abs(sentiment_score))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 357,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = min(0.9, 0.6 + abs(sentiment_score))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 360,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = min(0.8, 0.5 + abs(sentiment_score))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\news_analyzer.py",
      "line": 363,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = 0.5",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 32,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 83,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "prediction_id = cursor.lastrowid",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 111,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total, avg_accuracy, avg_confidence = cursor.fetchone()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avg_confidence = 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 236,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 293,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 308,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 345,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = agent[\"avg_confidence\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 430,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = float(input(\"Confidence (0-1): \"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 431,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning = input(\"Reasoning: \")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\prediction_tracker.py",
      "line": 433,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "prediction_id = tracker.record_prediction(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\agent_coordinator.py",
      "line": 30,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_weights = self._load_agent_weights()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\trading_cli\\agent_coordinator.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "weighted_confidence = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\agent_coordinator.py",
      "line": 207,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus = TradingFlag(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\agent_coordinator.py",
      "line": 213,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=best_data[\"confidence\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\agent_coordinator.py",
      "line": 214,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning=f\"Weighted consensus from {len(flags)} agents: {best_flag_type.upper()} signal with {best_data['confidence']:.1%} confidence\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\agent_coordinator.py",
      "line": 245,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus = self.calculate_weighted_consensus(agent_flags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\agent_coordinator.py",
      "line": 318,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus = result[\"consensus\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\technical_analyzer_core.py",
      "line": 23,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.api_keys = self._load_api_keys()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\trading_cli\\technical_analyzer_core.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\trading_cli\\technical_analyzer.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
      "line": 289,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "def get_pre_refactoring_checklist() -> list[str]:",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
      "line": 302,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "def get_during_refactoring_checklist() -> list[str]:",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
      "line": 316,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "def get_post_refactoring_checklist() -> list[str]:",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
      "line": 334,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "checklist = RefactoringChecklist()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
      "line": 362,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "for item in checklist.get_pre_refactoring_checklist():",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
      "line": 366,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "for item in checklist.get_during_refactoring_checklist():",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\refactoring_templates\\critical_file_refactoring.py",
      "line": 370,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "for item in checklist.get_post_refactoring_checklist():",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 37,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.console = Console() if RICH_AVAILABLE else None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 47,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.reports_dir = self.project_root / \"analysis_reports\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = summary.get(\"recommendations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = quality_data.get(\"violations\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = summary.get(\"recommendations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = summary.get(\"recommendations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 255,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def generate_html_report(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 262,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "html_content = \"\"\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 322,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = summary.get(\"recommendations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\analysis_dashboard.py",
      "line": 400,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "html_content = html_content.replace(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\code_quality_analyzer.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\code_quality_analyzer.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\code_quality_analyzer.py",
      "line": 297,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\code_quality_analyzer.py",
      "line": 326,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def generate_report(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\demo_analysis.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\demo_analysis.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\demo_analysis.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "remediation_report = dependency_scanner.generate_remediation_report()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\demo_analysis.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_file = self.project_root / \"config\" / \"static_analysis_config.yaml\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 270,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "report_content = \"# Dependency Vulnerability Remediation Report\\n\\n\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 286,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "upgrade_commands = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 306,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def generate_report(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 354,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "remediation_report = scanner.generate_remediation_report()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\dependency_scanner.py",
      "line": 355,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "remediation_file = Path(args.output or \"dependency_remediation_report.md\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\security_scanner.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\security_scanner.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tools\\static_analysis\\security_scanner.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"--config=auto\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tools\\static_analysis\\security_scanner.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def generate_report(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\__init__.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "browser_service\\adapters\\chrome_adapter.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "browser_service\\adapters\\chrome_adapter.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.driver: webdriver.Chrome | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\adapters\\chrome_adapter.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config: BrowserConfig | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\adapters\\chrome_adapter.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\adapters\\chrome_adapter.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "chrome_options = Options()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\adapters\\chrome_adapter.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.driver = webdriver.Chrome(options=chrome_options)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\config\\browser_config.py",
      "line": 18,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "user_data_dir: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\config\\browser_config.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reset_time: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "browser_config: BrowserConfig | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "thea_config: TheaConfig | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.browser_config = browser_config or BrowserConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.thea_config = thea_config or TheaConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.session_manager = SessionManager(self.thea_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.browser_operations = BrowserOperations(self.browser_adapter, self.thea_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def navigate_to_conversation(self, url: str | None = None) -> bool:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "user_data_dir: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "browser_config = BrowserConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\core\\unified_browser_service.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "return UnifiedBrowserService(browser_config=browser_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\managers\\session_manager.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "browser_service\\managers\\session_manager.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\managers\\session_manager.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id = f\"{service_name}_{int(time.time())}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\managers\\session_manager.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_info = SessionInfo(session_id=session_id, service_name=service_name)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\operations\\browser_operations.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "browser_service\\operations\\browser_operations.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "browser_service\\operations\\browser_operations.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def navigate_to_conversation(self, url: str | None = None) -> bool:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_deployment.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "infrastructure\\validate_deployment.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.validation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_deployment.py",
      "line": 248,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = self.validation_results[\"components\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_deployment.py",
      "line": 249,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_components = len(components)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_deployment.py",
      "line": 250,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "successful_components = sum(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_ml_pipeline.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ml_components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_ml_pipeline.py",
      "line": 168,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "versioning = ModelVersioning(\"/tmp/test_models\", \"/tmp/test_registry\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_ml_pipeline.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring = MLMonitoring(\"/tmp/test_metrics\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_tracing.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "infrastructure\\validate_tracing.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.validation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_tracing.py",
      "line": 233,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = PerformanceMonitor(collection_interval=1)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_tracing.py",
      "line": 292,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={\"test\": \"validation\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_tracing.py",
      "line": 387,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = self.validation_results[\"components\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_tracing.py",
      "line": 388,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_components = len(components)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "infrastructure\\validate_tracing.py",
      "line": 389,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "successful_components = sum(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_task: asyncio.Task | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_thresholds = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitor = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_count = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitor = performance_monitor",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor_status = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor_status = await self.performance_monitor.get_current_status()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 100,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 151,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "applied_optimizations = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_record = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 210,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.optimization_history = self.optimization_history[-100:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_history = self.optimization_history[-100:]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 269,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = await self.analyze_performance_trends(current_metrics)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 295,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 296,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_task = asyncio.create_task(self.monitoring_loop())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 305,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\continuous_optimization_monitor.py",
      "line": 374,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = ContinuousOptimizationMonitor(project_root)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deploy_modular_components.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "scripts\\deploy_modular_components.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "workflow_components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deploy_modular_components.py",
      "line": 111,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "discord_components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deploy_modular_components.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cli_content = '''#!/usr/bin/env python3",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deploy_modular_components.py",
      "line": 152,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.components = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"performance_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_status = component.get_status()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_status = component.get_optimization_stats()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 133,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_status = {\"status\": \"initialized\"}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"performance_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 215,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"performance_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 217,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"performance_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\deployment_dashboard.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.components = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"lightweight_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_status = component.get_current_status()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_status = {\"status\": \"initialized\"}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"lightweight_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 144,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"lightweight_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 160,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"lightweight_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = self.components[\"lightweight_monitor\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\lightweight_deployment_dashboard.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\remove_duplicate_discord_files.py",
      "line": 30,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.backup_dir = self.project_root / \"backups\" / \"discord_duplicates\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "scripts\\remove_duplicate_discord_files.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ui_components_path = self.project_root / \"src/services/discord_ui.py\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\remove_duplicate_discord_files.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contents = list(dir_path.glob(\"*\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\security_integration.py",
      "line": 239,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = self._generate_recommendations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "scripts\\security_integration.py",
      "line": 291,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\__init__.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "analytics\\__init__.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "analytics\\__init__.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\__init__.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"Agent-1\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "analytics\\__init__.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__description__ = \"Automated Agent Efficiency Scoring System\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "analytics\\__init__.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__description__ = \"Automated Agent Efficiency Scoring System\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\agent_metrics.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "complexity_avg: float | None = None  # from radon or similar, lower is better",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\agent_metrics.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "review_findings: int | None = 0  # PR comments marked must-fix",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\agent_metrics.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "window_start: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\agent_metrics.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "window_end: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\agent_metrics.py",
      "line": 108,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "DEFAULT_WEIGHTS = Weights()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "analytics\\agent_metrics.py",
      "line": 122,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "on_time_rate = clamp(safe_div(s.tasks_on_time, max(1, s.tasks_completed)))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\agent_metrics.py",
      "line": 147,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "on_time=on_time_rate,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_engine.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time=response_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_engine.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=active_connections,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_engine.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_prediction = self.predict_response_time(time_horizon)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_engine.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time=data[\"response_time\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_engine.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=data[\"active_connections\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\score_window.py",
      "line": 18,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def score_window(window_dir: str, weights: dict[str, float] | None = None) -> dict[str, Any]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\window_loader.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tasks_on_time=data.get(\"tasks_on_time\", 0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 44,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.metrics_history = self.metrics_history[-1000:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = self._calculate_confidence(cpu_values)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=self._generate_cpu_recommendations(predicted_value),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = self._calculate_confidence(memory_values)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=self._generate_memory_recommendations(predicted_value),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_values = [m.response_time for m in recent_metrics]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = self._calculate_confidence(response_values)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=self._generate_response_time_recommendations(predicted_value),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 153,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_values = [m.response_time for m in recent_metrics]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_anomaly = self._check_metric_anomaly(\"response_time\", response_values)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 182,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "utilization_percentage = (predicted_usage / capacity_limit) * 100",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "utilization_percentage=utilization_percentage,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[\"Start collecting metrics\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 231,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = self._generate_health_recommendations(health_score, issues)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 237,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 249,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "utilization_trend=\"stable\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "utilization_trend=\"stable\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 274,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "utilization_trend = self._determine_trend(values)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 282,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "utilization_trend=utilization_trend,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 333,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = max(0.0, min(1.0, 1.0 - cv))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 404,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 408,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[\"Collect more data for accurate predictions\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 418,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "utilization_percentage=50.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 469,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_values = [m.response_time for m in metrics]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 471,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avg_response = statistics.mean(response_values)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 472,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_score = max(0.0, 1.0 - (avg_response / 1000.0))  # Assume 1000ms is bad",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 495,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_values = [m.response_time for m in metrics]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\predictive_core.py",
      "line": 503,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "analytics\\signals\\__init__.py",
      "line": 10,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"collect\", \"parse_pytest_summary\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "analytics\\signals\\collect_ci_signals.py",
      "line": 26,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "d = {k: int(v) for k, v in m.groupdict().items()}",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "analytics\\signals\\collect_ci_signals.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "extra: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\__init__.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={\"files_analyzed\": 603, \"compliance_rate\": 0.864},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\__init__.py",
      "line": 47,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\__init__.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\__init__.py",
      "line": 48,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\canon.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_preview = content[:1000] + \"...\" if len(content) > 1000 else content",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\cli.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\config.py",
      "line": 46,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "CONFIG = BrainConfig()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\db.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\db.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "SCHEMA_SQL = (Path(__file__).parent / \"schema.sql\").read_text()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\db.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, path: Path | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\db.py",
      "line": 34,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "self.with sqlite3.connect(self.path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "swarm_brain\\db.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "title=?, summary=?, tags=?, meta=?, canonical=? WHERE id=?\"\"\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\db.py",
      "line": 150,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conditions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "_ingestor = Ingestor()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {\"args\": str(args), \"kwargs\": str(kwargs)}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "duration_ms = int((time.time() - start_time) * 1000)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "duration_ms=duration_ms,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_pattern=execution_pattern,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations=optimizations or {},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 260,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_type=coordination_type,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 262,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_data=coordination_data,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\decorators.py",
      "line": 300,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations=optimizations or [],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, brain: SwarmBrain | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical = canonical_action(title, outcome, tool, context, summary, tags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical=canonical,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical = canonical_protocol(title, steps, effectiveness, improvements, summary, tags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical=canonical,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical = canonical_workflow(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical=canonical,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 219,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical = canonical_performance(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical=canonical,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 268,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical = canonical_conversation(title, channel, role, content, summary, tags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 277,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical=canonical,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 310,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical = canonical_coordination(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 321,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical=canonical,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 359,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical = canonical_tool(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\ingest.py",
      "line": 370,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "canonical=canonical,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\paths.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\paths.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_age_seconds = max_age_days * 24 * 60 * 60",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\retriever.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\retriever.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, brain: SwarmBrain | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\retriever.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conditions = [\"d.id IN ({})\".format(\",\".join([\"?\"] * len(doc_ids)))]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\retriever.py",
      "line": 180,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "successful_actions = self.search(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\retriever.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_row = self.brain.conn.execute(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\embeddings\\__init__.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"EmbeddingsBackend\", \"NumpyBackend\", \"FaissBackend\", \"OpenAIBackend\", \"ChromaBackend\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\embeddings\\numpy_backend.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\connectors\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"ingest_scan\", \"ingest_devlog\", \"ingest_discord\", \"ingest_performance\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\connectors\\devlogs.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\connectors\\devlogs.py",
      "line": 22,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "thread_id: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\devlogs.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=text,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\devlogs.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={\"content_length\": len(text), \"channel\": channel},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=message,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_type=\"discord\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_data={\"message\": message, \"thread_id\": thread_id},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {\"command\": command, \"args\": args, \"result\": result}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_type=f\"discord_{coordination_type}\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\discord.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_data=coordination_data,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations = optimizations or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time = metrics.get(\"response_time\", 0.0)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations=optimizations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations={optimization_type: {\"improvement\": improvement_percentage}},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "healthy_components = sum(1 for status in components.values() if status == \"healthy\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_components = len(components)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\performance.py",
      "line": 214,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations={},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = compliance_data.get(\"violations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "refactoring_suggestions = result.get(\"refactoring\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimizations=[\"batch_processing\", \"parallel_analysis\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "swarm_brain\\connectors\\project_scanner.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\V2_STANDALONE_DEMO.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions_group = QGroupBox(\"‚ö° Quick Actions\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\V2_STANDALONE_DEMO.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\tesla_stock_app.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"main\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_core.py",
      "line": 39,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.market_data = self.market_data[-1000:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.positions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "buy_positions = [p for p in self.positions if p[\"action\"] == \"buy\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 121,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.long_period = 30",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 134,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.price_history = self.price_history[-self.long_period * 2 :]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "long_ma = np.mean(self.price_history[-self.long_period :])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "prev_long_ma = np.mean(self.price_history[-self.long_period - 1 : -1])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 200,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.price_history = self.price_history[-self.rsi_period * 3 :]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 255,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.price_history = self.price_history[-self.period * 2 :]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 294,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.price_history = self.price_history[-self.lookback_period * 2 :]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\trading_robot_strategies.py",
      "line": 397,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "strategy.positions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_strategies.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.long_window = long_window",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_strategies.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "long_ma = np.mean(prices)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\trading_robot.py",
      "line": 11,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tsla_forecast_app\\modules\\__init__.py",
      "line": 32,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tsla_forecast_app\\modules\\data_worker.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.api_keys = self._load_api_keys()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\data_worker.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\data_worker.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\data_worker.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = requests.get(url, params=params, timeout=10)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "control_group = QGroupBox(\"Flag Controls\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "control_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.consensus_button = QPushButton(\"ü§ù Show Consensus\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus_group = QGroupBox(\"Consensus Analysis\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus_layout = QVBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.consensus_label = QLabel(\"No consensus available\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.consensus_details = QTextEdit()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence_item = QTableWidgetItem(f\"{flag.confidence:.1%}\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 205,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning_item = QTableWidgetItem(flag.reasoning)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 259,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus_flag = self.flag_engine.get_consensus_flag(active_flags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\flag_display.py",
      "line": 263,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus_text = f\"Consensus: {consensus_flag.flag_type.value.replace('_', ' ').title()} - {consensus_flag.confidence:.1%} Confidence\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\main_app.py",
      "line": 213,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "font = QFont(\"Segoe UI\", 9)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 87,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_preferences = self._initialize_agent_preferences()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = self._calculate_confidence(agent_prefs, market_analysis)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning = self._generate_reasoning(agent_prefs, market_analysis, flag_type)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 213,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 214,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning=reasoning,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 286,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "base_confidence = 0.7",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 324,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning_parts = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 389,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus_type = max(flag_counts, key=flag_counts.get)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 392,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avg_confidence = sum(flag.confidence for flag in flags) / len(flags)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 396,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning = f\"Consensus from {len(flags)} agents: {consensus_type.value.upper()} signal with {avg_confidence:.1%} confidence\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 399,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus_flag = TradingFlag(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 405,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=avg_confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\trading_flags.py",
      "line": 406,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "reasoning=reasoning,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "button_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components.py",
      "line": 153,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "control_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components.py",
      "line": 182,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = random.uniform(70, 95)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "control_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\v2_trading_interface.py",
      "line": 158,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.mobile_view = self.create_mobile_view()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\v2_trading_interface.py",
      "line": 181,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.connection_status = self.status_bar.addWidget(\"‚óè Disconnected\")",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\v2_trading_interface.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection_status = self.status_bar.addWidget(\"‚óè Disconnected\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\v2_trading_interface.py",
      "line": 182,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.data_status = self.status_bar.addWidget(\"Data: None\")",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\v2_trading_interface.py",
      "line": 183,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.last_update = self.status_bar.addWidget(\"Last Update: Never\")",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\__init__.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\chart_display.py",
      "line": 182,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controls_group = QGroupBox(\"Chart Controls\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\chart_display.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controls_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.prediction_label = QLabel(\"Prediction: Analyzing...\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.confidence_label = QLabel(\"Confidence: 0%\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.horizon_label = QLabel(\"Time Horizon: 1 day\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence_group = QGroupBox(\"Confidence Level\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence_layout = QVBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.confidence_bar = QProgressBar()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = forecast_data.get(\"confidence\", 0)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\forecast_display.py",
      "line": 212,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = agent_pred.get(\"confidence\", 0)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\log_display.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controls_group = QGroupBox(\"Log Controls\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\log_display.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controls_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 45,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.mobile_widget = self.create_mobile_layout()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 46,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.tablet_widget = self.create_tablet_layout()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 47,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.desktop_widget = self.create_desktop_layout()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "mobile_content = QWidget()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "mobile_content_layout = QVBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.mobile_components = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = QFrame()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.tablet_components = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "positions = [(0, 0), (0, 1), (1, 0), (1, 1)]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\responsive_layout.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = QFrame()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\settings_display.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.notifications_checkbox = QCheckBox(\"Enable Notifications\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\settings_display.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "buttons_frame = QFrame()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\settings_display.py",
      "line": 199,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "buttons_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui_components\\stock_display.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def update_status(self, status, connected=True):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\__init__.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\chart_widget.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controls_group = QGroupBox(\"üìä Chart Controls\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\chart_widget.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controls_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.responsive_elements = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.content_group = QGroupBox()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
      "line": 197,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_layout = QGridLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\mobile_responsive.py",
      "line": 222,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "button_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\trading_dashboard.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions_group = QGroupBox(\"‚ö° Quick Actions\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "tsla_forecast_app\\modules\\ui\\trading_dashboard.py",
      "line": 130,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions_layout = QHBoxLayout()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\__init__.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "migration_system\\backup\\backup_manager.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "migration_system\\core\\migration_controller.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "migration_system\\core\\migration_controller.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.integration_tester = IntegrationTester(self.db_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\core\\migration_controller.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "migration_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\core\\migration_controller.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.data_validator.validate_existing_data()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\core\\migration_controller.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "migration_result = self.data_migrator.migrate_data()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\core\\migration_controller.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.data_validator.validate_migration()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\data\\data_migrator.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "migration_system\\data\\data_migrator.py",
      "line": 28,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "migration_system\\data\\data_migrator.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "migration_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\data\\data_migrator.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_result = self._migrate_configuration(cursor)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\schema\\schema_manager.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "migration_system\\schema\\schema_manager.py",
      "line": 27,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "migration_system\\validation\\data_validator.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "migration_system\\validation\\data_validator.py",
      "line": 30,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "migration_system\\validation\\data_validator.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\validation\\data_validator.py",
      "line": 69,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "migration_system\\validation\\data_validator.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "migration_system\\validation\\data_validator.py",
      "line": 125,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "migration_system\\validation\\data_validator.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "fk_violations = cursor.fetchall()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_auth\\cookie_manager.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "thea_auth\\login_handler.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "thea_auth\\login_handler.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "username: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_auth\\login_handler.py",
      "line": 249,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "continue_button = driver.find_element(By.XPATH, \"//button[@type='submit']\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_auth\\__init__.py",
      "line": 12,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "thea_communication\\__init__.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.driver: webdriver.Chrome | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.detector: ResponseDetector | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "options = uc.ChromeOptions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.driver = uc.Chrome(options=options)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "chrome_options = Options()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.driver = webdriver.Chrome(service=service, options=chrome_options)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"[contenteditable='true']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "auto_continue=True,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\automation\\selenium_handler.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_continue_clicks=1,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\core\\communication_service.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.responses_dir = Path(\"thea_responses\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\core\\communication_service.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_handler = ResponseHandler()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\core\\communication_service.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_ready = self.wait_for_thea_response()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\response\\response_handler.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.responses_dir = Path(\"thea_responses\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\response\\response_handler.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_text = self._extract_response_text(driver)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\response\\response_handler.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_elements = driver.find_elements(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\response\\response_handler.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation = driver.find_element(By.CSS_SELECTOR, \"[data-testid='conversation']\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "thea_communication\\response\\response_handler.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "analysis_content = f\"\"\"# Thea Conversation Log",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "web_dashboard\\api.py",
      "line": 4,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "app = Flask(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "web_dashboard\\websocket.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "web_dashboard\\websocket.py",
      "line": 31,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "self.connected_clients: set = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "web_dashboard\\websocket.py",
      "line": 271,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "uptime_seconds = int(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "web_dashboard\\websocket.py",
      "line": 275,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "minutes, seconds = divmod(remainder, 60)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "web_dashboard\\websocket.py",
      "line": 286,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "disconnected_clients = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "web_dashboard\\websocket.py",
      "line": 322,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "websocket_server = DashboardWebSocketServer()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\commandresult.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...     execution_time=0.234,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...     execution_time=5.123,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...             execution_time=0.045,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...             execution_time=0.012,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...         execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 100,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...             execution_time=execution_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...             execution_time=time.time() - start_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...     execution_time=0.234,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 167,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "...     execution_time=15.678,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "data: Any | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 180,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\commandresult.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\__init__.py",
      "line": 6,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\__init__.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\coherent_collaboration_cli.py",
      "line": 194,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = registry_manager.get_component(args.component_name)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coherent_collaboration_cli.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = register_component(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coherent_collaboration_cli.py",
      "line": 218,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = registry.components",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coherent_collaboration_cli.py",
      "line": 221,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = {k: v for k, v in components.items() if v.owner == args.owner}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coherent_collaboration_cli.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name=args.component_name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coherent_collaboration_cli.py",
      "line": 255,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=args.context or \"\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coherent_collaboration_cli.py",
      "line": 282,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "requester=args.requester, component_name=args.component_name, code_snippet=code",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coordinate_loader.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_path = config_path",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\coordinate_loader.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.coordinates = self._load_coordinates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 37,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_windows = self.platform == \"Windows\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 55,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection.execute(\"PRAGMA synchronous=NORMAL\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 64,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(str(self.db_path)) as connection:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection.execute(\"PRAGMA synchronous=NORMAL\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 152,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_windows = self.platform == \"Windows\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 192,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "db_manager = CrossPlatformDatabase()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\cross_platform_database.py",
      "line": 193,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "file_manager = CrossPlatformFileManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 29,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_windows = self.platform == \"Windows\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 30,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_linux = self.platform == \"Linux\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 31,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_macos = self.platform == \"Darwin\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def get_env_var(self, name: str, default: str | None = None) -> str | None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 192,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "env_manager = CrossPlatformEnvironment()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\cross_platform_env.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def get_env_var(name: str, default: str | None = None) -> str | None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 27,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_windows = self.platform == \"Windows\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 28,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_linux = self.platform == \"Linux\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 29,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.is_macos = self.platform == \"Darwin\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_dir = self.get_home_dir() / \"AppData\" / \"Roaming\" / \"AgentCellphoneV2\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_dir = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_dir = self.get_home_dir() / \".config\" / \"agent-cellphone-v2\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\cross_platform_paths.py",
      "line": 206,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "path_manager = CrossPlatformPaths()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 51,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.knowledge_base = self._load_knowledge_base()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name=component_name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 159,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 168,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = self._analyze_plan(plan)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = self._generate_recommendations(plan)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_violations = [v for v in violations if v[\"severity\"] == DecisionSeverity.ERROR]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name=component_name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name=component_name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=\"\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 240,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 274,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 305,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_lines = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 317,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_lines = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 397,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\design_authority.py",
      "line": 428,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "design_authority = DesignAuthority()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\knowledge_base.py",
      "line": 96,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "knowledge_base = SharedKnowledgeBase()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 74,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.design_principles = self._load_design_principles()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 75,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.code_patterns = self._load_code_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 76,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.anti_patterns = self._load_anti_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 77,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.project_guidelines = self._load_project_guidelines()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rationale=\"Simple code is easier to understand, debug, and maintain.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rationale=\"Building unused features wastes time and adds complexity.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rationale=\"Components with single responsibilities are easier to understand, test, and modify.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 148,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rationale=\"Consistent error handling makes debugging easier and improves user experience.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rationale=\"Early error detection makes debugging easier and prevents cascading failures.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rationale=\"Composition is more flexible and less brittle than inheritance.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 258,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_manifestations=[",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 273,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_manifestations=[",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 288,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_manifestations=[\"except: pass\", \"except: continue\", \"except: return None\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 299,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_manifestations=[\"if status == 'active'\", \"return 'success'\", \"Magic strings\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 310,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_manifestations=[",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 397,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 401,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "found_violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_core.py",
      "line": 422,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_manager.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, core: KnowledgeBaseCore | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_manager.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rationale=principle_data[\"rationale\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_manager.py",
      "line": 229,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_manifestations=anti_pattern_data[\"common_manifestations\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_retriever.py",
      "line": 19,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, core: KnowledgeBaseCore | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_retriever.py",
      "line": 194,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\knowledge_base_retriever.py",
      "line": 213,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "unique_suggestions = list(set(suggestions))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._registry: ProjectRegistry | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components=components,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components={},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 199,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = Component(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = registry.components[name]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 248,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 249,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\project_registry.py",
      "line": 313,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "registry_manager = ProjectRegistryManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error: Exception, operation: str, context: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_context = f\"Database operation: {operation}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_context = f\"Network request: {method} {endpoint}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error: Exception, operation: str, file_path: str, context: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_context = f\"File operation: {operation} on {file_path}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error: Exception, field_name: str, value: Any, context: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_context = f\"Validation error for field: {field_name}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error: Exception, context: str, additional_info: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_error_handling.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def log_and_raise(error: Exception, context: str, custom_message: str | None = None) -> None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_logging.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "_configured = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_logging.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "log_file: Path | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_logging.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "format_string: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_logging.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cls._configured = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_logging.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "args: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_logging.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "additional_info: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_logging.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "additional_metrics: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_validation.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\shared_validation.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "value: str, field_name: str, min_length: int = 1, max_length: int | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_validation.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\shared_validation.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\swarm_action_protocol.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.action_required = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\swarm_action_protocol.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.force_action_threshold = 2",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\swarm_action_protocol.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = msg.get(\"content\", \"\").lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\swarm_action_protocol.py",
      "line": 105,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "SWARM_ACTION_PROTOCOL = SwarmActionProtocol()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.primary_config_path = Path(primary_config_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.backup_config_path = Path(backup_config_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_config: CoordinateConfig | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_config = CoordinateConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_config = CoordinateConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_config = CoordinateConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 222,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_config = CoordinateConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 248,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor=\"primary\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 263,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor=\"primary\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 281,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor=\"primary\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 313,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_data = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_coordinate_loader.py",
      "line": 356,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "missing_descriptions = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_features: np.ndarray | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_labels: np.ndarray | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "test_features: np.ndarray | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "test_labels: np.ndarray | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 195,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_model: ModelConfig | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 294,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def save_model(self, filepath: str | None = None) -> bool:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 329,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_data = model_data.get(\"config\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\unified_ml_pipeline.py",
      "line": 393,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_data = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_protocol.py",
      "line": 10,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "pr_review_protocol = PRReviewProtocol()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\vibe_check_patterns.py",
      "line": 14,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_patterns.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"duplication\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_patterns.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_patterns.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_lower = content.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_patterns.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=f\"anti_pattern_{pattern_name}\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_protocol_refactored.py",
      "line": 10,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "pr_review_protocol = PRReviewProtocol()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 15,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.violation_thresholds = violation_thresholds",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 19,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"high_complexity\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"long_function\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"deep_nesting\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"too_many_parameters\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_analyzers.py",
      "line": 122,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"long_file\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.violation_thresholds = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"syntax_error\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_violations = [v for v in violations if v.severity == DecisionSeverity.ERROR]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "warning_violations = [v for v in violations if v.severity == DecisionSeverity.WARNING]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=[",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 111,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=\"analysis_error\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "all_violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_violations = [v for v in all_violations if v.severity == DecisionSeverity.ERROR]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "warning_violations = [v for v in all_violations if v.severity == DecisionSeverity.WARNING]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=all_violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 168,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "all_violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_violations = [v for v in all_violations if v.severity == DecisionSeverity.ERROR]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=all_violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_core.py",
      "line": 201,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type = violation.violation_type",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 34,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.pull_requests, self.review_history = self.storage_manager.load_existing_prs()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 121,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations_found = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 122,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 136,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = self._generate_suggestions(pr, violations_found)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "critical_violations = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 160,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations_found=violations_found,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions=suggestions,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations_found=[],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions=[],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 186,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 286,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_counts = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_core.py",
      "line": 290,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type = violation.split(\":\")[0] if \":\" in violation else violation",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 18,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=[],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name=Path(change.file_path).stem,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=f\"PR: {pr.title}\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = change.new_content.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\pr_review_validators.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "all_violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_violations = [v for v in all_violations if v.severity == DecisionSeverity.ERROR]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "warning_violations = [v for v in all_violations if v.severity == DecisionSeverity.WARNING]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=all_violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_refactored.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "all_violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_refactored.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_violations = [v for v in all_violations if v.severity == DecisionSeverity.ERROR]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_refactored.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "warning_violations = [v for v in all_violations if v.severity == DecisionSeverity.WARNING]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\vibe_check_refactored.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=all_violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_path = Path(config_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config: SSOTConfig | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = SSOTConfig(**data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = SSOTConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = SSOTConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "required_sections = [\"agents\", \"system\", \"messaging\", \"quality_gates\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = SSOTConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 215,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = SSOTConfig(**data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\ssot_manager.py",
      "line": 222,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "_ssot_manager: SSOTManager | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\backup_recovery_system.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\backup_recovery_system.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "parent_backup_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\backup_recovery_system.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.backup_config = backup_config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\backup_recovery_system.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.recovery_config = recovery_config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conflict_resolution: ConflictResolutionStrategy = ConflictResolutionStrategy.LAST_WRITE_WINS",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_sync: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await self._test_connection(node)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 222,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conflict = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conflict = c",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 232,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if self.config.conflict_resolution == ConflictResolutionStrategy.MANUAL_RESOLUTION:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 285,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await asyncpg.connect(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\data_replication_system.py",
      "line": 353,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await self._test_connection(node)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system.py",
      "line": 131,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.metrics = self.metrics[-1000:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system.py",
      "line": 135,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.health_checks = self.health_checks[-500:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system_v2.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system_v2.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system_v2.py",
      "line": 131,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.metrics = self.metrics[-1000:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\database\\database_monitoring_system_v2.py",
      "line": 135,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.health_checks = self.health_checks[-500:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "data: Any | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "affected_rows: int | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "postgres_config = DatabaseConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "redis_config = DatabaseConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.configs = {\"postgres\": postgres_config, \"redis\": redis_config}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 120,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_factory = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection_pool = redis.ConnectionPool.from_url(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "redis_url, max_connections=config.pool_size, retry_on_timeout=True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connections[name] = redis.Redis(connection_pool=connection_pool)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 156,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = self.configs.get(db_name)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = (datetime.utcnow() - start_time).total_seconds()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "result.execution_time = execution_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 175,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = (datetime.utcnow() - start_time).total_seconds()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "return QueryResult(success=False, error=str(e), execution_time=execution_time)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\distributed_db_manager.py",
      "line": 182,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_factory = self.sessions.get(db_name)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\monitoring\\alert_manager.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await self._get_database_connection(node_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time = (datetime.now() - start_time).total_seconds() * 1000",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=response_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connectivity_check = await self.perform_health_check(node_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "responsiveness_check = await self._check_database_responsiveness(node_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await asyncpg.connect(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await self._get_database_connection(node_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 148,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time = (datetime.now() - start_time).total_seconds() * 1000",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=response_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 186,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 192,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await self._get_database_connection(node_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 199,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 223,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 237,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 243,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await self._get_database_connection(node_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 250,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 273,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\health_checker.py",
      "line": 287,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\metrics_collector.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\database\\monitoring\\metrics_collector.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await self._get_database_connection(node_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\metrics_collector.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connection = await asyncpg.connect(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\database\\monitoring\\metrics_collector.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conn_count = await connection.fetchval(\"SELECT count(*) FROM pg_stat_activity\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 20,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "exp: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "iat: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.permissions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 36,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.exp = self.iat + timedelta(hours=1)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permissions=permissions or [],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "payload = jwt.decode(token, options={\"verify_signature\": False})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permissions = self.extract_permissions(token)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\jwt_manager.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permissions=permissions or [\"read\", \"write\", \"coordinate\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\oauth2_provider.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.encryption_key = os.getenv(\"ENCRYPTION_KEY\", Fernet.generate_key().decode())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_cli.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_info = security_manager.validate_session(token)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_cli.py",
      "line": 236,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_cli.py",
      "line": 239,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "real_violations = static_result[\"results\"][\"real_violations\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_manager.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_timeout=3600,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_manager.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_timeout=7200,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_manager.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_timeout=1800,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_manager.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if datetime.utcnow() < lockout_time + timedelta(seconds=policy.lockout_duration):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_manager.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_info = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\security\\security_manager.py",
      "line": 209,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_info = self.active_sessions[token]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "resolution_notes: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context or {},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context or {},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error.resolution_notes = resolution_notes",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 365,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error=error, severity=severity, category=category, context=context",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 377,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "db_context = context or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 383,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=db_context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 392,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "network_context = context or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 398,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=network_context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 407,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "auth_context = context or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\error_tracker.py",
      "line": 413,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=auth_context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\jaeger_tracer.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\jaeger_tracer.py",
      "line": 243,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = TraceConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\jaeger_tracer.py",
      "line": 246,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "environment=os.getenv(\"ENVIRONMENT\", \"dev\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\jaeger_tracer.py",
      "line": 271,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "trace_manager = TraceManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.collection_interval = collection_interval",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._monitor_thread = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._monitoring = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 75,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self._monitor_thread = threading.Thread(target=self._monitor_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._monitor_thread = threading.Thread(target=self._monitor_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 120,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connections = len(psutil.net_connections())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=connections,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 308,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitor = monitor",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\performance_monitor.py",
      "line": 75,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_monitoring",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\core\\tracing\\request_tracker.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "duration: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\request_tracker.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\request_tracker.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "trace_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\request_tracker.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "span_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\tracing\\request_tracker.py",
      "line": 228,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "durations = [r.duration for r in self.completed_requests if r.duration is not None]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_dir = Path(config_dir)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 61,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.config_file = self.config_dir / config_file",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_file = self.config_dir / config_file",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._last_modified: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._config = yaml.safe_load(f) or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._config = json.load(f) or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._config = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 100,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self._config = self._get_default_config()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 100,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._config = self._get_default_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 120,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "converted_value = self._convert_env_value(value, section, key)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 159,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self._config = self._get_default_config()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 159,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._config = self._get_default_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 216,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = self._config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 221,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = config[k]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 260,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "config_manager = UnifiedConfigManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\config\\unified_config_manager.py",
      "line": 260,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_manager = UnifiedConfigManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "scheduled_for: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_error: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 93,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "worker = threading.Thread(",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "task.execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 190,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "task.execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "task.scheduled_for = datetime.now() + timedelta(seconds=2**task.retries)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 269,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "scheduler = PriorityScheduler()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\task\\priority_scheduler.py",
      "line": 93,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function _start_workers",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\core\\prompts\\aletheia_manager.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\prompts\\aletheia_manager.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, template_name: str, context: dict[str, Any], memory_key: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\prompts\\aletheia_manager.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "prompt_context = context.copy()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\prompts\\aletheia_manager.py",
      "line": 231,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def clear_memory(self, key: str | None = None) -> None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\prompts\\aletheia_manager.py",
      "line": 254,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "prompt_manager = AletheiaPromptManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\prompts\\aletheia_manager.py",
      "line": 258,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "template_name: str, context: dict[str, Any], memory_key: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\prompts\\aletheia_manager.py",
      "line": 299,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def clear_memory(key: str | None = None) -> None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 53,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "json_data = json.dumps(data).encode(\"utf-8\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "json_data = zlib.decompress(data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "json_data = data",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 119,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 159,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 212,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 237,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 246,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def list_keys(self, pattern: str | None = None) -> list[str]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 249,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 265,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 299,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 317,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(self.db_path) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 334,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "persistent_memory = PersistentMemoryManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\core\\memory\\persistent_memory.py",
      "line": 357,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def list_memory_keys(pattern: str | None = None) -> list[str]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 34,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, bot_token: str | None = None, channel_id: int | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 49,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_channels = self._load_agent_channels()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "details: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "devlog_content = self._format_devlog_content(agent_id, action, status, details)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, agent_id: str, action: str, status: str, details: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"\"\"# {action}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 168,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, devlog_filepath: str, agent_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 192,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sections = content.split(\"\\n## \")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 207,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "section_content = f\"## {section}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 239,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "details: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 266,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "details: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 288,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "details: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 301,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "details: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_devlog_service.py",
      "line": 311,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id: str, action: str, status: str = \"completed\", details: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog_automation.py",
      "line": 36,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\agent_devlog_automation.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "details: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot_integrated.py",
      "line": 40,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot_integrated.py",
      "line": 96,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.token = self.config.get_bot_token()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_bot_integrated.py",
      "line": 97,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.channel_id = self.config.get_channel_id()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_bot_integrated.py",
      "line": 98,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.guild_id = self.config.get_guild_id()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_bot_integrated.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog_posting.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "parent_dir = Path(__file__).parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\agent_devlog_posting.py",
      "line": 53,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"AgentDevlogPoster\", \"AgentDevlogCLI\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def list_prompts(self, category: str | None = None) -> list[dict]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimized_content = self._apply_optimizations(content, context)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 150,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_id=f\"opt_{int(time.time())}\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_type=\"context_aware\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version_data = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 296,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.encryption_key = self._generate_key()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 296,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.encryption_key = self._generate_key()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 340,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.version_control = PromptVersionControl()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 355,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = self.security.encrypt_content(content)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 398,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = prompt[\"content\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 399,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimized_content = self.optimizer.optimize_prompt(prompt_id, content, context)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 415,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def list_prompts(self, category: str | None = None) -> list[dict]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\aletheia_prompt_manager.py",
      "line": 437,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {\"urgency\": \"high\", \"precision\": \"high\"}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\coordinate_manager.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_analytics_api.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_analytics_api.py",
      "line": 182,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "agents = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_analytics_api.py",
      "line": 268,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "agents = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_analytics_api.py",
      "line": 333,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"agents\": set(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_analytics_api.py",
      "line": 402,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = Response(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_analytics_api.py",
      "line": 418,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = Response(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_analytics_api.py",
      "line": 428,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = Response(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 59,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.style_config = self._load_style_parameters()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.style_config = self._load_style_parameters()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_lower = devlog.content.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "story_content = self._write_story_content(devlogs, analysis)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "character_progressions = self._analyze_character_progressions(analysis)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 205,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "story_content=story_content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "character_progressions=character_progressions,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 208,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conflicts_resolved=analysis[\"conflicts\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling_service.py",
      "line": 282,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_lower = devlog.content.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_line_emitter.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "username: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_line_emitter.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avatar_url: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_line_emitter.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "extra_embeds: list | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "expires_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "started_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completed_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "result_data: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ip_address: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "user_agent: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 297,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, agent_id: str, status: GitHubOperationStatus = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 300,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = [op for op in self.operations.values() if op.agent_id == agent_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 303,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = [op for op in operations if op.status == status]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 367,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id=\"\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 456,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permission_level=GitHubPermissionLevel.ADMIN,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 468,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id=\"op_001\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_models.py",
      "line": 470,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_type=GitHubOperationType.CREATE_REPOSITORY,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.controller = GitHubAgentController(github_token)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "default_config = GitHubRepositoryConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permission_level=permission_level,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id = f\"create_repo_{datetime.utcnow().strftime('%Y%m%d_%H%M%S')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id=operation_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_type=GitHubOperationType.CREATE_REPOSITORY,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = GitHubRepositoryConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 171,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id = f\"create_issue_{datetime.utcnow().strftime('%Y%m%d_%H%M%S')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 180,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id=operation_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 182,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_type=GitHubOperationType.CREATE_ISSUE,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 228,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id = f\"create_pr_{datetime.utcnow().strftime('%Y%m%d_%H%M%S')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 237,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id=operation_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 239,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_type=GitHubOperationType.CREATE_PULL_REQUEST,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 287,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id = f\"create_file_{datetime.utcnow().strftime('%Y%m%d_%H%M%S')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 296,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id=operation_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 298,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_type=GitHubOperationType.CREATE_FILE,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 339,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id = f\"create_branch_{datetime.utcnow().strftime('%Y%m%d_%H%M%S')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 348,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id=operation_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 350,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_type=GitHubOperationType.CREATE_BRANCH,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 386,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, agent_id: str, status: GitHubOperationStatus = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 414,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "template_content=template_content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\github_protocol_service.py",
      "line": 475,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = service.get_agent_operations(\"Agent-1\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.session_id = str(uuid.uuid4())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id=self.session_id, participants=[\"Agent-1\", \"Agent-2\", \"Agent-3\", \"Agent-4\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id=self.session_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "json_persistence = SessionPersistence(storage_type=\"json\", storage_path=\"json_sessions\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "json_session = json_persistence.create_session(\"json-demo\", [\"Agent-1\", \"Agent-2\"])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"This is an old message\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_demo.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id=\"old-session\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 62,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.sessions_file = self.storage_path / \"sessions.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.sessions_file = self.storage_path / \"sessions.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 63,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.messages_file = self.storage_path / \"messages.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 73,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.db_file = self.storage_path / \"sessions.db\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 74,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "with sqlite3.connect(str(self.db_file)) as conn:",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 105,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "self.conn = sqlite3.connect(str(self.db_file))",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conn = sqlite3.connect(str(self.db_file))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 111,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.sessions = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id=session_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sessions_data = self.load_json_data(self.sessions_file)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sessions_data = self.load_json_data(self.sessions_file)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 177,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_data = sessions_data.get(session_id)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "FROM sessions WHERE session_id = ?",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 195,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id=row[0],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 266,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_messages = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 276,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "FROM messages WHERE session_id = ?",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 287,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id=row[1],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 290,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=row[4],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 298,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_messages = [msg for msg in self.messages if msg.session_id == session_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 314,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sessions_data = self.load_json_data(self.sessions_file)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 318,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "old_sessions = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\multichat_session_persistence.py",
      "line": 337,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.sessions = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_accessed: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, category: str | None = None, memory_type: MemoryType | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 168,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = str(memory_data.get(\"content\", \"\")).lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = str(memory_data.get(\"content\", \"\")).lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 211,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_words = content.split()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = metadata.get(\"confidence\", 1.0)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 252,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, memory_id: str, categories: list[str], hierarchy: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 290,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.compression_threshold = 1000  # Compress memories larger than 1000 chars",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 328,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.encryption_key = self._generate_key()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 328,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.encryption_key = self._generate_key()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 386,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_str = str(content)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 393,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "compressed_content = self.security.encrypt_content(compressed_content)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 427,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = memory.get(\"content\", \"\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 430,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = self.compression.decompress_memory(content, True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 442,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 452,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, category: str | None = None, memory_type: MemoryType | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\persistent_memory.py",
      "line": 469,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=0.9,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\secret_store.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "DEFAULT_DIR = Path(os.getenv(\"V2_SWARM_SECRETS_DIR\", r\"C:\\ProgramData\\V2_SWARM\"))",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\secret_store.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "SECRET_FILE = DEFAULT_DIR / \"webhooks.json\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\service_manager.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\service_manager.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.messaging_service: ConsolidatedMessagingService | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\service_manager.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.discord_bot: EnhancedDiscordAgentBot | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\service_manager.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.devlog_automation: AgentDevlogAutomation | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\service_manager.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.devlog_posting: AgentDevlogPosting | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\service_manager.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\service_manager.py",
      "line": 298,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "_service_manager = None",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\social_media_integration.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\social_media_integration.py",
      "line": 131,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "_social_media_service = None",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "resolution: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "resolved_at: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_deadline: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_configs = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 144,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_weight=config[\"weight\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_metrics={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 175,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision_id = f\"DECISION_{datetime.now().strftime('%Y%m%d_%H%M%S')}_{agent_id}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision_id=decision_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision_type=decision_type,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=f\"New decision proposal: {decision.title} - {decision.description}\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "requires_response=True,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 207,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_deadline=datetime.now().isoformat(),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 259,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consensus_ratio = weighted_yes / total_weight",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 265,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision.confidence_score = consensus_ratio",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 273,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "decision.confidence_score = 1.0 - consensus_ratio",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\swarm_intelligence_coordination.py",
      "line": 393,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_dir = Path(\"swarm_coordination\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_time: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.actions_completed = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.next_actions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "current_task: V3Task | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_protocols = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 126,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions_completed=current_task_data.get(\"actions_completed\", []),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "next_actions=current_task_data.get(\"next_actions\", []),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\v3_autonomous_workflow_system.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_protocols = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\enhanced_onboarding.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\enhanced_onboarding.py",
      "line": 36,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.coordinates = self._load_coordinates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\enhanced_onboarding.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_message = f\"\"\"ü§ñ AGENT ONBOARDING PROTOCOL - {agent_id}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\enhanced_onboarding.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_coords = agent_coords.get(\"onboarding_coordinates\", [0, 0])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\enhanced_onboarding.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_message = self.create_onboarding_message(agent_id, role_assignment)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\soft_onboarding.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\soft_onboarding.py",
      "line": 36,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.coordinates = self._load_coordinates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\soft_onboarding.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_message = f\"\"\"ü§ñ SOFT ONBOARDING PROTOCOL - {agent_id}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\soft_onboarding.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_coords = agent_coords.get(\"onboarding_coordinates\", [0, 0])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\soft_onboarding.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_message = self.create_soft_onboarding_message(agent_id, role_assignment)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_core.py",
      "line": 51,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_core.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.responded = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_core.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_requests = coordination_requests",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_core.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = {\"overdue\": [], \"unacknowledged\": [], \"incomplete\": []}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_core.py",
      "line": 148,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_protocol_enabled = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_core.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_requests = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_core.py",
      "line": 174,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "self.coordination_requests[request.request_id] = request.to_dict()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\consolidated_messaging_core.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_utils.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_utils.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.enhanced_validator.validate_and_prepare_for_paste(text)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_utils.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = validation_result.get(\"recommendations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_utils.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "is_valid, validation_msg = self.validator.validate_before_paste(text)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service.py",
      "line": 39,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 40,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.onboarder = AgentOnboarder(coord_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_coords = agent_data[\"onboarding_coordinates\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_message = self.onboarder.create_onboarding_message(agent_id, default_role)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 272,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_parser = subparsers.add_parser(\"hard-onboard\", help=\"Hard onboard agents\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 273,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_group = onboard_parser.add_mutually_exclusive_group(required=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 302,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def main(argv: list[str] | None = None) -> int:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\consolidated_messaging_service_main.py",
      "line": 369,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = messaging_service.check_response_protocol()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\broadcast.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = BroadcastService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\broadcast.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\broadcast.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\broadcast.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "container = Container()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\broadcast.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "container = Container()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\broadcast.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = container.get(BroadcastService)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\broadcast.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.execute_operation(input_data, context)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = CoordinatesService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "container = Container()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "container = Container()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = container.get(CoordinatesService)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.execute_operation(input_data, context)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\coordinates.py",
      "line": 39,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = HistoryService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "container = Container()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "container = Container()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = container.get(HistoryService)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.execute_operation(input_data, context)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\history.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def show(agent_id: str | None = None) -> list[dict[str, Any]]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\onboarding_bridge.py",
      "line": 5,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\onboarding_bridge.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm_yes=True,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = Task_HandlersService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "container = Container()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "container = Container()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = container.get(Task_HandlersService)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.execute_operation(input_data, context)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=f\"üö® TASK QUEUE EMPTY ‚Äî {agent} requested work\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\task_handlers.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=body,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = Thea_HandlersService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "container = Container()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "container = Container()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = container.get(Thea_HandlersService)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.execute_operation(input_data, context)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "username: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "thread_url: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\thea_handlers.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "attach_file: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.context_sources = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 39,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_id = self._detect_agent_context()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_files = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_path = Path(config_file)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 229,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_keys = [\"agent_id\", \"agentId\", \"agent_name\", \"current_agent\", \"active_agent\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 286,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "_agent_context = AgentContextDetector()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 286,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "_agent_context = AgentContextDetector()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\agent_context.py",
      "line": 143,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function _detect_from_process",
      "code": "Process()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_task = CoordinationTask(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_patterns = self.core.get_coordination_patterns(task)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_plan = self.core.create_coordination_plan(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_success_rate=0.92,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "average_response_time=2.5,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "task_completion_rate=0.88,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = self._get_message_suggestions(agent_id, message, from_agent)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "suggestions = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 262,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "communication_patterns = self.retriever.search(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 297,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_patterns = self.retriever.search(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 313,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_types = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 331,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "communication_patterns = self.retriever.search(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 357,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "communications = self.retriever.search(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_messaging.py",
      "line": 362,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "successful_communications = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\models_optimized.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.content = content",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\models_optimized.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\models_optimized.py",
      "line": 123,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "PRIORITY_MAP = {",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\models_optimized.py",
      "line": 130,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "TAG_MAP = {",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_history = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "formatted_response = self._format_response_with_context(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "formatted_response = response_message",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "invitation_message = self._create_invitation_message(topic, initiator, chat_id)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 338,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_record = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 351,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.response_history = self.response_history[-100:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\messaging\\multichat_response.py",
      "line": 351,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_history = self.response_history[-100:]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "milestone_parser = subparsers.add_parser(\"milestone\", help=\"Send milestone notification\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def main(argv: list[str] | None = None) -> int:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "milestone=args.name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_percentage=args.completion,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations_found=args.violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_cli.py",
      "line": 213,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "usage_instructions=args.usage,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "affected_agents: list[str] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metadata: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "affected_agents: List of agents to notify (None = all agents)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "message_content = self._format_update_message(update_type, title, description, metadata)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id=agent, content=message_content, priority=priority, tag=\"PROJECT_UPDATE\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "next_steps: list[str] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "health_metrics: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "affected_agents: list[str] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "usage_instructions: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\project_update_system.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metadata: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\workflow_integration.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\workflow_integration.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "success, suggestions = self.intelligent_service.send_message(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\workflow_integration.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "workflow_context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\workflow_integration.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_message = f\"Task coordination: {task}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\workflow_integration.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_results = self.multichat_system.broadcast_to_multichat(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\workflow_integration.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_message = f\"\"\"============================================================",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\message_validator.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\message_validator.py",
      "line": 111,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "available_agents: list[str] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\message_validator.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {\"valid\": True, \"errors\": []}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\message_validator.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {\"valid\": True, \"errors\": []}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\message_validator.py",
      "line": 165,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {\"valid\": True, \"errors\": []}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\messaging_core.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\messaging_core.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_data = self._load_coordinates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\messaging\\coordination_tracker.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\coordination_tracker.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = {\"overdue\": [], \"unacknowledged\": [], \"incomplete\": []}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\coordination_tracker.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_age_seconds = max_age_hours * 3600",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\pyautogui_handler.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\__init__.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\enhanced_message_validator.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\enhanced_message_validator.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_message_validator.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "long_lines = [i for i, line in enumerate(lines) if len(line) > 1000]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_message_validator.py",
      "line": 150,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clipboard_content = pyperclip.paste()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_message_validator.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if clipboard_content == test_message:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_message_validator.py",
      "line": 240,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = validation_result.get(\"recommendations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_message_validator.py",
      "line": 264,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.validator.validate_and_prepare_for_paste(message)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.validator.validate_and_prepare_for_paste(message)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
      "line": 295,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.validator.validate_and_prepare_for_paste(message)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\enhanced_pyautogui_handler.py",
      "line": 392,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = handler.validator.validate_and_prepare_for_paste(test_message)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analyzer.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analyzer.py",
      "line": 242,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_analysis = self._analyze_messaging_components()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analyzer.py",
      "line": 259,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analyzer.py",
      "line": 331,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analyzer.py",
      "line": 77,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function _get_memory_usage",
      "code": "Process()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_requests = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.active_sessions = weakref.WeakSet()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.session_registry = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "stale_sessions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_manager = CoordinationRequestManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 215,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self.cleanup_thread = threading.Thread(target=self._cleanup_loop, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 234,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "stale_sessions = self.pyautogui_manager.cleanup_stale_sessions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 274,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "memory_fixer = MemoryLeakFixer()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_fixes.py",
      "line": 215,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_cleanup_service",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analysis_report.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analysis_report.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\memory_leak_analysis_report.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.recommendations = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_strategy=strategy,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = self._get_current_time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_plan=plan,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time=execution_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_plan=plan,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time=self._get_current_time() - start_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = self._generate_recommendations(patterns)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\intelligent_coordinator_core.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\core\\__init__.py",
      "line": 10,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"MessagingService\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\core\\messaging_service.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\core\\messaging_service.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\core\\messaging_service.py",
      "line": 40,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.validation_report = self.loader.validate_all()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\messaging\\core\\messaging_service.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.validation_report = self.loader.validate_all()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\core\\coordinate_loader.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_path = config_path",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\core\\coordinate_loader.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.coordinates = self._load_coordinates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\messaging\\cli\\__init__.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\cli\\messaging_cli_clean.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\cli\\messaging_cli_clean.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=message,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\cli\\messaging_cli_clean.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def show_history(self, agent: str | None = None, limit: int = 10) -> None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\delivery\\inbox_delivery.py",
      "line": 9,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = FallbackService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "container = Container()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "container = Container()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = container.get(FallbackService)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.execute_operation(input_data, context)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 44,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\fallback.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = Deliveryautogui_DeliveryService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = service.handle_request(request_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "container = Container()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "container = Container()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = container.get(Deliveryautogui_DeliveryService)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.execute_operation(input_data, context)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\delivery\\pyautogui_delivery.py",
      "line": 42,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\interfaces\\__init__.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\models\\messaging_models.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=data[\"content\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\models\\messaging_models.py",
      "line": 136,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_activity: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\models\\__init__.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\providers\\__init__.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\providers\\discord_provider.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\__init__.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"OnboardingService\", \"onboarding_service\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.onboarded_agents = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.onboarding_history = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_result = self._perform_onboarding(agent_id, agent_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permissions = self._configure_agent_permissions(agent_id, capabilities)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "communication_setup = self._setup_agent_communication(agent_id)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permissions = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 193,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "onboarding_service = OnboardingService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\onboarding\\onboarding_service.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboarding_service = OnboardingService()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\messaging\\status\\__init__.py",
      "line": 10,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"StatusMonitor\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\status\\status_monitor.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\messaging\\status\\status_monitor.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "chatgpt_context = Path(\"chatgpt_project_context.json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_login_detector.py",
      "line": 35,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_login_detector.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "buttons = driver.find_elements(By.TAG_NAME, \"button\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_login_detector.py",
      "line": 207,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "send_buttons = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_login_detector.py",
      "line": 231,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "buttons = len(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_login_detector.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"div[contenteditable='true']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_login_handler_refactored.py",
      "line": 43,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_login_handler_refactored.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "username: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_login_handler_refactored.py",
      "line": 182,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "continue_button = driver.find_element(By.XPATH, \"//button[@type='submit']\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(message, headless=headless)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = thea.send_message_autonomous(message)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 149,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_parser = subparsers.add_parser(\"conversation\", help=\"Manage conversations\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 150,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_subparsers = conv_parser.add_subparsers(dest=\"conv_action\", required=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if args.conv_action == \"list\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 247,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif args.conv_action == \"active\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 265,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif args.conv_action == \"new\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 270,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "manager.active_conversation_id = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 275,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif args.conv_action == \"load\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_cli.py",
      "line": 335,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "force_new_conversation=args.new_conversation, visible=False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_cookie_manager.py",
      "line": 36,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\__init__.py",
      "line": 80,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 33,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conversation_manager = TheaConversationManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = data.get(\"v2_violations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "python_files=structure.get(\"python_files\", 0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "v2_violations=v2_compliance.get(\"violations\", 0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_files=[v.get(\"file\", \"\") for v in violations],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 213,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_manager=self.conversation_manager, headless=not visible",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 217,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conversation_manager.active_conversation_id = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = thea.send_message_autonomous(report)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 262,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "with TheaAutonomousSystem(conversation_manager=self.conversation_manager) as thea:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 263,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = thea.send_message_autonomous(alert_message)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_analytics_reporter.py",
      "line": 284,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_status = self.conversation_manager.get_status()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_browser_manager.py",
      "line": 37,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_browser_manager.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "options = self._configure_chrome_options()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_browser_manager.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "driver = uc.Chrome(options=options, headless=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_browser_manager.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "driver = uc.Chrome(options=options)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_browser_manager.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "service=Service(ChromeDriverManager().install()), options=options",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_browser_manager.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "options = Options()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.responses_dir = Path(responses_dir)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.detector: ResponseDetector | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"div[contenteditable='true'][role='textbox']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"[contenteditable='true']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"div[data-testid='conversation-composer-input'] div[contenteditable='true']\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "is_contenteditable = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "auto_continue=True,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 190,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_continue_clicks=1,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 275,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "json_path = self.responses_dir / f\"response_metadata_{timestamp}.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 294,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_section = \"\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 296,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_section = f\"\"\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 306,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_section = \"\"\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_core.py",
      "line": 313,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "log_content = f\"\"\"# Thea Conversation Log",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_interface.py",
      "line": 73,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.driver = self.browser_manager.initialize_driver()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\thea\\thea_communication_interface.py",
      "line": 100,
      "type": "file_without_context",
      "severity": "HIGH",
      "description": "File opened without context manager",
      "code": "webbrowser.open(self.thea_url)",
      "recommendation": "Use 'with open() as f:' context manager"
    },
    {
      "file": "src\\services\\thea\\thea_communication_interface.py",
      "line": 144,
      "type": "file_without_context",
      "severity": "HIGH",
      "description": "File opened without context manager",
      "code": "webbrowser.open(self.thea_url, new=1)",
      "recommendation": "Use 'with open() as f:' context manager"
    },
    {
      "file": "src\\services\\thea\\thea_communication_interface.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "extracted_response = \"\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_interface.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "extracted_response = self.core.extract_response_text(self.driver)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_communication_interface.py",
      "line": 259,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_ready = self.wait_for_thea_response()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_error_recovery.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 20,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = TheaMonitoringSystem()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_activity: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.metrics_retention_days = metrics_retention_days",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_thread = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitor_logger = logging.getLogger(\"thea_monitoring\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "console_handler = logging.StreamHandler()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "console_formatter = logging.Formatter(\"%(asctime)s - %(levelname)s - %(message)s\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_thread = Thread(target=self._monitoring_loop, daemon=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 150,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_active = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 151,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "self.stop_event.set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 160,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "while not self.stop_event.is_set():",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "network_connected = self._check_network_connectivity()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "network_connected=network_connected,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 219,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "network_connected=False,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 311,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 326,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_length=response_length,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 361,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avg_response_length = sum(m.response_length for m in self.performance_metrics) / total_ops",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 412,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def export_data(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_monitoring_system.py",
      "line": 445,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = create_monitoring_system()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 12,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 15,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_level=\"essential\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_levels = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 153,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def create_multi_turn_context(self, question: str, previous_context: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 177,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def create_status_report(self, additional_status: dict | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 250,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "STRATEGIC_TEMPLATES = {",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 269,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\context_templates.py",
      "line": 277,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_level = args.context_level or \"standard\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(message, headless=not args.visible)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "additional_status = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(message, headless=not args.visible)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 160,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(message, headless=not args.visible)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 258,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = input(\"\\n‚ùì Send this validated message to Commander Thea? (y/n): \").lower().strip()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 266,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(message, headless=not args.visible)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 284,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 310,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(message, headless=not args.visible)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 350,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = ProjectContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 397,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consult_parser = subparsers.add_parser(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\strategic_consultation_cli.py",
      "line": 400,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consult_group = consult_parser.add_mutually_exclusive_group(required=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = thea.send_message_autonomous(\"Hello Thea!\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 35,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_manager: TheaConversationManager | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conversation_manager = conversation_manager or TheaConversationManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.communication_core = TheaCommunicationCore(responses_dir)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 107,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.driver = self.browser_manager.initialize_driver()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_conversation_link = self.conversation_manager.get_active_conversation_link()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_received = self.communication_core.wait_for_response(self.driver, timeout)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_text = self.communication_core.extract_response_text(self.driver)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 224,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "real_conversation_link = self.conversation_manager.extract_conversation_link(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 235,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_meta = self.conversation_manager.conversations[",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 238,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_meta.conversation_link = real_conversation_link",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_autonomous_system.py",
      "line": 369,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = send_thea_message_autonomous(test_message, headless=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 36,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conversations_file = Path(conversations_file)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.active_conversation_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.active_conversation_id = data.get(\"active_conversation_id\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conversations = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversations_data = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_dict = asdict(conv_meta)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_link = self.extract_conversation_link(driver)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 163,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_id = f\"thea_conv_{datetime.now().strftime('%Y%m%d_%H%M%S')}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 167,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_meta = ConversationMetadata(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 168,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_id=conversation_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_link=conversation_link,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 180,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.active_conversation_id = conversation_id",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_meta = self.conversations[self.active_conversation_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 221,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if conv_meta.conversation_link == conversation_link:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 222,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.active_conversation_id = conv_id",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 245,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_meta = self.conversations[self.active_conversation_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 287,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_id = self.active_conversation_id",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 295,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if conversation_id == self.active_conversation_id:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 296,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.active_conversation_id = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 307,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_conv = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 309,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_meta = self.conversations[self.active_conversation_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\thea\\thea_conversation_manager.py",
      "line": 310,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_conv = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\__init__.py",
      "line": 48,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\__init__.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\__init__.py",
      "line": 49,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"Agent-3 (Database Specialist)\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\__init__.py",
      "line": 51,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, integration: VectorDatabaseIntegration, config: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 37,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.auto_sync = self.config.get(\"auto_sync\", True)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 38,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.sync_interval = self.config.get(\"sync_interval\", 30)  # seconds",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 39,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.performance_monitoring = self.config.get(\"performance_monitoring\", True)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitoring = self.config.get(\"performance_monitoring\", True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._sync_thread: threading.Thread | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._integration_stats = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 61,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self._sync_thread = threading.Thread(target=self._sync_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 147,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "dimensions=len(arch_vector),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type = vector.metadata.properties.get(\"component_type\", \"unknown\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\architecture_integration.py",
      "line": 61,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_integration",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 90,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.integration_interval = self.config.get(\"integration_interval\", 15)  # seconds",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.integration_interval = self.config.get(\"integration_interval\", 15)  # seconds",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 91,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.max_workers = self.config.get(\"max_workers\", 10)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 92,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.auto_integration = self.config.get(\"auto_integration\", True)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._integration_thread: threading.Thread | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._integration_stats = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 120,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self._integration_thread = threading.Thread(target=self._integration_loop, daemon=True, daemon=True, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 120,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._integration_thread = threading.Thread(target=self._integration_loop, daemon=True, daemon=True, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=InfrastructureComponent.ARCHITECTURE_FOUNDATION,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_level=arch_status.get(\"optimization_level\", \"basic\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=InfrastructureComponent.AGENT_COORDINATION,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_level=collab_status.get(\"optimization_level\", \"basic\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=InfrastructureComponent.INTEGRATION_TESTING,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_level=support_status.get(\"optimization_level\", \"basic\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=InfrastructureComponent.SYSTEM_OPTIMIZATION,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_level=perf_status.get(\"optimization_level\", \"basic\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 209,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=InfrastructureComponent.PERFORMANCE_MONITORING,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 213,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_level=vector_status.get(\"optimization_level\", \"basic\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 262,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_count = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 343,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_statuses = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 344,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "component.value: status.to_dict()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\complete_infrastructure_integration.py",
      "line": 120,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_integration",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, db_path: str, config: dict[str, Any] | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "db_config = DatabaseConfig(database=db_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 55,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.auto_indexing = self.config.get(\"auto_indexing\", True)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 56,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.performance_monitoring = self.config.get(\"performance_monitoring\", True)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitoring = self.config.get(\"performance_monitoring\", True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 57,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.integration_logging = self.config.get(\"integration_logging\", True)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.integration_logging = self.config.get(\"integration_logging\", True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "dimensions=len(status_vector),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "dimensions=len(message_vector),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\core_integration.py",
      "line": 171,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "dimensions=len(task_vector),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.status_dimensions = 32",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.message_dimensions = 32",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.task_dimensions = 32",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = str(message_data.get(\"content\", \"\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time = message_data.get(\"response_time\", 0)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = str(conversation_data.get(\"content\", \"\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\data_processor.py",
      "line": 212,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conv_type = conversation_data.get(\"type\", \"general\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "status: CollaborationStatus = CollaborationStatus.ACTIVE",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 60,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "end_time: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "status: CollaborationStatus = CollaborationStatus.ACTIVE",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_id=session_id, participants=participants, collaboration_type=collaboration_type",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def get_events(self, session_id: str | None = None) -> list[CollaborationEvent]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 232,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._collaboration_manager = CollaborationManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 233,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._coordination_engine = CoordinationEngine()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 234,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._integration_coordinator = IntegrationCoordinator()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 299,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_sessions = self._collaboration_manager.get_active_sessions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 300,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_coordinations = self._coordination_engine.get_active_coordinations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 301,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "pending_integrations = self._integration_coordinator.get_pending_integrations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 314,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "enhanced_collaboration_system = EnhancedCollaborationSystem()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\enhanced_collaboration.py",
      "line": 314,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "enhanced_collaboration_system = EnhancedCollaborationSystem()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name=component_name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 237,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = self._analyzer.get_violations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 248,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = self._analyzer.get_violations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 251,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_components = len(metrics)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 252,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "compliant_components = total_components - len(violations)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 299,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\kiss_principle_enforcement_system.py",
      "line": 328,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "kiss_manager = KISSManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\performance_optimization_framework.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\performance_optimization_framework.py",
      "line": 214,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def get_bottlenecks(self, component: str | None = None) -> dict[str, dict[str, Any]]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\performance_optimization_framework.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def clear_bottlenecks(self, component: str | None = None) -> None:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\performance_optimization_framework.py",
      "line": 329,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "optimization_engine = OptimizationEngine()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\performance_optimization_framework.py",
      "line": 329,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_engine = OptimizationEngine()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_date: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "milestone.completion_date = datetime.now()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_percentage=completion_percentage,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completed_milestones = len(self._tracker.get_completed_milestones())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 199,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_milestones = len(self._tracker._milestones)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 284,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_completion_manager = ProjectCompletionManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 284,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "project_completion_manager = ProjectCompletionManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\project_completion_system.py",
      "line": 285,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_quality_assessor = ProjectQualityAssessor()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\quality_assurance_framework.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\quality_assurance_framework.py",
      "line": 295,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "quality_manager = QualityManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\quality_assurance_framework.py",
      "line": 296,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "compliance_checker = ComplianceChecker()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, source_db_path: str, target_db_path: str, config: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 44,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.batch_size = self.config.get(\"batch_size\", 100)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 45,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.max_workers = self.config.get(\"max_workers\", 4)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 46,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.migration_interval = self.config.get(\"migration_interval\", 1.0)  # seconds",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.migration_interval = self.config.get(\"migration_interval\", 1.0)  # seconds",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 47,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.similarity_threshold = self.config.get(\"similarity_threshold\", 0.8)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._migration_thread: threading.Thread | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._migration_stats = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 74,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self._migration_thread = threading.Thread(target=self._migration_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._migration_thread = threading.Thread(target=self._migration_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 136,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conn = self.source_integration.orchestrator.db_connection.get_connection()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "migration_rate = self._migration_stats[\"vectors_migrated\"] / max(elapsed_time, 1)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 269,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "migration_rate = 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 302,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "estimated_seconds = remaining_vectors / migration_rate",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\record_time_migration.py",
      "line": 74,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_migration",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\vector_database\\status_indexer.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\status_indexer.py",
      "line": 33,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "return entry.to_dict()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\status_indexer.py",
      "line": 42,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"stats\": stats.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.execution_core = ContractExecutionCore(self.config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitor = ContractPerformanceMonitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "default_contracts = create_default_contracts()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts = self.execution_core.get_contracts()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts = self.execution_core.get_contracts()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_metrics = calculate_contract_metrics(contracts)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\v3_contract_execution_system.py",
      "line": 88,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"contract_statuses\": [contract.to_dict() for contract in contracts],",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_integration.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_integration.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, db_path: str, config: dict[str, Any] | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_integration.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_integration.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metadata_filter: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "dimensions=data[\"dimensions\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "similarity_score: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 107,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metadata\": self.metadata.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 108,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"vector_data\": self.vector_data.tolist(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "vector_type: VectorType | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tags: list[str] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 137,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"query_vector\": self.query_vector.tolist(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._connection: sqlite3.Connection | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 191,
      "type": "sqlite_without_close",
      "severity": "HIGH",
      "description": "SQLite connection without explicit close",
      "code": "self._connection = sqlite3.connect(str(self.db_path), check_same_thread=False)",
      "recommendation": "Use context manager or ensure connection.close()"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._connection = sqlite3.connect(str(self.db_path), check_same_thread=False)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 285,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._connection = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 302,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.db_connection = db_connection",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 309,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 310,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "memory_usage: float | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 311,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cpu_usage: float | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 312,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metadata: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 316,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conn = self.db_connection.get_connection()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 355,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conn = self.db_connection.get_connection()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_models.py",
      "line": 366,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "WHERE operation_type = ?",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_monitoring.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_monitoring.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_monitoring.py",
      "line": 97,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.metrics = self.metrics[-self.max_metrics :]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_monitoring.py",
      "line": 106,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "return [m.to_dict() for m in filtered_metrics[-limit:]]",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_monitoring.py",
      "line": 144,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "health_data = {\"name\": name, \"status\": status.to_dict(), \"timestamp\": time.time()}",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_monitoring.py",
      "line": 149,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.health_checks = self.health_checks[-100:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_monitoring.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_metrics = self.metrics_collector.get_metrics(\"operation_duration\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.orchestration_core = OrchestrationCore(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_connections=config.max_connections, timeout_seconds=config.timeout_seconds",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_connected = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.operation_count = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_connected = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_connected = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_connected = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "async def execute_query(self, query: str, params: dict | None = None) -> dict[str, Any]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\vector_database_orchestrator.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "orchestration_status = self.orchestration_core.get_status()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\query_analytics.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\query_analytics.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metadata_filter: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\query_analytics.py",
      "line": 152,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"index_stats\": {k: v.to_dict() for k, v in index_stats.items()},",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\query_analytics.py",
      "line": 250,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"index_details\": {k: v.to_dict() for k, v in index_stats.items()},",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "access_control = self._validate_access_control()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "configuration_security = self._validate_configuration_security()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "sql_injection_check = checks.check_sql_injection_vulnerabilities()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "data_sanitization_check = checks.check_data_sanitization()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "encryption_check = checks.check_encryption_requirements()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "data_validation_check = checks.check_data_validation()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "permission_check = checks.check_permission_validation()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "session_check = checks.check_session_management()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "exception_check = checks.check_exception_handling()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 224,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "input_validation_check = checks.check_input_validation()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "input_sanitization_check = checks.check_input_sanitization()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 233,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "injection_check = checks.check_injection_prevention()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 273,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_check = checks.check_configuration_files()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_core.py",
      "line": 323,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_checks.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_main.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_main.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self.core.validate_security()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_main.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self.validate_security()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator_main.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = report.get(\"recommendations\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\security_validator.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\security_validator.py",
      "line": 38,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "_default_validator = None",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\orchestration\\core.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\orchestration\\core.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\orchestration\\core.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.active_connections = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\orchestration\\core.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection_pool = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\__init__.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: dict[str, Any] | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 31,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.execution_interval = self.config.get(\"execution_interval\", 50)  # seconds",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.execution_interval = self.config.get(\"execution_interval\", 50)  # seconds",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 32,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.max_workers = self.config.get(\"max_workers\", 6)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 33,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.auto_execution = self.config.get(\"auto_execution\", True)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._execution_thread: threading.Thread | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 54,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self._execution_thread = threading.Thread(target=self._execution_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._execution_thread = threading.Thread(target=self._execution_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "available_contracts = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 127,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"contract\": contract.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "claimed_contracts = [c for c in self._contracts if c.status == ContractStatus.CLAIMED]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._contracts = contracts",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_execution_core.py",
      "line": 54,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_execution",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_models.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_id=\"V3-003\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_models.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_id=\"V3-006\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_models.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_id=\"V3-009\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_models.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_id=\"V3-012\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._execution_stats = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_contracts = len(contracts)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completed_contracts = len(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "failed_contracts = len([c for c in contracts if c.status == ContractStatus.FAILED])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 66,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self._performance_history = self._performance_history[-100:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "uptime_seconds = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_performance_monitor.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._execution_stats = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "valid_contracts = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_quality = self._validate_individual_contract(contract)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_contracts = len(contracts)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completed_contracts = len(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_quality_validator.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "failed_contracts = len([c for c in contracts if c.status == ContractStatus.FAILED])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_utils.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_utils.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if contract.contract_id == contract_id:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_utils.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract: V3Contract, status: ContractStatus, agent_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\contracts\\contract_utils.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_contracts = len(contracts)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\indexing\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"IndexEntry\", \"IndexStats\", \"IndexStatus\", \"IndexType\", \"IndexManager\", \"IndexProcessor\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\indexing\\manager.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\indexing\\manager.py",
      "line": 42,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "data = {entry_id: entry.to_dict() for entry_id, entry in self.entries.items()}",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\indexing\\manager.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, entry_id: str, status: IndexStatus, error_message: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\indexing\\processor.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\vector_database\\indexing\\types.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\vector_database\\indexing\\types.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_index_time: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\__init__.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\blockers\\blocker_resolver.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\blockers\\blocker_resolver.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_blockers = await self._check_configuration_blockers()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\blockers\\blocker_resolver.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version_conflicts = await self._check_version_conflicts()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\blockers\\blocker_resolver.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "missing_configs = await self._check_missing_configurations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\blockers\\blocker_resolver.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "invalid_configs = await self._check_invalid_configurations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ConsolidatedMessagingService = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 38,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.inbox_dir = self.workspace_dir / \"inbox\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 39,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.processed_dir = self.workspace_dir / \"processed\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 40,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.working_tasks_file = self.workspace_dir / \"working_tasks.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 41,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.future_tasks_file = self.workspace_dir / \"future_tasks.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 42,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.status_file = self.workspace_dir / \"status.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.autonomous_operations = AutonomousOperations(agent_id, self.workspace_dir)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\core\\autonomous_workflow.py",
      "line": 110,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations_results = await self.autonomous_operations.run_autonomous_operations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\mailbox\\mailbox_manager.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\mailbox\\mailbox_manager.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = message.get(\"content\", \"\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\mailbox\\mailbox_manager.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_data = message.get(\"coordination_data\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.operations_file = workspace_dir / \"autonomous_operations.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "available_operations = await self._get_available_operations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "default_operations = await self._create_default_operations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations_data = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations_data = {\"operations\": operations, \"last_updated\": \"2025-01-16T00:00:00Z\"}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_id = operation.get(\"id\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 167,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_name = operation.get(\"name\", \"Unknown\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if operation_id == \"code_review\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif operation_id == \"performance_analysis\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif operation_id == \"documentation_update\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 178,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif operation_id == \"test_optimization\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\autonomous_operations.py",
      "line": 180,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif operation_id == \"security_scan\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "AutonomousOperations = AutonomousOperationsCore",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\__init__.py",
      "line": 13,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "AutonomousOperations = AutonomousOperationsCore",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\__init__.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"AutonomousOperationsCore\", \"AutonomousOperations\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.operations_file = workspace_dir / \"autonomous_operations.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.operations_manager = OperationsManager(self)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.operation_executor = OperationExecutor(self)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.operations_loader = OperationsLoader(self)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "available_operations = await self.operations_loader.get_available_operations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\core.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operation_executor.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operation_executor.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operation_type = operation.get(\"type\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_loader.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_loader.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "default_operations = await self._create_default_operations()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_loader.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_loader.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "available_operations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_loader.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "default_operations = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_operations = len(operations)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "enabled_operations = sum(1 for op in operations if op.get(\"enabled\", True))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "disabled_operations = total_operations - enabled_operations",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\operations_manager.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "operations = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\__init__.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\code_review_executor.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\documentation_update_executor.py",
      "line": 7,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\performance_analysis_executor.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\security_scan_executor.py",
      "line": 7,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\ssot_validation_executor.py",
      "line": 7,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\swarm_coordination_analysis_executor.py",
      "line": 7,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\operations\\modular\\executors\\system_integration_scan_executor.py",
      "line": 7,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\autonomous\\tasks\\task_manager.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\__init__.py",
      "line": 11,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"EnhancedDiscordAgentBot\", \"setup_basic_commands\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "AgentCoordination = AgentCoordinationCore",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
      "line": 112,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "value=len(getattr(bot, \"connected_agents\", set())),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
      "line": 131,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "connected_agents = getattr(bot, \"connected_agents\", set())",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connected_agents = getattr(bot, \"connected_agents\", set())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\basic_commands.py",
      "line": 228,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "commands = self.get_command_list()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\basic_commands_modular.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\button_handlers.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\help_command.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 11,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cb_inter, content=\"‚ùå Agent coordination not available\", ephemeral=True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = discord.ui.TextInput(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "inter, content=\"üîÑ **Restarting Discord Commander...**\", ephemeral=True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"‚ùå Restart cancelled - confirmation text did not match.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 192,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = discord.ui.TextInput(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 211,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"‚èπÔ∏è **Shutting down Discord Commander...**\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\main_interface.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"‚ùå Shutdown cancelled - confirmation text did not match.\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
      "line": 12,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = discord.ui.TextInput(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"üîÑ **Restarting Discord Commander...**\", ephemeral=True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"‚ùå Restart cancelled - confirmation text did not match.\", ephemeral=True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm = discord.ui.TextInput(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"‚èπÔ∏è **Shutting down Discord Commander...**\", ephemeral=True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\modal_handlers.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=\"‚ùå Shutdown cancelled - confirmation text did not match.\", ephemeral=True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\ping_command.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\ping_command.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "await safe_send(interaction, content=\"üèì Pong! Bot is responsive.\", ephemeral=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\response_utils.py",
      "line": 11,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\safe_response_utils.py",
      "line": 11,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\social_media_commands.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\social_media_commands.py",
      "line": 200,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = dashboard_data[\"recommendations\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\webhook_setup_commands.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\webhook_setup_commands.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "ADMIN_ROLE = \"SwarmAdmin\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\webhook_setup_commands.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "provisioner = DiscordWebhookProvisioner(bot)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "AgentCoordination = AgentCoordinationCore",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\__init__.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"AgentCoordinationCore\", \"AgentCoordination\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.onboarding = AgentOnboardingHandler(self)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "onboard_btn = discord.ui.Button(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\core.py",
      "line": 195,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "team_descriptions = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\messaging.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\messaging.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "options=[",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\messaging.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "message_content = self.message_input.value",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\onboarding.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confirm_btn = discord.ui.Button(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\commands\\agent_coordination\\status.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\core\\discord_bot_core.py",
      "line": 22,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\core\\discord_bot_core.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = self.config.intents.get(\"message_content\", True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\core\\discord_bot.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\core\\discord_bot.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\core\\discord_bot.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = config.intents.get(\"message_content\", True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\core\\discord_bot.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = BotConfiguration(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_bot\\core\\commands\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"SocialMediaCommands\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\core\\commands\\social_media_commands.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\ui\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"DiscordUI\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\ui\\discord_ui.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_bot\\tools\\webhook_provisioner.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "acknowledged_by: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "acknowledged_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "resolved_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.notification_configs = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_escalations=policy_config.get(\"max_escalations\", 3),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.notification_handlers = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\alerting\\intelligent_alerting_system.py",
      "line": 380,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\__init__.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_core.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "html_content = generate_dashboard_html()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_core.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_length = int(self.headers[\"Content-Length\"])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_core.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content_length = int(self.headers[\"Content-Length\"])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_core.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "json_data = json.dumps(data, indent=2)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_core.py",
      "line": 185,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self.thread = threading.Thread(target=self.server.serve_forever, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_core.py",
      "line": 185,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_html.py",
      "line": 19,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_html.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "<button class=\"refresh-btn\" onclick=\"refreshDashboard()\">üîÑ Refresh</button>",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_html.py",
      "line": 252,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": ".then(response => response.json())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_interface.py",
      "line": 39,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\dashboard\\dashboard_web_utils.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_rate = (completed_tasks / total_tasks * 100) if total_tasks > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\dashboard\\swarm_coordination_dashboard.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config_path = config_path",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\__init__.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\__init__.py",
      "line": 42,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\__init__.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"2.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\__init__.py",
      "line": 43,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"Agent-2 (Architecture & Design Specialist)\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\__init__.py",
      "line": 44,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__description__ = \"V2 Compliant Discord Commander System\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\__init__.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__description__ = \"V2 Compliant Discord Commander System\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\commands.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\commands.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\core.py",
      "line": 28,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\core.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\core.py",
      "line": 41,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.intents = self._get_intents()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_commander\\core.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\core.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\core.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection_attempts = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\core.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connection_attempts = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messages_per_second = len(self.message_times) / uptime if uptime > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "commands_per_second = len(self.command_times) / uptime if uptime > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_execution_time=avg_command_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messages_per_second=messages_per_second,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 113,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "commands_per_second=commands_per_second,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "uptime_seconds=uptime,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 153,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"expires_at\": datetime.now() + timedelta(seconds=ttl_seconds),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 236,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.max_concurrent = max_concurrent",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 276,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitor = DiscordPerformanceMonitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 280,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 313,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 392,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"performance\": performance_metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 409,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization.py",
      "line": 414,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_core.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\bot_commands.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = CommandContext(ctx)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_commands.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = CommandContext(ctx)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_commands.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = CommandContext(ctx)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_commands.py",
      "line": 122,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = CommandContext(ctx)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_commands.py",
      "line": 144,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = CommandContext(ctx)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_commands.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_log = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_core.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = BotConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_core.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_events.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\bot_events.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_v2.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\bot_v2.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {\"valid\": True, \"errors\": [], \"warnings\": [], \"components_checked\": 3}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.optimization_enabled = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = time.time() - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.pending_operations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 207,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.pending_operations = self.pending_operations[self.batch_size :]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 207,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.pending_operations = self.pending_operations[self.batch_size :]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\optimization_utils.py",
      "line": 220,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "await asyncio.gather(*tasks, return_exceptions=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_execution_time=data.get(\"command_execution_time\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messages_per_second=data.get(\"messages_per_second\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "commands_per_second=data.get(\"commands_per_second\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "uptime_seconds=data.get(\"uptime_seconds\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_execution_time=raw_data.get(\"command_execution_time\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messages_per_second=raw_data.get(\"messages_per_second\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "commands_per_second=raw_data.get(\"commands_per_second\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_metrics.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "uptime_seconds=raw_data.get(\"uptime_seconds\", 0.0),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 66,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "monitor_thread = threading.Thread(target=monitor_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor_thread = threading.Thread(target=monitor_loop, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messages_per_second = self.message_count / uptime if uptime > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "commands_per_second = self.command_count / uptime if uptime > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_execution_time=self.last_command_time,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messages_per_second=messages_per_second,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 110,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "commands_per_second=commands_per_second,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "uptime_seconds=uptime,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 172,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"current_metrics\": current_metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 66,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start_monitoring",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\discord_commander\\performance_monitor.py",
      "line": 146,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function _get_memory_usage",
      "code": "Process()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\discord_commander\\social_media_poster.py",
      "line": 12,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\socket_events.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\socket_events.py",
      "line": 29,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "self.connected_clients = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\socket_events.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.connected_clients = set()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_refactored.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\web_handlers.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\web_handlers.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, messaging_service=None, coordination_service=None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_handlers.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_service = coordination_service",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_handlers.py",
      "line": 192,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = data.get(\"content\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "mission_priority=data.get(\"mission_priority\", \"NORMAL\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "next_actions=data.get(\"next_actions\", []),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "critical_violations=81,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 144,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "file_size_violations=6,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_count_violations=45,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "class_count_violations=12,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_utils.py",
      "line": 231,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_requests=[],  # TODO: Load from coordination tracker",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_v2.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_v2.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = WebControllerConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_v2.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_v2.py",
      "line": 195,
      "type": "threading_thread",
      "severity": "HIGH",
      "description": "Thread creation without proper cleanup",
      "code": "self.server_thread = threading.Thread(target=self._run_server, daemon=True, daemon=True, daemon=True)",
      "recommendation": "Ensure threads are properly joined or use daemon threads"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_v2.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "controller = create_web_controller()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_v2.py",
      "line": 195,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function start",
      "code": "Thread()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_main.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller_main.py",
      "line": 22,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_routes.py",
      "line": 12,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\web_routes.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=data.get(\"content\", \"\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\web_controller.py",
      "line": 9,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\bot_main.py",
      "line": 32,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\discord_commander\\bot_main.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or BotConfiguration()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_main.py",
      "line": 47,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.logger = self.bot_core.logger",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_commander\\bot_main.py",
      "line": 55,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.bot = self.bot_core.create_bot()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\discord_commander\\bot_main.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.bot_core.status.is_online = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_main.py",
      "line": 234,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = BotConfiguration()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot_main.py",
      "line": 245,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = create_bot_configuration(token, prefix)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\discord_commander\\bot.py",
      "line": 34,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\agent_devlog\\__init__.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\agent_devlog\\agent_validation.py",
      "line": 20,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_roles = self._initialize_agent_roles()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\agent_devlog\\agent_validation.py",
      "line": 21,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_capabilities = self._initialize_agent_capabilities()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\agent_devlog\\agent_validation.py",
      "line": 165,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_lower = action.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog\\cli.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_group = parser.add_mutually_exclusive_group(required=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog\\devlog_poster.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"\"\"# ü§ñ Agent Devlog - {agent_flag}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog\\devlog_poster.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog\\devlog_poster.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "status: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog\\storage.py",
      "line": 26,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.current_file = self._get_current_file()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\agent_devlog\\storage.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_id: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog\\storage.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "status: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\agent_devlog\\storage.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"{devlog.get('action', '')} {devlog.get('details', '')}\".lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 47,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.general_cycle = self._define_general_cycle()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 48,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.role_contracts = self._load_role_contracts()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.role_contracts = self._load_role_contracts()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "role_adaptations={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "role_adaptations={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "role_adaptations={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "role_adaptations={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 133,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "role_adaptations={",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract = RoleContract(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 166,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "escalation_procedures=role_data.get(\"escalation_procedures\", {}),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 182,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "role_adaptations = phase.role_adaptations.get(role, {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "role_adaptations={role: role_adaptations},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract = self.get_role_contract(role)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "adaptations = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 218,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract = self.get_role_contract(role)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_phases = [phase.phase for phase in contract.general_cycle]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 236,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract = self.get_role_contract(role)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\contract_integration.py",
      "line": 266,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "adaptations = integration.get_role_cycle_adaptations(\"INTEGRATION_SPECIALIST\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 67,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.role_definitions = self._load_role_definitions()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.role_definitions = self._load_role_definitions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 68,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_capabilities = self._load_agent_capabilities()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "escalation_procedures={\"integration_failure\": \"Notify Captain Agent-4\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "behavior_adaptations={\"focus_areas\": [\"integration\", \"apis\", \"webhooks\"]},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 126,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "escalation_procedures={\"quality_failure\": \"Block deployment\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "behavior_adaptations={\"focus_areas\": [\"testing\", \"quality\", \"compliance\"]},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "escalation_procedures={\"ssot_violation\": \"Immediate notification to Captain\"},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\role_assignment\\role_assignment_service.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "behavior_adaptations={\"focus_areas\": [\"ssot\", \"integration\", \"coordination\"]},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling\\__init__.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\__init__.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling\\__init__.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"Agent-7\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\__init__.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = self.story_validator.validate_story(story_chapter)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 122,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service = DevlogStorytellingService()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 123,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "result = service.process_devlog_batch(5)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 130,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "reader = DevlogReader()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 131,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "devlogs = reader.read_recent_devlogs(5)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 135,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "compiler = StoryCompiler()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 136,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "story = compiler.compile_story(devlogs)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\devlog_storytelling\\integration\\role_integration.py",
      "line": 140,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "tracker = CharacterTracker()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\code_archaeology\\__init__.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\code_archaeology\\__init__.py",
      "line": 24,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "__version__ = \"1.0.0\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\code_archaeology\\__init__.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__author__ = \"Agent-2\"",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\services\\code_archaeology\\__init__.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.evolution_tracker = EvolutionTracker()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\services\\code_archaeology\\__init__.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evolution_analysis = self.evolution_tracker.track_evolution(target_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=message,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "due_date: datetime | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 252,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "due_date: datetime | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 273,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.application_service = ApplicationService()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 283,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messaging_config = ServiceConfig(\"messaging\", auto_start=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 284,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "discord_config = ServiceConfig(\"discord\", dependencies=[\"messaging\"], auto_start=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 285,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "thea_config = ServiceConfig(\"thea\", dependencies=[\"messaging\"], auto_start=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\application_layer.py",
      "line": 319,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "system_status_result.to_dict()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\design_patterns.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\design_patterns.py",
      "line": 126,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._current_strategy: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\design_patterns.py",
      "line": 159,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, execute_func: Callable, undo_func: Callable | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\design_patterns.py",
      "line": 251,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "pattern_registry = PatternRegistry()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\design_patterns.py",
      "line": 323,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "pattern_manager = PatternManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\design_patterns.py",
      "line": 334,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_obj = PatternConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\design_patterns.py",
      "line": 339,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config=config or {},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\design_patterns_v2.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\design_patterns_v2.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "T = TypeVar(\"T\")",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\repository_layer.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\repository_layer.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "T = TypeVar(\"T\")",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\repository_layer.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_seen: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\repository_layer.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "due_date: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\service_layer.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\service_layer.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\service_layer.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._start_time: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_connection: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_error: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 104,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if config.integration_type == integration_type",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 209,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metrics.last_connection = datetime.now()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 223,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if config.integration_type == integration_type",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 238,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "service_registry = ServiceRegistry()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 239,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "event_bus = EventBus()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 240,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "integration_manager = IntegrationManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 240,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "integration_manager = IntegrationManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "service_config = IntegrationConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 254,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "integration_type=integration_type,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\system_integration.py",
      "line": 260,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config=config or {},",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_activity: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_error: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 111,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._metrics[name].initialization_time = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._di_container = DependencyInjection()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 239,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=ComponentType.CORE,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 247,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=ComponentType.CORE,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 268,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_components = self._lifecycle.get_active_components()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 307,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "unified_architecture = UnifiedArchitecture()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\unified_architecture_core.py",
      "line": 308,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "unified_architecture_core = unified_architecture",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\patterns\\singleton_factory.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\patterns\\singleton_factory.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "T = TypeVar(\"T\")",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\patterns\\__init__.py",
      "line": 40,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\patterns\\command_repository.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\patterns\\command_repository.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "T = TypeVar(\"T\")",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\patterns\\observer_strategy.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = get_module_logger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\architecture\\patterns\\observer_strategy.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, strategy: ValidationStrategy = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "correlation_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.correlation_id = str(uuid.uuid4())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 147,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def get_event_history(self, event_type: EventType | None = None) -> list[DomainEvent]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 215,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def get_events(self, event_name: str | None = None) -> list[DomainEvent]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 237,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "event_handler = EventHandler()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 238,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "event_bus = EventBus()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 239,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "event_store = EventStore()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\domain_events.py",
      "line": 258,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "system_component=component,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "time_last_active: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "last_error: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "configuration: AgentConfiguration | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self._configuration = configuration or AgentConfiguration()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 346,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_data = data[\"configuration\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 347,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "configuration = AgentConfiguration(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 348,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_concurrent_tasks=config_data[\"max_concurrent_tasks\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 360,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "configuration=configuration,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\agent.py",
      "line": 450,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "agent_manager = AgentManager()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\entities\\task_core.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\entities\\task_core.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "due_date: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\task_core.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "assigned_to: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\task_core.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "assigned_by: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\task_core.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "estimated_hours: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\task_core.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actual_hours: float | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\domain\\entities\\task.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"TaskStatus\", \"TaskPriority\", \"TaskType\", \"TaskCore\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\domain\\entities\\task.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "Task = TaskCore",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_task: asyncio.Task | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connections = len(psutil.net_connections())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "connections = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=connections,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 135,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 209,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_task = asyncio.create_task(self.monitoring_loop(interval))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 219,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 299,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "snapshot.to_dict()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 319,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "_global_lightweight_monitor: MemoryOptimizedMonitor | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 326,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "_global_lightweight_monitor = MemoryOptimizedMonitor(Path(\".\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 332,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = get_lightweight_monitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 338,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = get_lightweight_monitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\memory_optimized_monitor.py",
      "line": 261,
      "type": "resource_creation",
      "severity": "HIGH",
      "description": "Resource creation in function get_memory_usage",
      "code": "Process()",
      "recommendation": "Ensure proper cleanup in finally block"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_interval = monitoring_interval",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_task: asyncio.Task | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_name=component_name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "average_response_time=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_response_time=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "min_response_time=float(\"inf\"),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if component_name == \"workflow\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif component_name == \"discord\":",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metrics.average_response_time = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metrics.max_response_time = max(metrics.max_response_time, response_time)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metrics.min_response_time = min(metrics.min_response_time, response_time)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "workflow_executions = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_executions = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "workflow_executions = workflow_stats.get(\"performance\", {}).get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_executions = discord_stats.get(\"performance\", {}).get(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms = 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avg_response_times = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 190,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=len(psutil.net_connections()),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "workflow_executions=workflow_executions,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_executions=command_executions,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 195,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=response_time_ms,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 205,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "active_connections=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "workflow_executions=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 208,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_executions=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=0.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 279,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.performance_history = self.performance_history[-1000:]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 304,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 305,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring_task = asyncio.create_task(self.monitoring_loop())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 314,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.is_monitoring = False",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 332,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"system_metrics\": snapshot.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 334,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "name: metrics.to_dict() for name, metrics in self.component_metrics.items()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 379,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "name: metrics.to_dict() for name, metrics in self.component_metrics.items()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 382,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "snapshot.to_dict()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 402,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "_global_monitor: RealTimePerformanceMonitor | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 409,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "_global_monitor = RealTimePerformanceMonitor(Path(\".\"))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 415,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = get_global_monitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\monitoring\\performance_monitor.py",
      "line": 421,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = get_global_monitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\activity_monitor.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "ACTIVITY_TIMEOUT_MINUTES = 30  # 30 minutes of inactivity = INACTIVE",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\fsm\\activity_monitor.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "MESSAGING_TIMEOUT_MINUTES = 15  # 15 minutes without messaging = INACTIVE",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\fsm\\activity_monitor.py",
      "line": 30,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.activity_data = self._load_activity_data()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\fsm\\captain_dashboard.py",
      "line": 27,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.activity_monitor = get_activity_monitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\captain_dashboard.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_needed = \"ONBOARD_OR_HIGH_PRIORITY_MESSAGE\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\captain_dashboard.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_needed = \"SEND_HIGH_PRIORITY_MESSAGE\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\captain_dashboard.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_needed = \"NONE\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\captain_dashboard.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def save_report(self, report: str, filename: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\fsm_messaging_integration.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\fsm\\fsm_messaging_integration.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.transition_log = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\fsm_messaging_integration.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "valid_transitions = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\fsm_messaging_integration.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_transitions = [t for t in self.transition_log if t.agent_id == agent_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\fsm_messaging_integration.py",
      "line": 136,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_transitions = [t for t in self.transition_log if t.agent_id == agent_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\fsm\\fsm_registry.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "SPEC_PATH = Path(\"runtime/fsm/fsm_spec.yaml\")",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\fsm\\fsm_registry.py",
      "line": 55,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "STATUS_POINTERS = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_infrastructure.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_data_management.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_data_management.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data = self.ml_system.create_training_data(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_model_management.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_model_management.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "model_versions = system_status.get(\"model_versions\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_model_management.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_results = self.ml_system.evaluate_model(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_deployment.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_monitoring.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_monitoring.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "alerts_data = self.core.storage.get_alerts(active_only=True)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_monitoring_core.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_monitoring_models.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "model_name: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_monitoring_models.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "model_version: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_monitoring_models.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "resolved_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_monitoring_storage.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_monitoring_storage.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.retention_days = retention_days",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_monitoring_storage.py",
      "line": 27,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.metrics_file = self.metrics_path / \"metrics.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\ml_monitoring_storage.py",
      "line": 28,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.alerts_file = self.metrics_path / \"alerts.json\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(training_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_time=0.1",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(test_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_time=0.1",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 98,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 102,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions=predictions,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=0.9,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 36,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 86,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = np.dot(data.features, self.weights) + self.bias",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 121,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = np.dot(features, self.weights) + self.bias",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 147,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = model_data[\"config\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 160,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 167,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.models_dir = self.ml_dir / \"models\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 168,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.data_dir = self.ml_dir / \"data\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 169,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.logs_dir = self.ml_dir / \"logs\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 275,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(test_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_fixed.py",
      "line": 282,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_features=val_features,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_labels=val_labels,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 192,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "epochs: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "batch_size: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 215,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data=(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 260,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(test_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 265,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accuracy = np.mean(predictions == test_data.labels)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 294,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_refactored.py",
      "line": 296,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 93,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_features=val_features,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 94,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_labels=val_labels,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 205,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "epochs: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "batch_size: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 247,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data = self._get_validation_data(training_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 254,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data=validation_data,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 293,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(test_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 301,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_results = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 303,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_compliant.py",
      "line": 323,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accuracy = np.mean(predictions == test_data.labels)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_features=features[train_size : train_size + val_size],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_labels=labels[train_size : train_size + val_size],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 163,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "epochs: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "batch_size: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data = self._get_val_data(training_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data=validation_data,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 237,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(test_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 245,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_final.py",
      "line": 262,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accuracy = np.mean(predictions == test_data.labels)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_features=features[train_size : train_size + val_size],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_labels=labels[train_size : train_size + val_size],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "epochs: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "batch_size: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data = (",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data=validation_data,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 215,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(test_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 219,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accuracy = np.mean(predictions == test_data.labels)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_optimal.py",
      "line": 257,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_features=features[train_size : train_size + val_size],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_labels=labels[train_size : train_size + val_size],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "epochs: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "batch_size: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data = self._get_validation_data(training_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 177,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data=validation_data,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 217,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(test_data.features)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 221,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accuracy = np.mean(predictions == test_data.labels)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_core_v2_perfect.py",
      "line": 259,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_fallback.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_fallback.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_fallback.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = np.dot(normalized_features, self.model_weights)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_fallback.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "one_hot_labels = np.eye(output_size)[data.labels.astype(int)]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_fallback.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = np.dot(normalized_features, self.model_weights)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_fallback.py",
      "line": 148,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = model_data[\"config\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_results = self.core.evaluate_model(model_name, training_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self.model_validator.validate_results(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_results = self.core.evaluate_model(model_name, training_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 159,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "comparison_results = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 168,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"metrics\": metrics.to_dict() if metrics else None,",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_manager.py",
      "line": 208,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "name: metrics.to_dict() for name, metrics in self.core.model_metrics.items()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 23,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def deploy_model(self, model_name: str, version: str | None = None) -> dict[str, Any]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "deployment_config = DeploymentConfig(version=version, environment=\"production\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def export_system_data(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def create_ml_pipeline(config: ModelConfig | None = None) -> MLPipelineSystem:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 50,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 93,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.model = self._create_model()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_split=0.2,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 176,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.model = self._create_model()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 221,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = self.model(X)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 228,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: ModelConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or ModelConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 282,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def save_model(self, model_name: str, filepath: str | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_system_v2.py",
      "line": 309,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def create_ml_pipeline(config: ModelConfig | None = None) -> MLPipelineSystem:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_utils.py",
      "line": 18,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_utils.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\ml_pipeline_utils.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.validation_count = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\ml_pipeline_utils.py",
      "line": 82,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_valid = self._validate_evaluation_results(evaluation_results)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_deployment.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "model_config: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_deployment.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = self.tf_infrastructure.predict(deployment[\"model_name\"], input_data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_deployment.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = self.pytorch_infrastructure.predict(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_deployment.py",
      "line": 134,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"predictions\": predictions.tolist()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\pipeline.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\pipeline.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\pipeline_v2.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\pipeline_v2.py",
      "line": 31,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\pytorch_infrastructure.py",
      "line": 119,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "{\"model_state_dict\": model.state_dict(), \"model_name\": model_name, \"version\": version},",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\pytorch_infrastructure.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model(data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\pytorch_infrastructure.py",
      "line": 177,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = torch.softmax(predictions, dim=1)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\pytorch_infrastructure.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "x_val: np.ndarray | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\pytorch_infrastructure.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "y_val: np.ndarray | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\tensorflow_infrastructure.py",
      "line": 162,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "predictions = model.predict(data)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\tensorflow_infrastructure.py",
      "line": 171,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "x_val: np.ndarray | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\tensorflow_infrastructure.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "y_val: np.ndarray | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\tensorflow_infrastructure.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\tensorflow_infrastructure.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data = (x_val, y_val)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\tensorflow_infrastructure.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_data=validation_data,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "started_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completed_at: datetime | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_message: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metrics: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.max_concurrent_jobs = 2",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config=config,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def list_jobs(self, status_filter: PipelineStatus | None = None) -> list[TrainingJob]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\training_pipeline.py",
      "line": 208,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "torch.save(model.state_dict(), f\"{model_path}.pth\")",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_automation.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_automation.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "retraining_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_automation.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_file = Path(\"src/ml/retraining_config.json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 30,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 38,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.contract_id = \"V3-007\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.ml_config = ModelConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_split=0.2,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.monitoring = MLMonitoringSystem(self.ml_system)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 71,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.implementation_steps = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_core.py",
      "line": 235,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_message = f\"\"\"üéâ V3-007 ML PIPELINE SETUP IMPLEMENTATION COMPLETED",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_monitoring.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\ml\\v3_007_monitoring.py",
      "line": 30,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\v3_007_monitoring.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_file = Path(\"src/ml/monitoring_config.json\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "description: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tags: list[str] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metrics: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "dependencies: dict[str, str] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version_obj = ModelVersion(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "versions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version_str = filename.replace(f\"{model_name}_\", \"\").replace('.json', '')",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_core.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version_obj = self.get_version(model_name, version)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "versions = self.core.list_versions(model_name)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "versions = [v for v in versions if v.status == status]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "production_versions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version_obj = self.core.get_version(model_name, version)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "versions = self.core.list_versions(model_name)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 125,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "versions_to_archive = versions[keep_count:]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version_obj = self.core.get_version(model_name, version)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\model_versioning_advanced.py",
      "line": 171,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "promotion_paths = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\validation_framework_core.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "metrics: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\validation_framework_core.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "model_name: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\validation_framework_core.py",
      "line": 50,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "version: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\validation_framework_core.py",
      "line": 100,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = ValidationResult(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\data_ingestion_system\\data_ingestion\\IngestManager.py",
      "line": 46,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.documents = self._process_files(files)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\data_ingestion_system\\data_ingestion\\IngestManager.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "md_content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\data_ingestion_system\\data_ingestion\\OrchestratorAgent.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.vector_store_agent = VectorStoreAgent(collection_name=vector_collection)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\data_ingestion_system\\data_ingestion\\VectorStoreAgent.py",
      "line": 20,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.collection_name = collection_name",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\ml\\data_ingestion_system\\data_ingestion\\VectorStoreAgent.py",
      "line": 29,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.collection = self._get_or_create_collection(self.collection_name)",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\ml\\data_ingestion_system\\data_ingestion\\__init__.py",
      "line": 12,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\infrastructure\\cloud\\__init__.py",
      "line": 17,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [\"CloudConfig\", \"ContainerOrchestrator\", \"ScalabilityManager\"]",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\agent_tracing.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\core.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.contract_id = \"V3-004\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\core.py",
      "line": 40,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.performance_monitoring = PerformanceMonitoringSetup()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\core.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\distributed_tracing.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\distributed_tracing_core.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\distributed_tracing_core.py",
      "line": 29,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\distributed_tracing_core.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.contract_id = \"V3-004\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_core.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.tracing_config = TraceConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_core.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.implementation_steps = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 48,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: TraceConfig | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or TraceConfig()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "attributes: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "parent_span: Any | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 154,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "name, context=parent_span, attributes=attributes or {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def add_span_event(self, span: Any, name: str, attributes: dict[str, Any] | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def set_span_status(self, span: Any, status: str, description: str | None = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 206,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, agent_id: str, operation: str, attributes: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 233,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "attributes: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 262,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "attributes: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 291,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "attributes: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 333,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def export_traces(self, output_file: str | None = None) -> str:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\distributed_tracing_system.py",
      "line": 369,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def create_tracing_system(config: TraceConfig | None = None) -> DistributedTracingSystem:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tracing\\fsm_tracing.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\infrastructure_setup.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\jaeger_backend.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\messaging_observability.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\tracing\\performance_monitoring.py",
      "line": 13,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\validation\\contract_system_validator.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_validation = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\contract_system_validator.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_contracts = self._get_agent_contracts(agent_id)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\contract_system_validator.py",
      "line": 32,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self._validate_contract_aspects(agent_contracts)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\contract_system_validator.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts_file = self.agent_workspaces / agent_id / \"future_tasks.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\contract_system_validator.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts_data = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\contract_system_validator.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contract_ids = {contract[\"task_id\"] for contract in contracts}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 37,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.false_positive_patterns = self._load_false_positive_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 38,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.security_patterns = self._load_security_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 39,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.input_validation_rules = self._load_input_validation_rules()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 39,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.input_validation_rules = self._load_input_validation_rules()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "real_violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 229,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "line_content=line,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violation_type=violation_type,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 233,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=0.9,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\enhanced_security_validator.py",
      "line": 245,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "line_content = finding.line_content.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\integration_validator.py",
      "line": 22,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "v3_components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\integration_validator.py",
      "line": 31,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components_status = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\integration_validator.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "all_components_present = all(components_status.values())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\performance_validator.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = (end_time - start_time).total_seconds()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\quality_gates_validator.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_status = self._check_configuration_files()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\security_validator.py",
      "line": 25,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "security_violations = self._scan_for_sensitive_info()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\security_validator.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "security_violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\security_validator.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read().lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\v3_directives_validator.py",
      "line": 26,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\v3_directives_validator.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts_valid = self._validate_v3_contracts(agent_id)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\v3_directives_validator.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts_file = self.agent_workspaces / agent_id / \"future_tasks.json\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\v3_directives_validator.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts_data = json.load(f)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\validation_framework_core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.validation_results = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\validation_framework_core.py",
      "line": 47,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\validation\\validation_framework_core.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_report = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.context_ttl = timedelta(hours=24)  # Context expires after 24 hours",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_key = f\"{user_id}:{agent_id}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 56,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = self.active_contexts[context_key]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_id = str(uuid.uuid4())",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = ConversationContext(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_id=conversation_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "system_context=self._load_system_context(),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_expiry=datetime.utcnow() + self.context_ttl,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 96,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context.context_expiry = datetime.utcnow() + self.context_ttl",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 122,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.context_manager = context_manager",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 123,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.response_templates = self._load_response_templates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_templates = self._load_response_templates()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 124,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.response_rules = self._load_response_rules()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_rules = self._load_response_rules()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = self.context_manager.get_or_create_context(user_id, agent_id)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 134,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_clues = self._analyze_message_context(message, context)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self._generate_typed_response(message, context, context_clues, response_type)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 224,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_keywords = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 250,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "enhanced_response = self._enhance_with_context(template, context, context_clues)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "final_response = self._apply_response_rules(enhanced_response, context_clues)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 276,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recent_context=len(recent_messages),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 287,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = f\"üö® **URGENT RESPONSE**\\n\\n{response}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 289,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = f\"‚ö†Ô∏è **HIGH PRIORITY**\\n\\n{response}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 293,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = f\"üéâ {response}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 295,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = f\"üîß **Issue Resolution:**\\n\\n{response}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 333,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_key = f\"{user_id}:{agent_id}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 361,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_key = f\"{user_id}:{agent_id}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 362,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversations = self.conversations.get(conversation_key, [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 367,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_key = f\"{user_id}:{agent_id}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 369,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversations = self.conversations.get(conversation_key, [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 386,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conversation_tracker = conversation_tracker",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 397,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_info = f\"\\n\\n**Conversation Context:** {stats['message_count']} messages, \"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 425,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_manager = MemoryContextManager()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 426,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_generator = ResponseGenerator(context_manager)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 427,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conversation_tracker = ConversationTracker()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 428,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_injector = ContextInjector(conversation_tracker)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 436,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = response_generator.generate_response(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 446,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = response_generator.generate_response(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\memory_aware_responses.py",
      "line": 455,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "enhanced_response = context_injector.inject_context(response, user_id, agent_id)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\template_messaging.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\template_messaging.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\template_messaging.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\template_messaging.py",
      "line": 183,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\template_messaging.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\template_messaging.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self, name: str, template_content: str, metadata: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 34,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intents.message_content = True",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 43,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.context_manager = MemoryContextManager(memory_backend)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_generator = ResponseGenerator(self.context_manager)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conversation_tracker = ConversationTracker()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.context_injector = ContextInjector(self.conversation_tracker)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 58,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_hub = CoordinationHub()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self.response_generator.generate_response(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 121,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "enhanced_response = self.context_injector.inject_context(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = message.content.lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 231,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_data = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 316,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.context_manager = context_manager",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 317,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_generator = ResponseGenerator(context_manager)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 329,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_hub = coordination_hub",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\enhanced_bot_engine.py",
      "line": 349,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = {\"agent_id\": \"Agent-2\", \"prefix\": \"!\", \"template_dir\": \"templates/discord\"}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\discord\\realtime_coordination_core.py",
      "line": 113,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "self.active_agents = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\discord\\realtime_coordination_advanced.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_history = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\clone_automation.py",
      "line": 142,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "files_cloned = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\clone_automation.py",
      "line": 163,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_cmd = [\"git\", \"clone\", task.url, task.local_path]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\clone_automation.py",
      "line": 170,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "files_cloned = self._count_files(task.local_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\clone_automation.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_result = CloneResult(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\clone_automation.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "files_cloned=files_cloned,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.consolidation_report = ConsolidationReport(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_duplications=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "critical_duplications=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "high_priority_duplications=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 79,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "medium_priority_duplications=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 80,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "low_priority_duplications=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ssot_violations=0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.duplications = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 97,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidation_plan=\"Create unified memory management system with single database\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidation_plan=\"Merge both implementations into single prompt manager\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 119,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidation_plan=\"Create unified coordinate loading system\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 130,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "consolidation_plan=\"Merge ML pipeline implementations into single core\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\consolidation_analyzer.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "duplication_ratio = (total_files - unique_files) / total_files if total_files > 0 else 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 224,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "files_cloned = 0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 234,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_cmd = [\"git\", \"clone\", repo.url, repo.local_path]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 239,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "files_cloned = self._count_cloned_files(repo.local_path)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 251,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_result = CloneResult(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 254,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "duration_seconds=duration,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 257,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "files_cloned=files_cloned,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 309,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_analyzer.py",
      "line": 312,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "failed_clones = self.get_failed_clones()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\repository_manager.py",
      "line": 90,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.error_resolutions = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 74,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.themes = self._initialize_themes()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 75,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.extensions = self._initialize_extensions()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.extensions = self._initialize_extensions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 76,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.layouts = self._initialize_layouts()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accessibility_contrast=4.5,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accessibility_contrast=7.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 120,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accessibility_contrast=21.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 310,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "extensions = interface.get_agent_specific_extensions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization.py",
      "line": 325,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = create_agent_optimized_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 69,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.themes = self._initialize_themes()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 70,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.extensions = self._initialize_extensions()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.extensions = self._initialize_extensions()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 71,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.layouts = self._initialize_layouts()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accessibility_contrast=4.5,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "accessibility_contrast=7.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 175,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "extensions = [ext for ext in self.extensions if ext.agent_specific]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_customization_core.py",
      "line": 257,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = core.get_agent_optimized_config()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_integration.py",
      "line": 81,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=VSCodeComponent.CORE,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_integration.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=VSCodeComponent.EXTENSIONS,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_integration.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=VSCodeComponent.THEMES,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_integration.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "integration_data = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_integration.py",
      "line": 131,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if task.component == VSCodeComponent.CORE:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_integration.py",
      "line": 133,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "clone_result = repo_manager.clone_repository_by_url(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_integration.py",
      "line": 222,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component.value: len([t for t in self.fork_tasks if t.component == component])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "functions = len([node for node in ast.walk(tree) if isinstance(node, ast.FunctionDef)])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 75,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = self._check_v2_violations(line_count, enums, classes, functions, tree)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 77,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = self._generate_recommendations(violations, vscode_issues)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 89,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=violations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations=[f\"Error parsing file: {str(e)}\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 101,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[\"Fix syntax errors before quality assessment\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "violations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\team_beta\\vscode_quality_gates.py",
      "line": 199,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def __init__(self, config: AssessmentConfiguration = None):",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config or AssessmentConfiguration(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 36,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "max_concurrent_assessments=5,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "timeout_seconds=300.0,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 41,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "notification_enabled=True,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 48,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.current_report: IntegrationReport | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 103,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"assessment\": assessment.to_dict(),",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_assessments = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 150,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "\"assessments\": [a.to_dict() for a in component_assessments],",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 156,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_components = len(self.components)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "assessed_components = len(set(a.details.get(\"component_id\") for a in self.assessments))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 171,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "all_recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "total_components=total_components,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "assessed_components=assessed_components,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations_count=len(all_recommendations),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 228,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "all_recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 233,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "unique_recommendations = list(set(all_recommendations))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_v2.py",
      "line": 249,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 27,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 38,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.current_platform = self._detect_platform()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = self.components[component_id]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 84,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 111,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component.name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 128,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "perf_config = component.configuration.get(\"performance\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 146,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cache_config = component.configuration.get(\"caching\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component.name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 173,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "automation_config = component.configuration.get(\"automation\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "ci_config = automation_config.get(\"ci_cd\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "test_config = automation_config.get(\"testing\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component.name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 201,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 215,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 219,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "test_config = component.configuration.get(\"testing\", {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 227,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "integration_tests = test_config.get(\"integration_tests\", [])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 243,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component.name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 246,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=recommendations,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 260,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component.name,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 263,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[\"Generic assessment completed\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 277,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_assessment_engine.py",
      "line": 280,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[\"Review error and retry assessment\"],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\integration_models.py",
      "line": 157,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_score = max(0, 100 - (self.response_time * 10))  # Lower is better",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_core.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_core.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "recommendations=[],",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_core.py",
      "line": 118,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if assessment.component == component:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_utils.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "completion_rate = sum(1 for a in assessments if a.status == AssessmentStatus.COMPLETED) / len(assessments)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 37,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.current_platform = self.platform_detector.detect_platform()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.core.configuration = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 110,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component=component,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 129,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "platform_bonus = 5.0 if self.current_platform in ['windows', 'linux', 'darwin'] else 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_results = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment_main.py",
      "line": 239,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = create_assessment_configuration(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\comprehensive_integration_assessment.py",
      "line": 33,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\integration\\qa_coordination\\__init__.py",
      "line": 38,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 34,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.phase3_status = self._initialize_phase3_status()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 36,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_expertise = self._define_agent_expertise()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "production_ready=True,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 88,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_responsible=agent_responsible,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 108,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.coordination_plan = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 140,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_responsible=\"Agent-8\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_responsible=\"Agent-6\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_responsible=\"Agent-6\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_responsible=\"Agent-8\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_responsible=\"Agent-8\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 236,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_plan = self.create_coordination_plan()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 242,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_protocols = create_advanced_validation_protocols()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\core_coordination.py",
      "line": 302,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "coordination_plan = coordination.create_coordination_plan()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\performance_validation.py",
      "line": 116,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = end_time - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\performance_validation.py",
      "line": 147,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = end_time - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\performance_validation.py",
      "line": 181,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = end_time - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\performance_validation.py",
      "line": 212,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_time = end_time - start_time",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\performance_validation.py",
      "line": 320,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_times = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\performance_validation.py",
      "line": 346,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self.run_performance_validation()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.validation_protocols = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 22,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent6_expertise = self._load_agent6_expertise()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 23,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.validation_results = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "function_count = content.count(\"def \")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f.read()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 203,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_patterns = [\"config\", \"settings\", \"constants\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\validation_protocols.py",
      "line": 204,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "has_config = any(pattern in content.lower() for pattern in config_patterns)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.integration_status = \"INITIALIZING\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
      "line": 37,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.integration_status = \"OPERATIONAL\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
      "line": 126,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = result.get(\"content\", \"\").lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = result.get(\"content\", \"\").lower()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
      "line": 189,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "\"vector_search_ready\": self.integration_status == \"OPERATIONAL\",",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\integration\\qa_coordination\\vector_database_integration.py",
      "line": 208,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "integration_result = integration.integrate_vector_search_with_qa()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_004_distributed_tracing.py",
      "line": 26,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_004_distributed_tracing.py",
      "line": 33,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "V3_004_DistributedTracing = TracingCoordinator",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_data.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_data.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_data.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_data.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rds_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_data.py",
      "line": 106,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "redis_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_models.py",
      "line": 49,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_networking.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_networking.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_networking.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_networking.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "vpc_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_networking.py",
      "line": 132,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "eks_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_security.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_security.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_security.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\cloud_infrastructure_security.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "security_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_core.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\ml_pipeline_core.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\ml_pipeline_core.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.contract_id = \"V3-007\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_core.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.ml_config = ModelConfig(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_core.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "training_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "versioning_success = self.ml_system.setup_model_versioning()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "evaluation_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 78,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "deployment_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 104,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitoring_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor_success = self.ml_system.setup_monitoring_system(monitoring_config)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 130,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "retraining_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\ml_pipeline_operations.py",
      "line": 156,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self.ml_system.validate_system()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_infrastructure.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\tracing_infrastructure.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\tracing_infrastructure.py",
      "line": 29,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.contract_id = \"V3-004\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_infrastructure.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config_success = self.tracing.configure_tracing()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_infrastructure.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "jaeger_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_infrastructure.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "agent_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_infrastructure.py",
      "line": 120,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "fsm_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_observability.py",
      "line": 14,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\tracing_observability.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\tracing_observability.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "messaging_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_observability.py",
      "line": 61,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "performance_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_observability.py",
      "line": 92,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "error_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_observability.py",
      "line": 118,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_results = self.tracing.validate_system()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\tracing_observability.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "visualization_working = self.tracing.test_trace_visualization()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 65,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.command_patterns = self._initialize_command_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 66,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.parameter_extractors = self._initialize_parameter_extractors()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 67,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.priority_indicators = self._initialize_priority_indicators()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 137,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "command_type, confidence = self._classify_command_type(cleaned_text)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 152,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context=context,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 153,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 187,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "best_confidence = 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 190,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = self._calculate_pattern_confidence(text, patterns)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 192,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "best_confidence = confidence",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 210,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_mapping = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 249,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.execution_handlers = self._initialize_execution_handlers()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 249,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.execution_handlers = self._initialize_execution_handlers()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 270,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 278,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_result = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 338,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = CommandContext(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 346,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "execution_result = self.executor.execute_command(parsed_command)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_command_understanding.py",
      "line": 378,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "command_system = CommandUnderstandingSystem()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 51,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.intent_patterns = self._initialize_intent_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 52,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.keyword_weights = self._initialize_keyword_weights()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 53,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.context_indicators = self._initialize_context_indicators()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 53,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.context_indicators = self._initialize_context_indicators()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 54,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.entity_patterns = self._initialize_entity_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 222,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_clues = self._extract_context_clues(cleaned_text)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 225,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "category, subcategory, confidence = self._classify_intent(cleaned_text, keywords)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 228,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence_level = self._determine_confidence_level(confidence)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 233,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 234,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence_level=confidence_level,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 237,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context_clues=context_clues,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 287,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "best_confidence = 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 291,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = self._calculate_intent_confidence(text, patterns, keywords)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 293,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "best_confidence = confidence",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 318,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = (pattern_score * 0.7) + (keyword_score * 0.3)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 352,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence_levels = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 358,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence_level = result.confidence_level.value",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_intent_recognition.py",
      "line": 386,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "intent_system = IntentRecognitionSystem()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 61,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.intent_patterns = self._initialize_intent_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 62,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.entity_patterns = self._initialize_entity_patterns()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 63,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.response_templates = self._initialize_response_templates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 63,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.response_templates = self._initialize_response_templates()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 151,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "intent_type, confidence = self._classify_intent(processed_text)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 188,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "best_confidence = 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 191,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence = self._calculate_pattern_confidence(text, patterns)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 193,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "best_confidence = confidence",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 217,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = self._customize_response(template[\"text\"], intent.entities)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 218,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions = template[\"actions\"].copy()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 229,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_type=self._determine_response_type(intent.intent_type),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 231,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "actions=actions,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 232,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "confidence=intent.confidence,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 238,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = template",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 241,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = content.replace(\"you\", f\"Agent-{entities['agent_id']}\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 267,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.command_handlers = self._initialize_command_handlers()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 286,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self.nlp_pipeline.generate_response(intent)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 289,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "action_results = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_nlp_pipeline.py",
      "line": 373,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "nlp_system = NLPSystem()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 22,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 131,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.metrics = self.metrics[-self.max_metrics :]",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_times = [m.response_time_ms for m in endpoint_metrics]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "avg_response_time = sum(m.response_time_ms for m in self.metrics) / total_requests",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 198,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=response_time_ms,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 267,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "monitor = APIMonitor()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_advanced.py",
      "line": 280,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response_time_ms=50 + i * 10,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_core.py",
      "line": 21,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_core.py",
      "line": 24,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_core.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rate_limit: int | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_core.py",
      "line": 151,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rate_limit: int | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_core.py",
      "line": 169,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "body: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_011_api_gateway_core.py",
      "line": 176,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = RequestContext(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework.py",
      "line": 32,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework.py",
      "line": 59,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = create_mobile_component(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 62,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_id=component_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 64,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=ComponentType.BUTTON,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 83,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_id=component_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 85,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=ComponentType.INPUT,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 103,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_id=component_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 105,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=ComponentType.TEXT,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 121,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_id=component_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=ComponentType.CARD,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 143,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_id=component_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 145,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=ComponentType.LIST,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.rendered_components = {}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 179,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "rendered_components = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 226,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if component.component_type == ComponentType.BUTTON:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 230,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif component.component_type == ComponentType.INPUT:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 253,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_results = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 285,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = [button, input_field, text, card, list_comp]",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 288,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "validation_result = validator.validate_screen(components)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_components.py",
      "line": 299,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "updated_component = renderer.get_component(\"btn1\")",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.component_factory = ComponentFactory()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 51,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 65,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components=components,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 73,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 87,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components=components,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 99,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 114,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components=components,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 122,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components=components,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 218,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.navigation_flows = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 271,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "nav_controller = NavigationController()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_ui_screens.py",
      "line": 286,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "screen_list = nav_controller.screen_manager.get_screen_list()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\web_dashboard_api.py",
      "line": 16,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\web_dashboard_api.py",
      "line": 19,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\web_dashboard_api.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "contracts = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_api.py",
      "line": 155,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_api.py",
      "line": 186,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "websocket_config = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 15,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "project_root = Path(__file__).parent.parent.parent",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 20,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "logger = logging.getLogger(__name__)",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 28,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 35,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 72,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 118,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 180,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_components.py",
      "line": 224,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\web_dashboard_models.py",
      "line": 45,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.components = [",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "conditions: list[str] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.conditions = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 66,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "template_id: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 67,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "custom_template: str | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "variables: dict[str, Any] | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 69,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone: ResponseTone | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 70,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "format: ResponseFormat | None = None",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 107,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone=ResponseTone.PROFESSIONAL,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 115,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone=ResponseTone.PROFESSIONAL,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 123,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone=ResponseTone.URGENT,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 136,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = self._process_template(template, request)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 141,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone=request.tone or template.tone,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 144,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "generation_time=datetime.now(),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 158,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = template.template",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_core.py",
      "line": 163,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = content.replace(placeholder, str(value))",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "cached_response = self.cache.get(cache_key)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 52,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response = self.core.generate_response(request)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 55,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "response.content = format_response_content(response.content, response.format)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 117,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone: ResponseTone = ResponseTone.PROFESSIONAL,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 118,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "format_type: ResponseFormat = ResponseFormat.TEXT,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 124,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone=tone,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 159,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content=content,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 161,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "tone=request.tone or ResponseTone.PROFESSIONAL,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 164,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "generation_time=datetime.now(),",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 185,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_main.py",
      "line": 186,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "variables: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_utils.py",
      "line": 127,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "common_words = {",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_utils.py",
      "line": 196,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "template_id: str | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_utils.py",
      "line": 197,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "variables: dict[str, Any] | None = None,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_utils.py",
      "line": 202,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "context = ResponseContext(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_009_response_generation_utils.py",
      "line": 211,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "return ResponseRequest(context=context, template_id=template_id, variables=variables or {})",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
      "line": 57,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.platform_configs = self._initialize_platform_configs()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
      "line": 57,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.platform_configs = self._initialize_platform_configs()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
      "line": 109,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = MobileComponent(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
      "line": 110,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_id=component_id,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
      "line": 112,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component_type=component_type,",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_core.py",
      "line": 138,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def list_components(self, platform: Platform | None = None) -> list[MobileComponent]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 54,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "def list_components(self, platform: Platform | None = None) -> list[MobileComponent]:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 68,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.build_configs = self._initialize_build_configs()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 68,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.build_configs = self._initialize_build_configs()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 91,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "components = []",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 139,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "config = self.build_configs.get(environment, self.build_configs[\"development\"])",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 149,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "mobile_framework = MobileAppFramework()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 150,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "mobile_builder = MobileAppBuilder()",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_main.py",
      "line": 184,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "component = create_mobile_component(",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
      "line": 21,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.component_templates = self._initialize_component_templates()",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
      "line": 21,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.component_templates = self._initialize_component_templates()",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
      "line": 172,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "if component.component_type == ComponentType.SCREEN:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\v3\\v3_012_mobile_app_framework_templates.py",
      "line": 174,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "elif component.component_type == ComponentType.WIDGET:",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\aletheia\\aletheia_prompt_manager.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "optimization_level: OptimizationLevel = OptimizationLevel.STANDARD",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\aletheia\\aletheia_prompt_manager.py",
      "line": 42,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\aletheia\\aletheia_prompt_manager.py",
      "line": 44,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.generation_time = 0.0",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\aletheia\\aletheia_prompt_manager.py",
      "line": 76,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.generation_time = (time.time() - start_time) * 1000",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\aletheia\\aletheia_prompt_manager.py",
      "line": 95,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "content = f\"{context}:{intent}:{prompt_type.value}\"",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\aletheia\\aletheia_prompt_manager.py",
      "line": 153,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "# config = PromptConfig(max_length=500, optimization_level=OptimizationLevel.STANDARD, cache_size=50)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\memory\\persistent_memory.py",
      "line": 46,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "self.config = config",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\memory\\persistent_memory.py",
      "line": 199,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "# config = MemoryConfig(max_size=512*1024, compression_enabled=True, cache_size=50)",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tools\\swarm_workflow_orchestrator_core.py",
      "line": 23,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.agent_workspaces = self.project_root / \"agent_workspaces\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\tools\\swarm_workflow_orchestrator_core.py",
      "line": 24,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.devlogs = self.project_root / \"devlogs\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\tools\\swarm_workflow_orchestrator_core.py",
      "line": 25,
      "type": "circular_references",
      "severity": "MEDIUM",
      "description": "Potential circular reference",
      "code": "self.tools = self.project_root / \"src\" / \"tools\"",
      "recommendation": "Use weakref or break the circular reference"
    },
    {
      "file": "src\\tools\\swarm_workflow_orchestrator_core.py",
      "line": 182,
      "type": "large_data_structures",
      "severity": "LOW",
      "description": "Large data structure that may grow indefinitely",
      "code": "agents = set()",
      "recommendation": "Consider size limits or cleanup mechanisms"
    },
    {
      "file": "src\\tools\\swarm_workflow_orchestrator_utils.py",
      "line": 33,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "message_content = f\"\"\"============================================================",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tools\\swarm_workflow_orchestrator_utils.py",
      "line": 74,
      "type": "event_handlers",
      "severity": "MEDIUM",
      "description": "Event handler that may not be removed",
      "code": "devlog_content = f\"\"\"# {title}",
      "recommendation": "Ensure event handlers are properly removed"
    },
    {
      "file": "src\\tools\\swarm_workflow_orchestrator.py",
      "line": 25,
      "type": "global_variables",
      "severity": "LOW",
      "description": "Global variable that may accumulate data",
      "code": "__all__ = [",
      "recommendation": "Consider using local variables or cleanup mechanisms"
    }
  ]
}