[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    -v                          # Verbose output
    --strict-markers            # Strict marker validation
    --disable-warnings          # Suppress warnings
    --tb=short                 # Short traceback format
    --durations=10             # Show 10 slowest tests
    --maxfail=5                # Stop after 5 failures
    --timeout=300              # Default timeout 5 minutes
    
# Coverage configuration
    --cov=src                  # Measure coverage of src directory
    --cov=tests                # Measure coverage of tests directory
    --cov-report=term-missing  # Show missing lines in terminal
    --cov-report=html          # Generate HTML coverage report
    --cov-report=xml           # Generate XML coverage report
    --cov-report=json          # Generate JSON coverage report
    --cov-fail-under=80        # Fail if coverage below 80%
    --cov-config=.coveragerc   # Use custom coverage config

# Test markers
markers =
    # Test types
    unit: marks tests as unit tests
    integration: marks tests as integration tests
    smoke: marks tests as smoke tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    api: marks tests as API tests
    
    # Test characteristics
    slow: marks tests as slow (deselect with '-m "not slow"')
    fast: marks tests as fast
    critical: marks tests as critical (must pass)
    optional: marks tests as optional
    
    # Component categories
    core: marks tests for core components
    services: marks tests for service components
    launchers: marks tests for launcher components
    utils: marks tests for utility components
    web: marks tests for web interface components
    
    # Special markers
    v2_standards: marks tests for V2 coding standards compliance
    cli: marks tests for CLI interface validation
    oop: marks tests for OOP design validation

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# Test collection
collect_ignore =
    .git
    __pycache__
    .pytest_cache
    venv*
    node_modules
    dist
    build

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeout configuration
timeout = 300
timeout_method = thread
