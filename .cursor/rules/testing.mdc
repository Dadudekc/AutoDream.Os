---
description: Testing standards and requirements for V2 compliance
globs:
  - "tests/**"
  - "**/*test*.py"
  - "**/*spec*.ts"
alwaysApply: false
---

## **ðŸ§ª TESTING REQUIREMENTS**
- All new features require **unit tests**
- Use **Jest** for JavaScript/TypeScript testing
- Use **pytest** for Python testing
- Mock external APIs and database calls
- Maintain coverage above **85%**

## **ðŸ“‹ TEST NAMING CONVENTIONS**
- Test files: `test_*.py` or `*.test.ts`
- Test functions: `test_*` or `describe/it` blocks
- Clear, descriptive test names (no abbreviations)
- Group related tests with `describe` blocks

## **ðŸŽ¯ TEST STRUCTURE**
```python
# Python example
def test_feature_success_case():
    # Arrange
    setup_test_data()

    # Act
    result = feature_under_test()

    # Assert
    assert result == expected_value

# JavaScript/TypeScript example
describe('Feature Under Test', () => {
  it('should handle success case', () => {
    // Arrange
    const testData = setupTestData();

    // Act
    const result = featureUnderTest(testData);

    // Assert
    expect(result).toBe(expectedValue);
  });
});
```

## **ðŸ”§ MOCKING REQUIREMENTS**
- Mock all external API calls
- Mock database interactions
- Mock file system operations
- Use appropriate mocking libraries (unittest.mock, jest.mock)

## **ðŸ“Š COVERAGE STANDARDS**
- Minimum coverage: **85%**
- Cover both success and error paths
- Include edge cases and boundary conditions
<<<<<<< HEAD
- Run coverage reports in CI/CD pipeline
=======
- Run coverage reports in CI/CD pipeline
>>>>>>> origin/cursor/refactor-dashboard-js-to-under-300-lines-dc65
